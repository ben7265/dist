{
  "collections": {
    "default": {
      "tag": "collections",
      "attribs": {
        "name": "default",
        "class": "default"
      },
      "children": [
        {
          "tag": "collection",
          "attribs": {
            "name": "urls",
            "class": "urls",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "url_index",
                "type": "unique",
                "class": "url_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "type_index",
                "class": "type_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "type"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "object_name_index",
                "class": "object_name_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "object-name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "object_data",
            "class": "object_data",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "name_index",
                "type": "unique",
                "class": "name_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "object_name_index",
                "class": "object_name_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "object-name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "type_index",
                "class": "type_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "type"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "urls_index",
                "class": "urls_index",
                "child-idx": 3
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "urls"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "created_index",
                "class": "created_index",
                "child-idx": 4
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "created"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "text_index",
                "class": "text_index",
                "child-idx": 5
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "$**"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "text"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "users",
            "class": "users",
            "child-idx": 2
          },
          "children": [
            {
              "tag": "struct",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "key",
                  "attribs": {
                    "type": "uuid",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "email",
                  "attribs": {
                    "type": "email",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "password",
                  "attribs": {
                    "child-idx": 2
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "name",
                  "attribs": {
                    "child-idx": 3
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "role",
                  "attribs": {
                    "default": "user",
                    "child-idx": 4
                  },
                  "children": [
                    {
                      "tag": "user",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "admin",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "email_index",
                "unique": "1",
                "class": "email_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "email"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "key_index",
                "unique": "1",
                "class": "key_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "key"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "constants",
            "class": "constants",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "scope_index",
                "class": "scope_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "scope"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "name_index",
                "class": "name_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "function": {
    "code": {
      "tag": "function",
      "attribs": {
        "name": "code",
        "class": "code"
      },
      "children": [],
      "text": "[$_text]"
    },
    "reload": {
      "tag": "function",
      "attribs": {
        "name": "reload",
        "class": "reload"
      },
      "children": [],
      "text": "window.location.reload();"
    },
    "transaction": {
      "tag": "function",
      "attribs": {
        "name": "transaction",
        "class": "transaction"
      },
      "children": [],
      "text": "var target = toolbarParent;if ('[$target]' == 'event-target') {target = eventCurrentTarget;}const result = await wxfns.transaction(target, '[$name]', [$data||null]);if (result.rc != 'success') {return;}toolbarParent['[$output]'] = result.output;"
    },
    "upload": {
      "tag": "function",
      "attribs": {
        "name": "upload",
        "class": "upload"
      },
      "children": [],
      "text": "var formData = null;const result = await wxfns.upload(toolbarParent, '[$name]', null, toolbarParent['[$file]']);if (result.rc != 'success') {return;}toolbarParent['[$file-url]'] = result.output;"
    },
    "confirm": {
      "tag": "function",
      "attribs": {
        "name": "confirm",
        "class": "confirm"
      },
      "children": [],
      "text": "if (!await wxfns.confirm('[$_text]', '[$heading||Are you sure?]', '[$yestext||Yes]', '[$notext||No]')) {return;}"
    },
    "inform": {
      "tag": "function",
      "attribs": {
        "name": "inform",
        "class": "inform"
      },
      "children": [],
      "text": "await wxfns.inform('[$message]', [$timeout||0]);"
    },
    "error": {
      "tag": "function",
      "attribs": {
        "name": "error",
        "class": "error"
      },
      "children": [],
      "text": "await wxfns.error('[$heading]', '[$message]');"
    },
    "selectfile": {
      "tag": "function",
      "attribs": {
        "name": "selectfile",
        "class": "selectfile"
      },
      "children": [],
      "text": "toolbarParent['[$file]'] = await wxfns.selectFile('[$file-type]');"
    },
    "remove-class": {
      "tag": "function",
      "attribs": {
        "name": "remove-class",
        "class": "remove-class"
      },
      "children": [],
      "text": "wxfns.removeClass(fntarget, '[$classes]');"
    },
    "add-class": {
      "tag": "function",
      "attribs": {
        "name": "add-class",
        "class": "add-class"
      },
      "children": [],
      "text": "wxfns.addClass(fntarget, '[$classes]');"
    },
    "unset-var": {
      "tag": "function",
      "attribs": {
        "name": "unset-var",
        "class": "unset-var"
      },
      "children": [],
      "text": "delete fntarget['[$name]'];"
    },
    "set-var": {
      "tag": "function",
      "attribs": {
        "name": "set-var",
        "class": "set-var"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget['[$name]'] = '[$value]';}else{fntarget['[$name]'] = [$_text];}"
    },
    "get-value": {
      "tag": "function",
      "attribs": {
        "name": "get-value",
        "class": "get-value"
      },
      "children": [],
      "text": "const fargs = [$_fargs];fargs.value = toolbarParent[fargs.value];const value = await wxfns.getValue('[$name]', '[$type]', '[$title]', fargs);if (value == null) {return;}fntarget['[$name]'] = value;"
    },
    "log-var": {
      "tag": "function",
      "attribs": {
        "name": "log-var",
        "class": "log-var"
      },
      "children": [],
      "text": "common.info(fntarget['[$name]']);"
    },
    "set-style": {
      "tag": "function",
      "attribs": {
        "name": "set-style",
        "class": "set-style"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.style['[$name]'] = '[$value]';}else{fntarget.style['[$name]'] = [$_text];}"
    },
    "unset-style": {
      "tag": "function",
      "attribs": {
        "name": "unset-style",
        "class": "unset-style"
      },
      "children": [],
      "text": "fntarget.style['[$name]'] = null;"
    },
    "set-attrib": {
      "tag": "function",
      "attribs": {
        "name": "set-attrib",
        "class": "set-attrib"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.setAttribute('[$name]', '[$value]');}else{fntarget.setAttribute('[$name]', [$_text]);}"
    },
    "unset-attrib": {
      "tag": "function",
      "attribs": {
        "name": "unset-attrib",
        "class": "unset-attrib"
      },
      "children": [],
      "text": "fntarget.removeAttribute('[$name]');"
    },
    "alert": {
      "tag": "function",
      "attribs": {
        "name": "alert",
        "class": "alert"
      },
      "children": [],
      "text": "if ('[$message||null]' != 'null') {alert('[$message]');}else{alert([$_text]);}"
    },
    "set-css-var": {
      "tag": "function",
      "attribs": {
        "name": "set-css-var",
        "class": "set-css-var"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.style.setProperty('[$name]', '[$value]');}else{fntarget.style.setProperty('[$name]', [$_text]);}"
    },
    "unset-css-var": {
      "tag": "function",
      "attribs": {
        "name": "unset-css-var",
        "class": "unset-css-var"
      },
      "children": [],
      "text": "fntarget.style.removeProperty('[$name]');"
    },
    "save-value": {
      "tag": "function",
      "attribs": {
        "name": "save-value",
        "class": "save-value"
      },
      "children": [],
      "text": "var result = null;if ('[$value||null]' != 'null') {result = await wxfns.transaction(eventCurrentTarget, 'save-page-data', '[$value]');}else{result = await wxfns.transaction(eventCurrentTarget, 'save-page-data', [$_text]);}if (result && result.rc != 'success') {return;}eventCurrentTarget.result = result;"
    }
  },
  "view": {
    "v.input": {
      "tag": "view",
      "attribs": {
        "name": "v.input",
        "element": "div",
        "class": "v.input"
      },
      "children": [
        {
          "tag": "row",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "column",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "span",
                  "attribs": {
                    "class": "input_label",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "[$label]"
                }
              ],
              "text": null
            },
            {
              "tag": "column",
              "attribs": {
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "input",
                  "attribs": {
                    "name": "[$name]",
                    "type": "[$type]",
                    "placeholder": "[$placeholder]",
                    "class": "[$name]",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "span",
          "attribs": {
            "class": "input_error",
            "child-idx": 1
          },
          "children": [],
          "text": null
        }
      ],
      "text": null
    },
    "v.loginform": {
      "tag": "view",
      "attribs": {
        "name": "v.loginform",
        "class": "v.loginform"
      },
      "children": [
        {
          "tag": "h1",
          "attribs": {
            "class": "form_heading",
            "child-idx": 0
          },
          "children": [],
          "text": "[$heading||Login Form]"
        },
        {
          "tag": "div",
          "attribs": {
            "class": "form_body",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "row",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "span",
                      "attribs": {
                        "class": "input_label",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Email"
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "name": "email",
                        "type": "email",
                        "placeholder": "Email",
                        "class": "email",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "span",
              "attribs": {
                "class": "input_error email",
                "child-idx": 1
              },
              "children": [],
              "text": null
            },
            {
              "tag": "row",
              "attribs": {
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "span",
                      "attribs": {
                        "class": "input_label",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Password"
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "name": "password",
                        "type": "password",
                        "placeholder": "Password",
                        "class": "password",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "span",
              "attribs": {
                "class": "input_error password",
                "child-idx": 3
              },
              "children": [],
              "text": null
            },
            {
              "tag": "row",
              "attribs": {
                "child-idx": 4
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "type": "checkbox",
                        "name": "remember",
                        "value": "remember",
                        "class": "remember",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": "Remember Me"
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "div",
          "attribs": {
            "class": "form_error",
            "child-idx": 2
          },
          "children": [],
          "text": null
        },
        {
          "tag": "div",
          "attribs": {
            "style": "text-align: center",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "button",
              "attribs": {
                "child-idx": 0
              },
              "children": [],
              "text": "Login"
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.unauthorised": {
      "tag": "view",
      "attribs": {
        "name": "v.unauthorised",
        "class": "v.unauthorised"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "You are not authorised to view this page."
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.notfound": {
      "tag": "view",
      "attribs": {
        "name": "v.notfound",
        "class": "v.notfound"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Page not found."
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.error": {
      "tag": "view",
      "attribs": {
        "name": "v.error",
        "class": "v.error"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Error: [$error]"
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "object-list-toolbar": {
      "tag": "view",
      "attribs": {
        "name": "object-list-toolbar",
        "class": "object-list-toolbar"
      },
      "children": [
        {
          "tag": "toolbar",
          "attribs": {
            "name": "object-list-toolbar",
            "class": "object-list-toolbar",
            "object-type": "[@object-type]",
            "top": "[$toolbar-top||0]",
            "right": "[$toolbar-right||0]",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "icon",
              "attribs": {
                "name": "add",
                "class": "add",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "tooltip",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "add [@object-label]"
                },
                {
                  "tag": "click",
                  "attribs": {
                    "name": "_eventObjectAdd",
                    "class": "_eventObjectAdd",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "transaction",
                      "attribs": {
                        "name": "add-object",
                        "class": "add-object",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "reload",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "object-item-toolbar": {
      "tag": "view",
      "attribs": {
        "name": "object-item-toolbar",
        "class": "object-item-toolbar"
      },
      "children": [
        {
          "tag": "toolbar",
          "attribs": {
            "name": "object-item-toolbar",
            "class": "object-item-toolbar",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "icon",
              "attribs": {
                "name": "remove",
                "object-type": "[@object-type]",
                "object-name": "[@object-name]",
                "class": "remove",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "tooltip",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "delete [@object-label]"
                },
                {
                  "tag": "click",
                  "attribs": {
                    "name": "_eventObjectDelete",
                    "class": "_eventObjectDelete",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "confirm",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Do you want to delete object [@object-name]?"
                    },
                    {
                      "tag": "transaction",
                      "attribs": {
                        "name": "delete-object",
                        "target": "event-target",
                        "class": "delete-object",
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "reload",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "db": {
    "wx_demo": {
      "tag": "db",
      "attribs": {
        "name": "wx_demo",
        "class": "wx_demo"
      },
      "children": [],
      "text": null
    }
  },
  "public": [
    {
      "tag": "public",
      "attribs": {},
      "children": [],
      "text": "asdf, asdf"
    }
  ],
  "object-config": {
    "blog-post": {
      "tag": "object-config",
      "attribs": {
        "name": "blog-post",
        "class": "blog-post"
      },
      "children": [
        {
          "tag": "label",
          "attribs": {
            "child-idx": 0
          },
          "children": [],
          "text": "Blog Post"
        },
        {
          "tag": "page",
          "attribs": {
            "name": "default",
            "max-width": "900px",
            "redirect": "/",
            "class": "default",
            "url": null,
            "type": "blog-post",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "html",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "head",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "body",
                  "attribs": {
                    "xten": "body",
                    "class": "wx-xten-body",
                    "element": "body",
                    "id": "x-d4850999-4fae-4602-a5ed-916ca332e52e-1236",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "configuration",
                      "attribs": {
                        "name": "page-configuration",
                        "class": "has-load wx-xten-configuration page-configuration",
                        "xten": "configuration",
                        "element": "div",
                        "id": "x-edced2c9-e708-4d5e-bff6-b584d0bb8ac2-1501",
                        "allow": "admin",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "row",
                          "attribs": {
                            "xten": "row",
                            "class": "wx-xten-row",
                            "element": "div",
                            "id": "x-98ec80c8-cd6f-47d7-9cb3-753fb638c7f3-2686",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-63ccb8f9-6058-46da-a146-b425016af4bf-6270",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "config-name",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "page-configuration - [$url]"
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-3c8104e8-3e82-4803-8de2-c361d4f1a13a-4865",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "toolbar",
                                  "attribs": {
                                    "xten": "toolbar",
                                    "class": "wx-xten-toolbar",
                                    "element": "div",
                                    "id": "x-4019a36d-6729-4840-8ad6-83bcc53f5753-4490",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "landscape",
                                        "background-color": "#dedede",
                                        "class": "tooltip-parent wx-xten-icon landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-503b767b-a1a7-4280-91c4-3b837cdc2bac-8000",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-d1df9a53-ca09-4646-bfc8-c23d79dc38f9-4806",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "page background toolbar"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "save",
                                        "class": "tooltip-parent wx-xten-icon save",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-1dd5b63f-2fd8-4f01-8541-58e04b996fb8-1003",
                                        "onclick": "_backgroundSaveImage(event)",
                                        "child-idx": 1
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-2e6a6792-c035-42bf-b670-b408bea16c7d-2286",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "upload image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundSaveImage",
                                            "field-selector": "page-configuration.background-image",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-93947a0d-90e3-46c9-8202-ab7dae0cf0e6-3549",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + toolbarParent['uploaded-url'] + ')'"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": ".wx-xten-configuration",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "toolbarParent['uploaded-url']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "uploaded-url",
                                                "class": "uploaded-url",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M626 336 632 336 632 351 626 351Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M658 355 622 355 622 332 658 332 658 355ZM640 381C634.5 381 630 376.5 630 371 630 365.5 634.5 361 640 361 645.5 361 650 365.5 650 371 650 376.5 645.5 381 640 381ZM670 326 658 326 622 326 616 326 606 336 606 390C606 392.2 607.8 394 610 394L670 394C672.2 394 674 392.2 674 390L674 330C674 327.8 672.2 326 670 326Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M637 368 643 368 643 374 637 374Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "close",
                                        "class": "tooltip-parent wx-xten-icon close",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-38a3f47f-5f2d-41d0-be58-fd15042c3450-7660",
                                        "onclick": "_backgroundCancelImage(event)",
                                        "child-idx": 2
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-8e7b2561-826e-48c5-836a-98d687a410d2-1859",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "cancel"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundCancelImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-f7c4585b-49f9-4f54-bde1-48b54ee9d6f8-4561",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M675.4 333.1 666.9 324.6 640 351.5 613.1 324.6 604.6 333.1 631.5 360 604.6 386.9 613.1 395.4 640 368.5 666.9 395.4 675.4 386.9 648.5 360Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "upload",
                                        "class": "tooltip-parent wx-xten-icon upload",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-4ef455b4-4775-4ddd-8541-e506beb3d940-6907",
                                        "onclick": "_backgroundUploadImage(event)",
                                        "child-idx": 3
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-50d8d742-9643-4843-b333-29da435a1abf-8204",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "select image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundUploadImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-dce69072-ddcc-48c3-a636-faad051b2512-9278",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "selectfile",
                                              "attribs": {
                                                "file-type": "image/*",
                                                "file": "changed-file",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')'"
                                            },
                                            {
                                              "tag": "add-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1012 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1028.22 162.925C1025.16 161.801 1022.65 159.513 1021.26 156.556 1019.38 152.376 1019.87 147.514 1022.53 143.786 1025.24 140.107 1029.77 138.239 1034.29 138.936L1037.84 139.526 1037.84 135.656C1037.87 128.572 1042.69 122.405 1049.55 120.656 1056.44 118.996 1063.55 122.315 1066.71 128.656L1067.92 131.066 1070.43 130.176C1074.19 128.851 1078.35 129.433 1081.6 131.736 1084.83 134.101 1086.74 137.862 1086.75 141.866L1086.75 144.986 1090.83 144.986C1096.01 145.181 1100.06 149.539 1099.86 154.722 1099.68 159.669 1095.68 163.623 1090.73 163.756L1085.48 163.756 1072.52 163.734 1072.52 169.966 1080.17 169.986 1090.73 169.986C1099.37 169.782 1106.2 162.616 1106 153.98 1105.82 146.362 1100.17 139.982 1092.63 138.876 1091.83 133.986 1089.15 129.604 1085.15 126.676 1081.01 123.747 1075.85 122.661 1070.88 123.676 1065.99 116.132 1056.88 112.489 1048.14 114.586 1039.6 116.763 1033.21 123.865 1031.95 132.586 1026.29 132.758 1021.02 135.501 1017.64 140.036 1013.62 145.622 1012.89 152.928 1015.72 159.2 1018.6 165.383 1024.65 169.484 1031.46 169.88L1038.8 169.88 1046.52 169.901 1046.52 163.689 1033.52 163.666 1031.72 163.666C1030.58 163.594 1029.46 163.365 1028.39 162.986Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1067.52 181.986 1067.52 157.986 1080.02 157.986 1059.52 133.986 1039.02 157.986 1051.52 157.986 1051.52 181.986 1067.52 181.986Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "colors",
                                        "class": "tooltip-parent wx-xten-icon colors",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-649936b1-20a5-43b2-a0bb-2bc313924cc2-8897",
                                        "onclick": "_backgroundColor(event)",
                                        "child-idx": 4
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-ab769492-6f5b-49f1-9c49-c713a7b0cc01-6255",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "background color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundColor",
                                            "field-selector": "page-configuration.background-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-abd8b2fa-84fc-414f-bbe2-5026e54af762-7116",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('background-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "background-color",
                                                "type": "color",
                                                "value": "background-color",
                                                "title": "Background Color",
                                                "class": "background-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1022 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1100 152C1097.2 152 1095 150.4 1095 148.5 1095 146.6 1097.2 145 1100 145 1102.8 145 1105 146.6 1105 148.5 1105 150.4 1102.8 152 1100 152ZM1095 163C1092.2 163 1090 161.4 1090 159.5 1090 157.6 1092.2 156 1095 156 1097.8 156 1100 157.6 1100 159.5 1100 161.4 1097.8 163 1095 163ZM1084 135C1081.2 135 1079 133.4 1079 131.5 1079 129.6 1081.2 128 1084 128 1086.8 128 1089 129.6 1089 131.5 1089 133.4 1086.8 135 1084 135ZM1084 169C1081.2 169 1079 167.4 1079 165.5 1079 163.6 1081.2 162 1084 162 1086.8 162 1089 163.6 1089 165.5 1089 167.4 1086.8 169 1084 169ZM1070 172C1067.2 172 1065 170.4 1065 168.5 1065 166.6 1067.2 165 1070 165 1072.8 165 1075 166.6 1075 168.5 1075 170.4 1072.8 172 1070 172ZM1064.6 131.6C1066.2 130 1068.3 129.7 1069.4 130.8 1070.5 131.9 1070.1 134 1068.6 135.6 1067 137.2 1064.9 137.5 1063.8 136.4 1062.6 135.3 1063 133.1 1064.6 131.6ZM1056 170C1053.2 170 1051 168.4 1051 166.5 1051 164.6 1053.2 163 1056 163 1058.8 163 1061 164.6 1061 166.5 1061 168.4 1058.8 170 1056 170ZM1095 135C1097.8 135 1100 136.6 1100 138.5 1100 140.4 1097.8 142 1095 142 1092.2 142 1090 140.4 1090 138.5 1090 136.6 1092.2 135 1095 135ZM1070 121C1047.3 121 1050.9 129.9 1053 132L1058 137C1061.2 140.3 1057.3 144 1053.6 142.4L1041.1 137C1032.3 133.2 1030 143.9 1030 149 1030 164.5 1047.9 177 1070 177 1092.1 177 1110 164.5 1110 149 1110 133.5 1092.1 121 1070 121Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "filter",
                                        "class": "tooltip-parent wx-xten-icon filter",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-8f0f2ac1-8bea-4479-bb1b-9f0356af82e6-9384",
                                        "onclick": "_backgroundFilterColor(event)",
                                        "child-idx": 5
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-7a0b3b30-6188-4e59-8d8e-920e584360d9-2384",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterColor",
                                            "field-selector": "page-configuration.page-filter-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-6f4e90b2-9445-44cb-b4fd-b900d3113d60-7469",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "type": "color",
                                                "value": "page-filter-color",
                                                "title": "Page Filter Color",
                                                "class": "page-filter-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -295)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M177 309 109 309 139 339 139 369 139 377 147 369 147 339Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "glasses",
                                        "class": "tooltip-parent wx-xten-icon glasses",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-5d73244a-5aa8-42ae-bc26-85c5f5f107f2-654",
                                        "onclick": "_backgroundFilterOpacity(event)",
                                        "child-idx": 6
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-3e1d3093-ef51-4461-824f-bf1f0f82d2f0-2467",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter opacity"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterOpacity",
                                            "field-selector": "page-configuration.page-filter-opacity",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-e3bc7ad2-f3cd-4e26-92ed-405ab062ef91-8514",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-opacity')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "type": "number",
                                                "min": "0",
                                                "max": "1",
                                                "step": "0.01",
                                                "value": "page-filter-opacity",
                                                "title": "Page Background Filter Opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -186)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M184 221.7C173.3 219.6 159.5 218.7 147 223.7 144.4 224.6 141.6 224.6 139 223.7 126.5 218.7 112.7 219.6 102 221.7 100.4 222 99 223.1 99 224.7 99 226.4 100.3 227.7 102 227.7 102 227.7 102.9 231.7 104.3 238.2 105.7 244.7 109.2 248 120 248 125.3 248 129.2 247.8 132 245 135.5 241.4 139.4 231.9 139.4 231.9 140.1 230.6 141.5 229.8 143 229.8 144.5 229.8 145.9 230.6 146.6 231.9 146.6 231.9 150.5 241.4 154 245 156.8 247.8 160.7 248 166 248 176.8 248 180.2 244.8 181.7 238.2 183.2 231.6 184 227.8 184 227.8 185.7 227.8 187 226.5 187 224.8 187 223 185.6 222 184 221.7Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "delete-landscape",
                                        "class": "tooltip-parent wx-xten-icon delete-landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-0755800f-a250-4432-acf9-e0feaf75cb9b-2048",
                                        "onclick": "_deletePageBackground(event)",
                                        "child-idx": 7
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-a811a1c2-1996-4064-b735-e6e16409505f-2147",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "delete landscape"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_deletePageBackground",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-86d6e0e0-a9ab-4b47-9301-693f724909cd-1509",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.transaction(element, 'delete-background', {name: element.getAttribute('name')});if (result.rc != 'success') {return;}"
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 6
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 7
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 8
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                },
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "fill": "#ff4343",
                                                    "clip-path": "url(#clip0)",
                                                    "transform": "translate(-622 -90)",
                                                    "child-idx": 1
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M705.4 111.1 696.9 102.6 670 129.5 643.1 102.6 634.6 111.1 661.5 138 634.6 164.9 643.1 173.4 670 146.5 696.9 173.4 705.4 164.9 678.5 138Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-edefe553-0321-47b4-bc31-0da6d780ba29-4229",
                                "child-idx": 2
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "page-errors-notification",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "bug",
                                        "class": "tooltip-parent wx-xten-icon bug",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-7b5bdb39-78a6-4080-9e24-e385aa0c1b24-7661",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-1b57c5a4-c302-46cf-9d04-8b372a89d32f-1846",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "errors in page"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M672.4 351.82C669.4 350.33 665.84 350.29 662.51 350.82 661.524 348.751 660.31 346.799 658.89 345 661.72 342.61 665.24 340.46 668.46 340.61 669.565 340.657 670.498 339.8 670.545 338.695 670.592 337.59 669.735 336.657 668.63 336.61L668.17 336.61C663.71 336.61 659.41 339.31 656.17 342.04 655.57 341.46 654.95 340.91 654.31 340.4 654.373 340.003 654.407 339.602 654.41 339.2 654.41 334.2 650.41 329.98 644.88 328.29 645.023 327.928 645.222 327.591 645.47 327.29 646.57 325.91 648.69 325.29 651.77 325.55 652.875 325.627 653.833 324.795 653.91 323.69 653.987 322.585 653.155 321.627 652.05 321.55 647.57 321.24 644.3 322.33 642.33 324.81 641.677 325.639 641.191 326.586 640.9 327.6 640.46 327.6 640.01 327.55 639.56 327.55 638.794 327.554 638.03 327.604 637.27 327.7 636.982 326.649 636.485 325.666 635.81 324.81 633.81 322.33 630.57 321.23 626.09 321.55 624.985 321.63 624.155 322.59 624.235 323.695 624.315 324.8 625.275 325.63 626.38 325.55 629.44 325.32 631.57 325.91 632.67 327.29 632.982 327.69 633.216 328.144 633.36 328.63 628.26 330.48 624.71 334.53 624.71 339.25 624.714 339.824 624.775 340.397 624.89 340.96 624.31 341.46 623.75 341.96 623.2 342.54 619.85 339.64 615.2 336.66 610.48 336.87 609.375 336.917 608.518 337.85 608.565 338.955 608.612 340.06 609.545 340.917 610.65 340.87 613.98 340.73 617.65 343.07 620.57 345.58 619.256 347.332 618.127 349.216 617.2 351.2 613.71 350.55 609.89 350.5 606.72 352.08 605.716 352.541 605.276 353.729 605.737 354.732 606.198 355.736 607.386 356.176 608.39 355.715 608.427 355.698 608.464 355.679 608.5 355.66 610.788 354.715 613.309 354.485 615.73 355 614.564 358.635 613.98 362.432 614 366.25 613.973 371.802 615.251 377.283 617.73 382.25 614.9 384.25 612.29 386.84 611.2 390.1 610.844 391.149 611.406 392.289 612.455 392.645 613.504 393.001 614.644 392.439 615 391.39 615.72 389.21 617.59 387.31 619.77 385.74 624.48 392.79 631.77 397.3 640 397.3 648.23 397.3 655.26 392.89 660 386 661.867 387.294 663.317 389.104 664.17 391.21 664.526 392.268 665.672 392.836 666.73 392.48 667.788 392.124 668.356 390.978 668 389.92 666.822 386.914 664.762 384.334 662.09 382.52 664.675 377.487 666.016 371.908 666 366.25 666.008 362.31 665.373 358.395 664.12 354.66 666.326 354.268 668.598 354.525 670.66 355.4 671.646 355.892 672.844 355.494 673.34 354.51 673.827 353.519 673.418 352.32 672.427 351.833 672.418 351.829 672.409 351.824 672.4 351.82ZM622.85 369.9C620.85 369.9 619.25 367.9 619.25 365.4 619.25 362.9 620.86 360.9 622.85 360.9 624.84 360.9 626.45 362.9 626.45 365.4 626.45 367.9 624.84 369.9 622.85 369.9ZM631.66 382.9C630.06 384.08 628.05 384.07 627.16 382.9 626.27 381.73 626.85 379.77 628.44 378.59 630.03 377.41 632.05 377.42 632.94 378.59 633.83 379.76 633.26 381.69 631.66 382.87ZM631 355C629.067 355 627.5 353.433 627.5 351.5 627.5 349.567 629.067 348 631 348 632.933 348 634.5 349.567 634.5 351.5 634.5 353.433 632.933 355 631 355ZM642 393.18C640.668 393.26 639.332 393.26 638 393.18L638 341 642 341ZM646.3 351.5C646.3 349.567 647.867 348 649.8 348 651.733 348 653.3 349.567 653.3 351.5 653.3 353.433 651.733 355 649.8 355 647.867 355.028 646.278 353.483 646.25 351.55 646.25 351.534 646.25 351.517 646.25 351.5ZM653.59 382.84C652.71 384.04 650.69 384.05 649.09 382.84 647.49 381.63 646.92 379.72 647.81 378.53 648.7 377.34 650.71 377.32 652.31 378.53 653.91 379.74 654.43 381.65 653.54 382.84ZM657.85 369.9C655.85 369.9 654.25 367.9 654.25 365.4 654.25 362.9 655.86 360.9 657.85 360.9 659.84 360.9 661.45 362.9 661.45 365.4 661.45 367.9 659.84 369.9 657.85 369.9Z",
                                                        "fill": "#C00000",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-43299f27-c39d-4d6e-8ed2-e13f3168a08f-6876",
                                "child-idx": 3
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "page-container",
                      "attribs": {
                        "max-width": "900px",
                        "xten": "page-container",
                        "class": "wx-xten-page-container",
                        "element": "div",
                        "id": "x-ef42e12f-e544-4a58-9b96-03254a502f1e-9637",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "layers",
                          "attribs": {
                            "name": "page-layers",
                            "xten": "layers",
                            "class": "wx-xten-layers",
                            "element": "div",
                            "id": "x-de5a18af-2727-4a29-8bfa-21c6f1be4c75-8678",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "layer",
                              "attribs": {
                                "index": -1,
                                "xten": "layer",
                                "class": "wx-xten-layer",
                                "element": "div",
                                "id": "x-114e6c1f-7b0f-4bf6-86b6-ba7a254cf072-367",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "background-filter",
                                  "attribs": {
                                    "xten": "background-filter",
                                    "class": "wx-xten-background-filter",
                                    "element": "div",
                                    "id": "x-9cd3db1f-c861-4368-9ac5-8b953a9fb85e-7066",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "page-content",
                              "attribs": {
                                "xten": "page-content",
                                "class": "wx-xten-page-content",
                                "element": "div",
                                "id": "x-b55f7921-3d1f-43b6-8c82-c9b2413b66ea-8304",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "font",
                                  "attribs": {
                                    "name": "Roboto",
                                    "weight": "400",
                                    "class": "wx-xten-font Roboto",
                                    "xten": "font",
                                    "element": "_hidden",
                                    "id": "x-cc37ecfa-f99b-4934-8a6f-bd493ec26569-6836",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "header",
                                  "attribs": {
                                    "cssvar-local-font-family": "font-family",
                                    "style": "font-family:Roboto;",
                                    "child-idx": 1
                                  },
                                  "children": [
                                    {
                                      "tag": "row",
                                      "attribs": {
                                        "xten": "row",
                                        "class": "wx-xten-row",
                                        "element": "div",
                                        "id": "x-b558542f-a8f7-44ea-840c-9061d36553c9-454",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "column",
                                          "attribs": {
                                            "xten": "column",
                                            "class": "wx-xten-column",
                                            "element": "div",
                                            "id": "x-abc69dec-7cfc-453a-a651-6f69ea698fc9-6857",
                                            "child-idx": 0
                                          },
                                          "children": [
                                            {
                                              "tag": "fitwidth",
                                              "attribs": {
                                                "xten": "fitwidth",
                                                "class": "wx-xten-fitwidth",
                                                "element": "div",
                                                "id": "x-8c9beb42-627a-4f9b-9615-ab2d5efb4711-560",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "image",
                                                  "attribs": {
                                                    "name": "site-logo",
                                                    "object-name": "all",
                                                    "alt": "Site Logo",
                                                    "class": "has-load wx-xten-image site-logo",
                                                    "xten": "image",
                                                    "element": "div",
                                                    "id": "x-28d2a913-6198-42a8-b682-6f28b6b76c07-7240",
                                                    "allow": "owner, admin",
                                                    "onclick": "events_image_onclick(event)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "img",
                                                      "attribs": {
                                                        "src": "[$src||images/blank.jpg]",
                                                        "alt": "Site Logo",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "toolbar",
                                                      "attribs": {
                                                        "top": "[$toolbar-top||0]",
                                                        "left": "[$toolbar-left||0]",
                                                        "right": "[$toolbar-right||auto]",
                                                        "bottom": "[$toolbar-bottom||auto]",
                                                        "xten": "toolbar",
                                                        "class": "wx-xten-toolbar",
                                                        "element": "div",
                                                        "id": "x-112e38b8-70eb-4500-a8a9-a4001b26e8b1-7949",
                                                        "child-idx": 1
                                                      },
                                                      "children": [
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "save",
                                                            "class": "tooltip-parent wx-xten-icon save",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-f67083c4-1ab9-42f8-8cd2-bc92e0195668-1761",
                                                            "onclick": "_imageSaveImage(event)",
                                                            "child-idx": 0
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-ed7dedb1-5610-4bfa-8ce5-7203454348aa-9376",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "upload image"
                                                            },
                                                            {
                                                              "tag": "click",
                                                              "attribs": {
                                                                "fname": "_imageSaveImage",
                                                                "xten": "click",
                                                                "class": "wx-xten-click",
                                                                "element": "_hidden",
                                                                "id": "x-1ef2a364-becb-4627-a8d3-16bc5e6b442c-5464",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "upload",
                                                                  "attribs": {
                                                                    "name": "save-image",
                                                                    "file": "changed-file",
                                                                    "file-url": "uploaded-url",
                                                                    "class": "save-image",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent['uploaded-url']"
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "class": "src",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent['uploaded-url']"
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "uploaded-url",
                                                                    "class": "uploaded-url",
                                                                    "child-idx": 3
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "changed-file",
                                                                    "class": "changed-file",
                                                                    "child-idx": 4
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "remove-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 5
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-592 -312)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M626 336 632 336 632 351 626 351Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M658 355 622 355 622 332 658 332 658 355ZM640 381C634.5 381 630 376.5 630 371 630 365.5 634.5 361 640 361 645.5 361 650 365.5 650 371 650 376.5 645.5 381 640 381ZM670 326 658 326 622 326 616 326 606 336 606 390C606 392.2 607.8 394 610 394L670 394C672.2 394 674 392.2 674 390L674 330C674 327.8 672.2 326 670 326Z",
                                                                            "child-idx": 1
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M637 368 643 368 643 374 637 374Z",
                                                                            "child-idx": 2
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "close",
                                                            "class": "tooltip-parent wx-xten-icon close",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-55f30484-02d7-4199-8c58-c0cd463075e0-3707",
                                                            "onclick": "_imageCancelImageSave(event)",
                                                            "child-idx": 1
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-b38b9809-8bf9-4d41-8bf7-5d2360fd5707-2039",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "cancel"
                                                            },
                                                            {
                                                              "tag": "click",
                                                              "attribs": {
                                                                "fname": "_imageCancelImageSave",
                                                                "xten": "click",
                                                                "class": "wx-xten-click",
                                                                "element": "_hidden",
                                                                "id": "x-0bb72835-1b05-4c80-ae19-5d28dc3b4605-4911",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent.getAttribute('src')"
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "changed-file",
                                                                    "class": "changed-file",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "remove-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-592 -312)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M675.4 333.1 666.9 324.6 640 351.5 613.1 324.6 604.6 333.1 631.5 360 604.6 386.9 613.1 395.4 640 368.5 666.9 395.4 675.4 386.9 648.5 360Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "upload",
                                                            "class": "tooltip-parent wx-xten-icon upload",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-2e1da0a9-1039-4aa6-a9e2-3d2e194ab996-7664",
                                                            "onclick": "_imageUploadImage(event)",
                                                            "child-idx": 2
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-b906a736-39cc-40f2-b1db-5acbaa969d3c-555",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "select image"
                                                            },
                                                            {
                                                              "tag": "event",
                                                              "attribs": {
                                                                "name": "click",
                                                                "fname": "_imageUploadImage",
                                                                "class": "wx-xten-event click",
                                                                "xten": "event",
                                                                "element": "_hidden",
                                                                "id": "x-24a23ed6-cdd9-48e9-bd6a-178475bd75e2-7553",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "selectfile",
                                                                  "attribs": {
                                                                    "file-type": "image/*",
                                                                    "file": "changed-file",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                                                                },
                                                                {
                                                                  "tag": "add-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-1012 -101)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M1028.22 162.925C1025.16 161.801 1022.65 159.513 1021.26 156.556 1019.38 152.376 1019.87 147.514 1022.53 143.786 1025.24 140.107 1029.77 138.239 1034.29 138.936L1037.84 139.526 1037.84 135.656C1037.87 128.572 1042.69 122.405 1049.55 120.656 1056.44 118.996 1063.55 122.315 1066.71 128.656L1067.92 131.066 1070.43 130.176C1074.19 128.851 1078.35 129.433 1081.6 131.736 1084.83 134.101 1086.74 137.862 1086.75 141.866L1086.75 144.986 1090.83 144.986C1096.01 145.181 1100.06 149.539 1099.86 154.722 1099.68 159.669 1095.68 163.623 1090.73 163.756L1085.48 163.756 1072.52 163.734 1072.52 169.966 1080.17 169.986 1090.73 169.986C1099.37 169.782 1106.2 162.616 1106 153.98 1105.82 146.362 1100.17 139.982 1092.63 138.876 1091.83 133.986 1089.15 129.604 1085.15 126.676 1081.01 123.747 1075.85 122.661 1070.88 123.676 1065.99 116.132 1056.88 112.489 1048.14 114.586 1039.6 116.763 1033.21 123.865 1031.95 132.586 1026.29 132.758 1021.02 135.501 1017.64 140.036 1013.62 145.622 1012.89 152.928 1015.72 159.2 1018.6 165.383 1024.65 169.484 1031.46 169.88L1038.8 169.88 1046.52 169.901 1046.52 163.689 1033.52 163.666 1031.72 163.666C1030.58 163.594 1029.46 163.365 1028.39 162.986Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M1067.52 181.986 1067.52 157.986 1080.02 157.986 1059.52 133.986 1039.02 157.986 1051.52 157.986 1051.52 181.986 1067.52 181.986Z",
                                                                            "child-idx": 1
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "add-link",
                                                            "class": "tooltip-parent wx-xten-icon add-link",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-4038a485-1673-44fa-89b3-9be5f8582c0d-3708",
                                                            "onclick": "_imageAddHyperlink(event)",
                                                            "child-idx": 3
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-0dc5e696-95f1-47c1-898b-b294827414d1-3127",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "add hyperlink"
                                                            },
                                                            {
                                                              "tag": "event",
                                                              "attribs": {
                                                                "name": "click",
                                                                "fname": "_imageAddHyperlink",
                                                                "class": "wx-xten-event click",
                                                                "xten": "event",
                                                                "element": "_hidden",
                                                                "id": "x-2fa306c4-5717-4ed5-8323-b77622a68f34-633",
                                                                "child-idx": 1
                                                              },
                                                              "children": [],
                                                              "text": "const element = event.target.closest('.wx-xten-image');const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {hyperlink: element.getAttribute('href')});const result = await wxfns.transaction(element, 'add-hyperlink', value);if (value) {element.setAttribute('href', value);}else{element.removeAttribute('href');}"
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "viewBox": "0 -960 960 960",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "path",
                                                                      "attribs": {
                                                                        "d": "M680-160v-120H560v-80h120v-120h80v120h120v80H760v120h-80ZM440-280H280q-83 0-141.5-58.5T80-480q0-83 58.5-141.5T280-680h160v80H280q-50 0-85 35t-35 85q0 50 35 85t85 35h160v80ZM320-440v-80h320v80H320Zm560-40h-80q0-50-35-85t-85-35H520v-80h160q83 0 141.5 58.5T880-480Z",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        }
                                                      ],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "column",
                                          "attribs": {
                                            "ratio": "8",
                                            "xten": "column",
                                            "class": "wx-xten-column",
                                            "element": "div",
                                            "id": "x-5c490c91-42bd-451b-8949-7f2048995cd3-7285",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "align",
                                              "attribs": {
                                                "horizontal": "flex-end",
                                                "xten": "align",
                                                "class": "wx-xten-align",
                                                "element": "div",
                                                "id": "x-6b245e54-e2c8-4dec-b784-1249d81f1513-8324",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "navbar",
                                                  "attribs": {
                                                    "transform": "uppercase",
                                                    "item-gap": "15px",
                                                    "navitem-hover-style": "color: blue",
                                                    "cssvar-local-margin": "margin",
                                                    "style": "margin:0.5rem;",
                                                    "xten": "navbar",
                                                    "class": "navclass-[$orientation||row] wx-xten-navbar",
                                                    "element": "div",
                                                    "id": "x-da982dd3-265c-450b-a3cf-4affd6c87771-2296",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "/",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-a404af32-9ddc-42aa-86e6-9da4d5f639a5-3348",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": "Home"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "blog",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-74dff046-f9e4-437d-b8c2-3d182a5f3f13-5005",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": "Blog"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "contact",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-2d704eed-347d-4d48-acbf-578e87a57ded-7194",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": "Contact"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-be996fdd-bd9f-4ec9-a691-3b00ca1af8fd-9204",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 3
                                                      },
                                                      "children": [
                                                        {
                                                          "tag": "show",
                                                          "attribs": {
                                                            "role": "public",
                                                            "xten": "show",
                                                            "class": "wx-xten-show",
                                                            "element": "div",
                                                            "id": "x-28aa6c78-778b-47ef-b3eb-d06ec1020e61-9393",
                                                            "child-idx": 0
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "a",
                                                              "attribs": {
                                                                "href": "login",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "Login"
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "show",
                                                          "attribs": {
                                                            "role": "logged_in",
                                                            "xten": "show",
                                                            "class": "wx-xten-show",
                                                            "element": "div",
                                                            "id": "x-454acf0d-a40b-4f22-9935-f80e6611bd8c-5540",
                                                            "child-idx": 1
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "logout",
                                                              "attribs": {
                                                                "xten": "logout",
                                                                "class": "wx-xten-logout",
                                                                "element": "span",
                                                                "id": "x-8581baa5-b552-4d7a-b752-3509eed0690f-8267",
                                                                "onclick": "events_logout_onclick(event)",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "Logout"
                                                            }
                                                          ],
                                                          "text": null
                                                        }
                                                      ],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                },
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": "some information to show before the object on this page"
                                },
                                {
                                  "tag": "gap",
                                  "attribs": {
                                    "height": "20px",
                                    "xten": "gap",
                                    "class": "wx-xten-gap",
                                    "element": "div",
                                    "id": "x-21bb97ce-fe46-4a83-8468-55f23bdb51ae-4244",
                                    "child-idx": 3
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "object",
                                  "attribs": {
                                    "object-name": "[@object-name]",
                                    "xten": "object",
                                    "class": "has-load wx-xten-object",
                                    "element": "div",
                                    "id": "x-0a8ddae4-ab5e-4e69-83ba-e613de3bc48d-3992",
                                    "tag": "attribs",
                                    "allow": "owner, admin",
                                    "node": {
                                      "tag": "attribs",
                                      "attribs": {
                                        "allow": "owner, admin"
                                      },
                                      "children": [],
                                      "text": null
                                    },
                                    "child-idx": 4
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "gap",
                                  "attribs": {
                                    "height": "20px",
                                    "xten": "gap",
                                    "class": "wx-xten-gap",
                                    "element": "div",
                                    "id": "x-dadf992a-8bf0-4ee3-9271-dbc534449f58-8739",
                                    "child-idx": 5
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "child-idx": 6
                                  },
                                  "children": [],
                                  "text": "some information to show after the object on this page"
                                },
                                {
                                  "tag": "footer",
                                  "attribs": {
                                    "child-idx": 7
                                  },
                                  "children": [
                                    {
                                      "tag": "align",
                                      "attribs": {
                                        "xten": "align",
                                        "class": "wx-xten-align",
                                        "element": "div",
                                        "id": "x-e4f9cc9f-e1d8-49b7-b891-98b0b4fb4d1b-1585",
                                        "child-idx": 0
                                      },
                                      "children": [],
                                      "text": "footer"
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "page",
          "attribs": {
            "name": "summary-page",
            "class": "summary-page",
            "url": null,
            "type": "blog-post",
            "child-idx": 2
          },
          "children": [
            {
              "tag": "html",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "head",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "body",
                  "attribs": {
                    "xten": "body",
                    "class": "wx-xten-body",
                    "element": "body",
                    "id": "x-59738536-c44b-4d77-b8ec-64f5616aa57e-152",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "configuration",
                      "attribs": {
                        "name": "page-configuration",
                        "class": "has-load wx-xten-configuration page-configuration",
                        "xten": "configuration",
                        "element": "div",
                        "id": "x-5c8d5266-0bd6-4be2-8279-359ccd694bc3-9256",
                        "allow": "admin",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "row",
                          "attribs": {
                            "xten": "row",
                            "class": "wx-xten-row",
                            "element": "div",
                            "id": "x-f0688b2e-1257-42af-899e-c80ae9eb70fc-9245",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-14368e88-e771-4cb9-b532-bb11aa2bf986-2979",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "config-name",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "page-configuration - [$url]"
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-d0754493-eb1e-4c99-89fb-5996e75d4061-9351",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "toolbar",
                                  "attribs": {
                                    "xten": "toolbar",
                                    "class": "wx-xten-toolbar",
                                    "element": "div",
                                    "id": "x-1f047aa5-f806-4e1b-87e7-0065f34ae21a-4946",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "landscape",
                                        "background-color": "#dedede",
                                        "class": "tooltip-parent wx-xten-icon landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-71456ed1-5420-4bac-9e70-30a617c4e0cc-9179",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-934294a2-e0de-47cf-9c4c-0c719c4f9af4-1586",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "page background toolbar"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "save",
                                        "class": "tooltip-parent wx-xten-icon save",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-973e3949-ee6d-4960-b2e9-8018dc700f88-6277",
                                        "onclick": "_backgroundSaveImage(event)",
                                        "child-idx": 1
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-f3389732-280e-4bf2-9fc0-29eec82325e9-5004",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "upload image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundSaveImage",
                                            "field-selector": "page-configuration.background-image",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-22fd944b-cdb8-49e8-843b-8484a5e1096d-8371",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + toolbarParent['uploaded-url'] + ')'"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": ".wx-xten-configuration",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "toolbarParent['uploaded-url']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "uploaded-url",
                                                "class": "uploaded-url",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M626 336 632 336 632 351 626 351Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M658 355 622 355 622 332 658 332 658 355ZM640 381C634.5 381 630 376.5 630 371 630 365.5 634.5 361 640 361 645.5 361 650 365.5 650 371 650 376.5 645.5 381 640 381ZM670 326 658 326 622 326 616 326 606 336 606 390C606 392.2 607.8 394 610 394L670 394C672.2 394 674 392.2 674 390L674 330C674 327.8 672.2 326 670 326Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M637 368 643 368 643 374 637 374Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "close",
                                        "class": "tooltip-parent wx-xten-icon close",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-b3e95fe6-b2cc-4676-a1f5-148f20e38432-1444",
                                        "onclick": "_backgroundCancelImage(event)",
                                        "child-idx": 2
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-c6a039f6-3c11-47e9-9385-190f102727b5-920",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "cancel"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundCancelImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-7dfb03f0-8e1e-4ea2-bdd0-acf2b279d1bd-1008",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M675.4 333.1 666.9 324.6 640 351.5 613.1 324.6 604.6 333.1 631.5 360 604.6 386.9 613.1 395.4 640 368.5 666.9 395.4 675.4 386.9 648.5 360Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "upload",
                                        "class": "tooltip-parent wx-xten-icon upload",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-0fcde01a-3f37-45b3-80d4-f910ffd6f4ba-867",
                                        "onclick": "_backgroundUploadImage(event)",
                                        "child-idx": 3
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-cad3a5d6-8a4d-4e9b-a1a0-6bf331cbc122-3114",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "select image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundUploadImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-92060b44-eb55-44c0-82e5-b4a0934f6354-1621",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "selectfile",
                                              "attribs": {
                                                "file-type": "image/*",
                                                "file": "changed-file",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')'"
                                            },
                                            {
                                              "tag": "add-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1012 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1028.22 162.925C1025.16 161.801 1022.65 159.513 1021.26 156.556 1019.38 152.376 1019.87 147.514 1022.53 143.786 1025.24 140.107 1029.77 138.239 1034.29 138.936L1037.84 139.526 1037.84 135.656C1037.87 128.572 1042.69 122.405 1049.55 120.656 1056.44 118.996 1063.55 122.315 1066.71 128.656L1067.92 131.066 1070.43 130.176C1074.19 128.851 1078.35 129.433 1081.6 131.736 1084.83 134.101 1086.74 137.862 1086.75 141.866L1086.75 144.986 1090.83 144.986C1096.01 145.181 1100.06 149.539 1099.86 154.722 1099.68 159.669 1095.68 163.623 1090.73 163.756L1085.48 163.756 1072.52 163.734 1072.52 169.966 1080.17 169.986 1090.73 169.986C1099.37 169.782 1106.2 162.616 1106 153.98 1105.82 146.362 1100.17 139.982 1092.63 138.876 1091.83 133.986 1089.15 129.604 1085.15 126.676 1081.01 123.747 1075.85 122.661 1070.88 123.676 1065.99 116.132 1056.88 112.489 1048.14 114.586 1039.6 116.763 1033.21 123.865 1031.95 132.586 1026.29 132.758 1021.02 135.501 1017.64 140.036 1013.62 145.622 1012.89 152.928 1015.72 159.2 1018.6 165.383 1024.65 169.484 1031.46 169.88L1038.8 169.88 1046.52 169.901 1046.52 163.689 1033.52 163.666 1031.72 163.666C1030.58 163.594 1029.46 163.365 1028.39 162.986Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1067.52 181.986 1067.52 157.986 1080.02 157.986 1059.52 133.986 1039.02 157.986 1051.52 157.986 1051.52 181.986 1067.52 181.986Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "colors",
                                        "class": "tooltip-parent wx-xten-icon colors",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-ed9136a2-ddda-4fd3-806b-1b58b80752cf-7124",
                                        "onclick": "_backgroundColor(event)",
                                        "child-idx": 4
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-8f30afd2-3a3b-435a-967c-be541aabfc1f-299",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "background color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundColor",
                                            "field-selector": "page-configuration.background-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-9b5c66d0-6b42-4328-8597-1efab0b87ef7-52",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('background-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "background-color",
                                                "type": "color",
                                                "value": "background-color",
                                                "title": "Background Color",
                                                "class": "background-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1022 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1100 152C1097.2 152 1095 150.4 1095 148.5 1095 146.6 1097.2 145 1100 145 1102.8 145 1105 146.6 1105 148.5 1105 150.4 1102.8 152 1100 152ZM1095 163C1092.2 163 1090 161.4 1090 159.5 1090 157.6 1092.2 156 1095 156 1097.8 156 1100 157.6 1100 159.5 1100 161.4 1097.8 163 1095 163ZM1084 135C1081.2 135 1079 133.4 1079 131.5 1079 129.6 1081.2 128 1084 128 1086.8 128 1089 129.6 1089 131.5 1089 133.4 1086.8 135 1084 135ZM1084 169C1081.2 169 1079 167.4 1079 165.5 1079 163.6 1081.2 162 1084 162 1086.8 162 1089 163.6 1089 165.5 1089 167.4 1086.8 169 1084 169ZM1070 172C1067.2 172 1065 170.4 1065 168.5 1065 166.6 1067.2 165 1070 165 1072.8 165 1075 166.6 1075 168.5 1075 170.4 1072.8 172 1070 172ZM1064.6 131.6C1066.2 130 1068.3 129.7 1069.4 130.8 1070.5 131.9 1070.1 134 1068.6 135.6 1067 137.2 1064.9 137.5 1063.8 136.4 1062.6 135.3 1063 133.1 1064.6 131.6ZM1056 170C1053.2 170 1051 168.4 1051 166.5 1051 164.6 1053.2 163 1056 163 1058.8 163 1061 164.6 1061 166.5 1061 168.4 1058.8 170 1056 170ZM1095 135C1097.8 135 1100 136.6 1100 138.5 1100 140.4 1097.8 142 1095 142 1092.2 142 1090 140.4 1090 138.5 1090 136.6 1092.2 135 1095 135ZM1070 121C1047.3 121 1050.9 129.9 1053 132L1058 137C1061.2 140.3 1057.3 144 1053.6 142.4L1041.1 137C1032.3 133.2 1030 143.9 1030 149 1030 164.5 1047.9 177 1070 177 1092.1 177 1110 164.5 1110 149 1110 133.5 1092.1 121 1070 121Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "filter",
                                        "class": "tooltip-parent wx-xten-icon filter",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-9820d6dc-c050-412c-a96a-e9923023c13d-6685",
                                        "onclick": "_backgroundFilterColor(event)",
                                        "child-idx": 5
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-3321ae30-1f14-4141-b5f2-7a5e218ccbe4-464",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterColor",
                                            "field-selector": "page-configuration.page-filter-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-2e552833-a93d-4c7e-afae-9d941d8fa470-9743",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "type": "color",
                                                "value": "page-filter-color",
                                                "title": "Page Filter Color",
                                                "class": "page-filter-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -295)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M177 309 109 309 139 339 139 369 139 377 147 369 147 339Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "glasses",
                                        "class": "tooltip-parent wx-xten-icon glasses",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-33903f4c-6142-4a5f-b957-ef67ac1bc92f-5681",
                                        "onclick": "_backgroundFilterOpacity(event)",
                                        "child-idx": 6
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-da0b5ea5-737e-4643-bd6b-89ec21d2ad5d-9172",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter opacity"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterOpacity",
                                            "field-selector": "page-configuration.page-filter-opacity",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-a7300079-080e-4bb6-9fcc-77f4ba64414e-3796",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-opacity')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "type": "number",
                                                "min": "0",
                                                "max": "1",
                                                "step": "0.01",
                                                "value": "page-filter-opacity",
                                                "title": "Page Background Filter Opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -186)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M184 221.7C173.3 219.6 159.5 218.7 147 223.7 144.4 224.6 141.6 224.6 139 223.7 126.5 218.7 112.7 219.6 102 221.7 100.4 222 99 223.1 99 224.7 99 226.4 100.3 227.7 102 227.7 102 227.7 102.9 231.7 104.3 238.2 105.7 244.7 109.2 248 120 248 125.3 248 129.2 247.8 132 245 135.5 241.4 139.4 231.9 139.4 231.9 140.1 230.6 141.5 229.8 143 229.8 144.5 229.8 145.9 230.6 146.6 231.9 146.6 231.9 150.5 241.4 154 245 156.8 247.8 160.7 248 166 248 176.8 248 180.2 244.8 181.7 238.2 183.2 231.6 184 227.8 184 227.8 185.7 227.8 187 226.5 187 224.8 187 223 185.6 222 184 221.7Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "delete-landscape",
                                        "class": "tooltip-parent wx-xten-icon delete-landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-9eba6b8a-9fed-4de4-b51e-ffd4e1664d8f-1858",
                                        "onclick": "_deletePageBackground(event)",
                                        "child-idx": 7
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-7597126d-328e-4129-9dd1-385c2e8c6851-1285",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "delete landscape"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_deletePageBackground",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-38aade25-a74c-49ac-88dd-91886217fb3c-7241",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.transaction(element, 'delete-background', {name: element.getAttribute('name')});if (result.rc != 'success') {return;}"
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 6
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 7
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 8
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                },
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "fill": "#ff4343",
                                                    "clip-path": "url(#clip0)",
                                                    "transform": "translate(-622 -90)",
                                                    "child-idx": 1
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M705.4 111.1 696.9 102.6 670 129.5 643.1 102.6 634.6 111.1 661.5 138 634.6 164.9 643.1 173.4 670 146.5 696.9 173.4 705.4 164.9 678.5 138Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-9b0fa8d9-7d4a-4c27-aa89-a28df3535651-5717",
                                "child-idx": 2
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "page-errors-notification",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "bug",
                                        "class": "tooltip-parent wx-xten-icon bug",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-4f559c22-da26-42f4-9912-0c60e8273379-4225",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-84491daf-9964-4e5e-9749-dd308cd6d9af-8625",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "errors in page"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M672.4 351.82C669.4 350.33 665.84 350.29 662.51 350.82 661.524 348.751 660.31 346.799 658.89 345 661.72 342.61 665.24 340.46 668.46 340.61 669.565 340.657 670.498 339.8 670.545 338.695 670.592 337.59 669.735 336.657 668.63 336.61L668.17 336.61C663.71 336.61 659.41 339.31 656.17 342.04 655.57 341.46 654.95 340.91 654.31 340.4 654.373 340.003 654.407 339.602 654.41 339.2 654.41 334.2 650.41 329.98 644.88 328.29 645.023 327.928 645.222 327.591 645.47 327.29 646.57 325.91 648.69 325.29 651.77 325.55 652.875 325.627 653.833 324.795 653.91 323.69 653.987 322.585 653.155 321.627 652.05 321.55 647.57 321.24 644.3 322.33 642.33 324.81 641.677 325.639 641.191 326.586 640.9 327.6 640.46 327.6 640.01 327.55 639.56 327.55 638.794 327.554 638.03 327.604 637.27 327.7 636.982 326.649 636.485 325.666 635.81 324.81 633.81 322.33 630.57 321.23 626.09 321.55 624.985 321.63 624.155 322.59 624.235 323.695 624.315 324.8 625.275 325.63 626.38 325.55 629.44 325.32 631.57 325.91 632.67 327.29 632.982 327.69 633.216 328.144 633.36 328.63 628.26 330.48 624.71 334.53 624.71 339.25 624.714 339.824 624.775 340.397 624.89 340.96 624.31 341.46 623.75 341.96 623.2 342.54 619.85 339.64 615.2 336.66 610.48 336.87 609.375 336.917 608.518 337.85 608.565 338.955 608.612 340.06 609.545 340.917 610.65 340.87 613.98 340.73 617.65 343.07 620.57 345.58 619.256 347.332 618.127 349.216 617.2 351.2 613.71 350.55 609.89 350.5 606.72 352.08 605.716 352.541 605.276 353.729 605.737 354.732 606.198 355.736 607.386 356.176 608.39 355.715 608.427 355.698 608.464 355.679 608.5 355.66 610.788 354.715 613.309 354.485 615.73 355 614.564 358.635 613.98 362.432 614 366.25 613.973 371.802 615.251 377.283 617.73 382.25 614.9 384.25 612.29 386.84 611.2 390.1 610.844 391.149 611.406 392.289 612.455 392.645 613.504 393.001 614.644 392.439 615 391.39 615.72 389.21 617.59 387.31 619.77 385.74 624.48 392.79 631.77 397.3 640 397.3 648.23 397.3 655.26 392.89 660 386 661.867 387.294 663.317 389.104 664.17 391.21 664.526 392.268 665.672 392.836 666.73 392.48 667.788 392.124 668.356 390.978 668 389.92 666.822 386.914 664.762 384.334 662.09 382.52 664.675 377.487 666.016 371.908 666 366.25 666.008 362.31 665.373 358.395 664.12 354.66 666.326 354.268 668.598 354.525 670.66 355.4 671.646 355.892 672.844 355.494 673.34 354.51 673.827 353.519 673.418 352.32 672.427 351.833 672.418 351.829 672.409 351.824 672.4 351.82ZM622.85 369.9C620.85 369.9 619.25 367.9 619.25 365.4 619.25 362.9 620.86 360.9 622.85 360.9 624.84 360.9 626.45 362.9 626.45 365.4 626.45 367.9 624.84 369.9 622.85 369.9ZM631.66 382.9C630.06 384.08 628.05 384.07 627.16 382.9 626.27 381.73 626.85 379.77 628.44 378.59 630.03 377.41 632.05 377.42 632.94 378.59 633.83 379.76 633.26 381.69 631.66 382.87ZM631 355C629.067 355 627.5 353.433 627.5 351.5 627.5 349.567 629.067 348 631 348 632.933 348 634.5 349.567 634.5 351.5 634.5 353.433 632.933 355 631 355ZM642 393.18C640.668 393.26 639.332 393.26 638 393.18L638 341 642 341ZM646.3 351.5C646.3 349.567 647.867 348 649.8 348 651.733 348 653.3 349.567 653.3 351.5 653.3 353.433 651.733 355 649.8 355 647.867 355.028 646.278 353.483 646.25 351.55 646.25 351.534 646.25 351.517 646.25 351.5ZM653.59 382.84C652.71 384.04 650.69 384.05 649.09 382.84 647.49 381.63 646.92 379.72 647.81 378.53 648.7 377.34 650.71 377.32 652.31 378.53 653.91 379.74 654.43 381.65 653.54 382.84ZM657.85 369.9C655.85 369.9 654.25 367.9 654.25 365.4 654.25 362.9 655.86 360.9 657.85 360.9 659.84 360.9 661.45 362.9 661.45 365.4 661.45 367.9 659.84 369.9 657.85 369.9Z",
                                                        "fill": "#C00000",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-b7e6b6cf-710b-4ee1-9995-6839ee388053-512",
                                "child-idx": 3
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "page-container",
                      "attribs": {
                        "xten": "page-container",
                        "class": "wx-xten-page-container",
                        "element": "div",
                        "id": "x-242665a4-643b-4f4a-bcd0-0f7babed4a28-9457",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "layers",
                          "attribs": {
                            "name": "page-layers",
                            "xten": "layers",
                            "class": "wx-xten-layers",
                            "element": "div",
                            "id": "x-3511e667-101c-4084-a5ca-0ef623ce0c82-522",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "layer",
                              "attribs": {
                                "index": -1,
                                "xten": "layer",
                                "class": "wx-xten-layer",
                                "element": "div",
                                "id": "x-e8c9dd90-c86b-4e73-893d-1d487e993cd9-5194",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "background-filter",
                                  "attribs": {
                                    "xten": "background-filter",
                                    "class": "wx-xten-background-filter",
                                    "element": "div",
                                    "id": "x-591175ab-e6d3-408a-8f03-6df41b24f6db-9204",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "page-content",
                              "attribs": {
                                "xten": "page-content",
                                "class": "wx-xten-page-content",
                                "element": "div",
                                "id": "x-05c02c69-a3b7-4a2f-8545-27955e99a307-423",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "object",
                                  "attribs": {
                                    "object-name": "[@object-name]",
                                    "object-view": "summary-view",
                                    "xten": "object",
                                    "class": "has-load wx-xten-object",
                                    "element": "div",
                                    "id": "x-f5731f84-32f7-4ef1-8f44-d97d36ecf97b-9256",
                                    "tag": "attribs",
                                    "allow": "owner, admin",
                                    "node": {
                                      "tag": "attribs",
                                      "attribs": {
                                        "allow": "owner, admin"
                                      },
                                      "children": [],
                                      "text": null
                                    },
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "object-view",
          "attribs": {
            "name": "default",
            "class": "default",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "image",
              "attribs": {
                "name": "blog-image",
                "aspect-ratio": "1.5",
                "object-name": "[@object-name]",
                "class": "blog-image",
                "child-idx": 0
              },
              "children": [],
              "text": null
            },
            {
              "tag": "gap",
              "attribs": {
                "height": "20px",
                "child-idx": 1
              },
              "children": [],
              "text": null
            },
            {
              "tag": "textalign",
              "attribs": {
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "inline",
                  "attribs": {
                    "name": "blog-title",
                    "element": "div",
                    "object-name": "[@object-name]",
                    "class": "blog-title",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Add Post Title"
                }
              ],
              "text": null
            },
            {
              "tag": "gap",
              "attribs": {
                "height": "20px",
                "child-idx": 3
              },
              "children": [],
              "text": null
            },
            {
              "tag": "textedit",
              "attribs": {
                "name": "blog-desc",
                "element": "div",
                "object-name": "[@object-name]",
                "class": "blog-desc",
                "child-idx": 4
              },
              "children": [],
              "text": "Add post description"
            },
            {
              "tag": "toolbar",
              "attribs": {
                "name": "object-item-toolbar",
                "class": "object-item-toolbar",
                "child-idx": 5
              },
              "children": [
                {
                  "tag": "icon",
                  "attribs": {
                    "name": "remove",
                    "object-type": "[@object-type]",
                    "object-name": "[@object-name]",
                    "class": "remove",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "tooltip",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "delete [@object-label]"
                    },
                    {
                      "tag": "click",
                      "attribs": {
                        "name": "_eventObjectDelete",
                        "class": "_eventObjectDelete",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "confirm",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "Do you want to delete object [@object-name]?"
                        },
                        {
                          "tag": "transaction",
                          "attribs": {
                            "name": "delete-object",
                            "target": "event-target",
                            "class": "delete-object",
                            "child-idx": 1
                          },
                          "children": [],
                          "text": null
                        },
                        {
                          "tag": "reload",
                          "attribs": {
                            "child-idx": 2
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "object-view",
          "attribs": {
            "name": "summary-view",
            "class": "summary-view",
            "child-idx": 4
          },
          "children": [],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "default",
            "class": "default",
            "child-idx": 5
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Blog Post List"
                },
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "list-items",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 2
                  },
                  "children": [],
                  "text": "my footer"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 3
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "paginator",
                  "attribs": {
                    "object-type": "blog-post",
                    "pagesize": "[$pagesize]",
                    "list-style": "padding: 10px;",
                    "child-idx": 4
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "name": "list-item",
                    "class": "list-item",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "image",
                      "attribs": {
                        "name": "blog-image",
                        "aspect-ratio": "1.5",
                        "object-name": "[@object-name]",
                        "src": "[@blog-image||images/blank.jpg]",
                        "class": "blog-image",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "textalign",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [
                        {
                          "tag": "inline",
                          "attribs": {
                            "name": "blog-title",
                            "object-name": "[@object-name]",
                            "class": "blog-title",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "[@blog-title||Blog Title]"
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 3
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "name": "blog-description",
                        "summary": "40",
                        "readonly": "true",
                        "element": "div",
                        "object-name": "[@object-name]",
                        "class": "blog-description",
                        "child-idx": 4
                      },
                      "children": [],
                      "text": "[@blog-description||Blog description]"
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 5
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "a",
                      "attribs": {
                        "class": "continue-link",
                        "href": "[@url-default]",
                        "child-idx": 6
                      },
                      "children": [
                        {
                          "tag": "span",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "Continue Reading..."
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "toolbar",
                      "attribs": {
                        "name": "object-item-toolbar",
                        "class": "object-item-toolbar",
                        "child-idx": 7
                      },
                      "children": [
                        {
                          "tag": "icon",
                          "attribs": {
                            "name": "remove",
                            "object-type": "[@object-type]",
                            "object-name": "[@object-name]",
                            "class": "remove",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "tooltip",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "delete [@object-label]"
                            },
                            {
                              "tag": "click",
                              "attribs": {
                                "name": "_eventObjectDelete",
                                "class": "_eventObjectDelete",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "confirm",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "Do you want to delete object [@object-name]?"
                                },
                                {
                                  "tag": "transaction",
                                  "attribs": {
                                    "name": "delete-object",
                                    "target": "event-target",
                                    "class": "delete-object",
                                    "child-idx": 1
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "reload",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "container",
                  "attribs": {
                    "style": "height:100px; background: yellow;",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "align",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "list is empty"
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "table",
            "class": "table",
            "child-idx": 6
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "table",
                  "attribs": {
                    "width": "100%",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "thead",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tr",
                          "attribs": {
                            "style": "height: 50px",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "image"
                            },
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": "title"
                            },
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 2
                              },
                              "children": [
                                {
                                  "tag": "toolbar",
                                  "attribs": {
                                    "name": "object-list-toolbar",
                                    "class": "object-list-toolbar",
                                    "object-type": "[@object-type]",
                                    "top": "[$toolbar-top||0]",
                                    "right": "[$toolbar-right||0]",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "add",
                                        "class": "add",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "add [@object-label]"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "name": "_eventObjectAdd",
                                            "class": "_eventObjectAdd",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "transaction",
                                              "attribs": {
                                                "name": "add-object",
                                                "class": "add-object",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "reload",
                                              "attribs": {
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "tbody",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "list-items",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "paginator",
                  "attribs": {
                    "object-type": "blog-post",
                    "pagesize": "[$pagesize]",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "tr",
                  "attribs": {
                    "name": "list-item",
                    "class": "list-item",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "xstyle",
                      "attribs": {
                        "selector": ".blog-title td",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "border: 1px solid red;"
                    },
                    {
                      "tag": "td",
                      "attribs": {
                        "style": "width: 150px",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "image",
                          "attribs": {
                            "name": "blog-image",
                            "object-name": "[@object-name]",
                            "aspect-ratio": "1.5",
                            "class": "blog-image",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "td",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [
                        {
                          "tag": "value",
                          "attribs": {
                            "name": "blog-title",
                            "object-name": "[@object-name]",
                            "class": "blog-title",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "blog title"
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "td",
                      "attribs": {
                        "child-idx": 3
                      },
                      "children": [
                        {
                          "tag": "toolbar",
                          "attribs": {
                            "name": "object-item-toolbar",
                            "class": "object-item-toolbar",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "icon",
                              "attribs": {
                                "name": "remove",
                                "object-type": "[@object-type]",
                                "object-name": "[@object-name]",
                                "class": "remove",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "tooltip",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "delete [@object-label]"
                                },
                                {
                                  "tag": "click",
                                  "attribs": {
                                    "name": "_eventObjectDelete",
                                    "class": "_eventObjectDelete",
                                    "child-idx": 1
                                  },
                                  "children": [
                                    {
                                      "tag": "confirm",
                                      "attribs": {
                                        "child-idx": 0
                                      },
                                      "children": [],
                                      "text": "Do you want to delete object [@object-name]?"
                                    },
                                    {
                                      "tag": "transaction",
                                      "attribs": {
                                        "name": "delete-object",
                                        "target": "event-target",
                                        "class": "delete-object",
                                        "child-idx": 1
                                      },
                                      "children": [],
                                      "text": null
                                    },
                                    {
                                      "tag": "reload",
                                      "attribs": {
                                        "child-idx": 2
                                      },
                                      "children": [],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "no items in the list"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "list",
            "class": "list",
            "child-idx": 7
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "ul",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "list-items",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "li",
                  "attribs": {
                    "object-name": "[@object-name]",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "row",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "column",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "fitwidth",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "image",
                                  "attribs": {
                                    "name": "blog-image",
                                    "object-name": "[@object-name]",
                                    "aspect-ratio": "1.5",
                                    "class": "blog-image",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        },
                        {
                          "tag": "column",
                          "attribs": {
                            "ratio": "5",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "value",
                              "attribs": {
                                "name": "blog-title",
                                "object-name": "[@object-name]",
                                "class": "blog-title",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "toolbar",
                      "attribs": {
                        "name": "object-item-toolbar",
                        "class": "object-item-toolbar",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "icon",
                          "attribs": {
                            "name": "remove",
                            "object-type": "[@object-type]",
                            "object-name": "[@object-name]",
                            "class": "remove",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "tooltip",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "delete [@object-label]"
                            },
                            {
                              "tag": "click",
                              "attribs": {
                                "name": "_eventObjectDelete",
                                "class": "_eventObjectDelete",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "confirm",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "Do you want to delete object [@object-name]?"
                                },
                                {
                                  "tag": "transaction",
                                  "attribs": {
                                    "name": "delete-object",
                                    "target": "event-target",
                                    "class": "delete-object",
                                    "child-idx": 1
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "reload",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "list view is empty"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "xten": {
    "loginform": {
      "element": "form",
      "useview": "v.loginform",
      "events": {},
      "name": "loginform"
    },
    "logout": {
      "element": "span",
      "style": "display: inline-block",
      "events": {},
      "name": "logout"
    },
    "page-container": {
      "tag": "xten",
      "name": "page-container",
      "element": "div",
      "style": "width: 100%;margin: auto;background-color: white;",
      "nodeStyle": "max-width: [$max-width||100%];"
    },
    "page-content": {
      "tag": "xten",
      "name": "page-content",
      "element": "div",
      "style": "min-height: 100vh;"
    },
    "background-filter": {
      "tag": "xten",
      "name": "background-filter",
      "element": "div"
    },
    "change-image": {
      "tag": "xten",
      "name": "change-image",
      "element": "_hidden",
      "event": {
        "tag": "event",
        "name": "click",
        "class": "click",
        "selectfile": {
          "tag": "selectfile",
          "file-type": "image/*",
          "node": {
            "tag": "selectfile",
            "attribs": {
              "file-type": "image/*"
            },
            "children": [],
            "text": null
          }
        },
        "code": "{const imageDiv = element.closest('.wx-xten-image');const img = imageDiv.querySelector('img');const url = URL.createObjectURL(data);img.src = url;}",
        "node": {
          "tag": "event",
          "attribs": {
            "name": "click",
            "class": "click"
          },
          "children": [
            {
              "tag": "selectfile",
              "attribs": {
                "file-type": "image/*",
                "child-idx": 0
              },
              "children": [],
              "text": null
            },
            {
              "tag": "code",
              "attribs": {
                "child-idx": 1
              },
              "children": [],
              "text": "{const imageDiv = element.closest('.wx-xten-image');const img = imageDiv.querySelector('img');const url = URL.createObjectURL(data);img.src = url;}"
            }
          ],
          "text": null
        }
      }
    },
    "parentclass": {
      "tag": "xten",
      "name": "parentclass",
      "element": "_hidden",
      "init": "node.parent.addClass(node.text.trim());"
    },
    "paginator": {
      "tag": "xten",
      "name": "paginator",
      "element": "div",
      "style": "text-align: center;padding: 5px;[$list-style||' '];",
      "css": ".wx-xten-paginator > a {display: inline-block; text-decoration: none; color: inherit; padding: 5px; border: 1px solid lightgray; width: 30px;text-align: center;[$list-item-style||' ']}.wx-xten-paginator > a:hover {text-decoration: none;}.wx-xten-paginator > a:visited {color: inherit;}.wx-xten-paginator > a.active {font-weight: bold; border-width: 3px;}",
      "load": "const objType = node.getValue('object-type');if (!objType) {common.nodeerror('object-type is missing', node);return;}const objConfigNode = common.findNamed(node, 'object-config', objType);if (!objConfigNode) {common.nodeerror('invalid object type: ' + objType, node);return;}const objConfig = common._tojson(objConfigNode, 'page, view');const searchText = node.getValue('search-text');const parent = node.getValue('parent');const category = node.getValue('category');const _selector = node.getValue('selector');const dbquery = node.getValue('query');const selector = {type: objType};if (searchText) {selector['$text'] = { $search: searchText };}if (parent) {selector.parent = parent;}if (category) {selector.category = category;}if (_selector) {const list = _selector.split(/\\s*\\,\\s*/);list.forEach(li => {const [field, value] = list.split(/\\s*\\:\\s*/);selector[field] = value;});}if (dbquery) {try {const _query = JSON.parse(dbquery);for (var prop in _query) {selector[prop] = _query[prop];}}catch (e) {node.attribs.error = 'invalide json passed to object-list ' + query;common.error(node.attribs.error);return;}}const data = await database.count(selector, objConfig.collection);if (data.rc != 'success') {common.nodeerror('System Error', data.rc);return;}node.empty();node.attribs['object-label'] = node.getValue('label') || common.toCamelCase(objType);var pageSize = node.getValue('pagesize') || context.vars[objType + '-pagesize'] || configNode.getValue('pagesize');pageSize = pageSize ? parseInt(pageSize.toString().trim()) : 0;if (!pageSize) {return;}var pageNumber = node.getValue('pagenum') || context.vars[objType + '-pagenum'];pageNumber = pageNumber ? parseInt(pageNumber.toString().trim()) : 1;var url = context.vars.url;const query = context.vars.query || null;url += '?';if (query) {for (var prop in query) {if (prop == objType + '-pagenum') {continue;}url += prop + '=' + query[prop] + '&';}}const pages = Math.ceil(data.count / pageSize);if (pages > 1) {for (var i = 0; i < pages; i++) {const child = node.newChild('a');const _page = (i + 1).toString();const href = url + (_page == '1' ? '' : (objType + '-pagenum=' + _page));child.attribs.href = href[href.length - 1] == '?' ? href.slice(0, -1) : href;child.text = _page;var className = 'paginator-link';if (_page == pageNumber) {className += ' active';}child.attribs.class = className;}}"
    },
    "object": {
      "tag": "xten",
      "name": "object",
      "element": "div",
      "attribs": {
        "tag": "attribs",
        "allow": "owner, admin",
        "node": {
          "tag": "attribs",
          "attribs": {
            "allow": "owner, admin"
          },
          "children": [],
          "text": null
        }
      },
      "style": "position: relative;",
      "css": ".wx-xten-object > .wx-xten-object-data-wrapper {position: relative;}.wx-xten-object > .view {display:none}.wx-xten-object > .wx-xten-object-data-wrapper > .wx-view-object-list-item {position: relative;}.wx-xten-object > .object-list-toolbar {display: none;}.wx-xten-object.wx-state-ediable > .object-list-toolbar {display: inline-block;}.wx-xten-object .wx-xten-object-item-toolbar {display: none;}.wx-xten-object.wx-state-editable .wx-xten-object-item-toolbar {display: none;}",
      "load": "async (node, context, xten, prop) => {\n    var objKey = node.getValue('object-name');\n    if (!objKey) {\n        common.nodeerror('object-name is missing in xten object', node);\n        return;\n    }\n    var output = null;\n    if (objKey.startsWith('[@')) {\n        output = await database.getPageDataFromURL(context.vars.url);\n        if (output.rc != 'success') {\n            common.nodeerror('could not find page ' + context.vars.url, node);\n            return;\n        }\n    } else {\n        output = await database.getPageDataFromObjectName(context.vars.url);\n        if (output.rc != 'success') {\n            common.nodeerror('could not find object ' + objKey, node);\n            return;\n        }\n    }\n    if (!output.doc) {\n        common.nodeerror('empty page data found ' + objKey + '-' + context.vars.url, node);\n        return;\n    }\n    objKey = output.doc['object-name'];\n    objType = output.doc.type;\n    objConfigNode = common.findNamed(node, 'object-config', objType);\n    if (!objConfigNode) {\n        common.nodeerror('invalid object type: ' + objType, node);\n        return;\n    }\n    const objConfig = common._tojson(objConfigNode, 'page, view');\n    const data = await database.getObjectData(objKey, node.getValue('collection') || objConfig.collection || 'object_data');\n    if (data.rc != 'success') {\n        common.nodeerror('System Error ' + data.rc, node);\n        return;\n    }\n    if (!data.doc) {\n        common.nodeerror('page not found ' + objKey, node);\n        return;\n    }\n    const viewName = node.getValue('object-view') || 'default';\n    const view = objConfigNode.findNamedChild('object-view', viewName);\n    if (!view) {\n        common.nodeerror('object-view : ' + viewName + ' not found. object-config: ' + objType, node);\n        return;\n    }\n    common.substituteVars(view, node.attribs);\n    const toolbarView = common.findNamed(node, 'view', 'object-item-toolbar');\n    var objectItemToolbar = null;\n    if (toolbarView) {\n        const toolbarList = toolbarView.findChildren('toolbar');\n        if (toolbarList.length) {\n            objectItemToolbar = toolbarList[0];\n        }\n    }\n    node.attribs['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    const vars = node.attribs;\n    for (var prop in node.attribs) {\n        vars[prop] = node.attribs[prop];\n    }\n    node.empty();\n    const rec = data.doc;\n    const _vars = rec;\n    _vars['object-type'] = objType;\n    _vars['object-name'] = objKey;\n    _vars['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    vars['object-name'] = rec['name'];\n    vars['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    const _view = view.clone();\n    _view.attribs.element = 'div';\n    _view.addClass('wx-view-object-list-item');\n    _view.attribs.name = 'object-view';\n    var _toolbar = null;\n    if (objectItemToolbar) {\n        _toolbar = objectItemToolbar.clone();\n        node.addChild(_toolbar);\n    }\n    common.substituteVars(_view, _vars, true, common.recordPattern);\n    common.substituteVars(_view, node.attribs);\n    node.addChild(_view);\n    xtensions.processXtens(node, context);\n}"
    },
    "object-list": {
      "tag": "xten",
      "name": "object-list",
      "element": "div",
      "attribs": {
        "tag": "attribs",
        "allow": "owner, admin",
        "node": {
          "tag": "attribs",
          "attribs": {
            "allow": "owner, admin"
          },
          "children": [],
          "text": null
        }
      },
      "style": "position: relative;",
      "css": ".wx-xten-object-list .wx-view-list-item {position: relative; width: 100%;}.wx-xten-object-list .wx-view-list-parent {position: relative;}.wx-xten-object-list .wx-view-list-parent:not(tbody) {display: flex; flex-wrap: wrap; width: 100%;}.wx-xten-object-list .object-list-toolbar {display: none;}.wx-xten-object-list .object-item-toolbar {display: none;}.wx-xten-object-list.wx-state-editable .object-list-toolbar {display: inline-block;}.wx-xten-object-list.wx-state-editable .object-item-toolbar {display: inline-block;}",
      "cssNode": "#[$id] .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#[$id] .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: 1 0 0px;width: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}",
      "load": "async (node, context, xten, prop) => {\n    /*var startTime = common.startTimer();*/\n    const objType = node.getValue('object-type');\n    if (!objType) {\n        node.attribs.error = 'object-type is mandatory';\n        common.error(node.attribs.error);\n        return;\n    }\n    const configNode = common.findNamed(node, 'object-config', objType);\n    if (!configNode) {\n        node.attribs.error = 'could not find object-config for object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const listViewName = node.getValue('list-view') || 'default';\n    listView = configNode.findNamedChild('list-view', listViewName).clone();\n    if (!listView) {\n        node.attribs.error = 'list-view ' + listViewName + ' not found in object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const vars = node.attribs;\n    var pageSize = node.getValue('pagesize') || vars[objType + '-pagesize'] || configNode.getValue('pagesize');\n    pageSize = pageSize ? parseInt(pageSize.toString().trim()) : 0;\n    var pageNumber = context.vars[objType + '-pagenum'] || node.getValue('pagenum');\n    pageNumber = pageNumber ? parseInt(pageNumber.toString().trim()) : 1;\n    const sort = node.getValue('sort') || vars[objType + '-sort'] || configNode.getValue('sort') || 'created:1';\n    const _sort = common.nameValueStr2Json(sort);\n    const label = node.getValue('label') || configNode.getValue('label') || common.toCamelCase(objType);\n    const plural = node.getValue('plural') || configNode.getValue('plural') || (common.toCamelCase(objType) + 's');\n    const orientation = node.getValue('orientation') || vars[objType + '-orientation'] || configNode.getValue('orientation') || 'column';\n    const searchText = node.getValue('search-text');\n    const parent = node.getValue('parent');\n    const category = node.getValue('category');\n    const _selector = node.getValue('selector');\n    const query = node.getValue('query');\n    const collection = configNode.getValue('collection');\n    const selector = {\n        type: objType\n    };\n    if (searchText) {\n        selector['$text'] = {\n            $search: searchText\n        };\n    }\n    if (parent) {\n        selector.parent = parent;\n    }\n    if (category) {\n        selector.category = category;\n    }\n    if (_selector) {\n        const list = _selector.split(/\\s*\\,\\s*/);\n        list.forEach(li => {\n            const [field, value] = list.split(/\\s*\\:\\s*/);\n            selector[field] = value;\n        });\n    }\n    if (query) {\n        try {\n            const _query = JSON.parse(query);\n            for (var prop in _query) {\n                selector[prop] = _query[prop];\n            }\n        } catch (e) {\n            node.attribs.error = 'invalide json passed to object-list ' + query;\n            common.error(node.attribs.error);\n            return;\n        }\n    }\n    const data = await database.getObjectList(selector, pageSize, pageNumber, _sort, collection);\n    if (data.rc != 'success') {\n        common.nodeerror('System Error', data.rc);\n        return;\n    }\n    const _vars = {};\n    _vars['object-type'] = objType;\n    _vars['object-label'] = label;\n    _vars['object-plural'] = plural;\n    if (!data.docs || !data.docs.length) {\n        const emptyViewName = node.getValue('empty-view') || 'default';\n        var emptyView = listView.findNamedChild('empty-view', emptyViewName);\n        if (!emptyView) {\n            node.attribs.error = 'list-view ' + listViewName + ' does not have empty view ' + emptyViewName + '. object-type' + objType;\n            common.error(node.attribs.error);\n            return;\n        }\n        emptyView = emptyView.clone();\n        node.empty();\n        node.insertChildren(0, emptyView.children);\n        common.substituteVars(node, _vars, true, common.recordPattern);\n        common.substituteVars(node, node.attribs);\n        xtensions.processXtens(node, context);\n        return;\n    }\n    const dataViewName = node.getValue('data-view') || 'default';\n    var dataView = listView.findNamedChild('data-view', dataViewName);\n    if (!dataView) {\n        node.attribs.error = 'list-view ' + listViewName + ' does not have data view ' + dataViewName + '. object-type' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    dataView = dataView.clone();\n    const placeholderList = dataView.find('list-items');\n    if (placeholderList.length != 1) {\n        node.attribs.error = 'list-view ' + listViewName + ' should have 1 placeholder for list-items. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const placeholder = placeholderList[0];\n    const listParent = placeholder.parent;\n    if (listParent.children.length != 1) {\n        node.attribs.error = 'in list-view ' + listViewName + ' parent of list-item template should not contain anything other than list-item template. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const listItemName = placeholder.attribs.name || 'default';\n    listParent.empty();\n    listParent.addClass('wx-state-orientation-' + orientation);\n    listParent.addClass('wx-view-list-parent');\n    const listItemView = listView.findNamedChild('list-item-view', listItemName);\n    if (!listItemView) {\n        node.attribs.error = 'list-view ' + listViewName + ' does not have list-item-view ' + listItemName + '. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    if (listItemView.children.length != 1) {\n        node.attribs.error = 'list-item-view ' + listItemName + ' in list-view ' + listViewName + ' should hae only one child. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const pages = data ? data.pages : 1;\n    const list = data && data.docs ? data.docs : [];\n    for (var i = 0; i < list.length; i++) {\n        const rec = list[i];\n        rec['object-sno'] = i;\n        rec['object-name'] = rec.name;\n        for (var prop in rec['indexed-urls']) {\n            rec['url-' + prop] = rec['indexed-urls'][prop];\n        }\n        const li = listItemView.clone();\n        li.children[0].addClass('wx-view-list-item');\n        common.substituteVars(li, rec, true, common.recordPattern);\n        common.substituteVars(li, node.attribs); /*xtensions.processXtens(li, context);*/\n        listParent.insertChildren(0, li.children);\n    }\n    node.empty();\n    node.insertChildren(0, dataView.children);\n    common.substituteVars(node, _vars, true, common.recordPattern);\n    common.substituteVars(node, node.attribs); /*common.endTimer(startTime, '=> object-list load before process xtens.');*/ /*var startTime = common.startTimer();*/\n    xtensions.processXtens(node, context); /*common.endTimer(startTime, '=> object-list load process xtens.');*/\n}"
    },
    "_form": {
      "tag": "xten",
      "name": "_form",
      "element": "form",
      "style": "position: relative;display: block;",
      "nodeStyle": "width: [$width||100%];padding: [$padding||20px];",
      "css": ".wx-xten-_form label {flex: 1 0 30%;text-align: right;}.wx-xten-_form input {flex: 1 0 70%;}",
      "initElement": "element.addEventListener('submit', (event) => {event.preventDefault();event.stopPropagation();});element.addEventListener('form-submit-clicked', () => {const list = element.querySelectorAll('.wx-xten-xinput');var valid = true;var checkHuman = null;for (var i = 0; i < list.length; i++) {const _valid = xfns.xinput.validate(list[i]);if (!_valid) {valid = false;}}if (!valid) {const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}return;}const data = wxfns.getFormData(element);if (data.gotcha) {wxfns.error('No entry', 'Bots are not allowed to click buttons in Wohola X');const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}return;}if (data.hasOwnProperty('check-human')) {const human = data['check-human'];if (!human) {const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}wxfns.error('Cannot Send Message', 'Bot check failed');return;}}const submit = new CustomEvent('form-submit', {bubbles: true,detail: data});element.dispatchEvent(submit);});",
      "init": "const name = node.getValue('name');const children = node.children;const labels = node.find('label');labels.forEach(label => {label.attribs['object-name'] = name;});const objName = node.getValue('object-name');if (objName) {const inputs = node.find('.xinput');inputs.forEach(input => {input.attribs['object-name'] = objName;});}"
    },
    "_list": {
      "tag": "xten",
      "name": "_list",
      "element": "_hidden",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
      "init": "const toolbar = node.findChild('toolbar');toolbar.remove();const children = node.children;node.empty();const template = node.newChild('div');template.attribs.name = 'list-item-view';template.attribs.element = '_hidden';template.insertChildren(0, children);const list = node.newChild('div');list.attribs.name = 'wx-view-datalist';list.addClass('wx-view-datalist');node.addChild(toolbar);",
      "load": "var startTime = common.startTimer();const list = node.findNamedChild('div', 'wx-view-datalist');list.empty();const value = await database.inlineValue(node, context, xten);if (!value || !value.length) {node.attribs['item-count'] = '0';return;}node.attribs['item-count'] = value.length.toString();const template = node.findNamedChild('div', 'list-item-view');const name = node.getValue('name');for (var i = 0; i < value.length; i++) {const listitem = list.newChild('listitem', 'last');listitem.attribs.id = value[i].uid;listitem.attribs['list-idx'] = i.toString();listitem.attribs.name = name;xtensions.processXtens(listitem, context);template.children.forEach(child => {const _child = child.clone();_child.iterate(_ch => {if (_ch.attribs['list-child']) {_ch.attribs['list-selector'] = name + '.$[list-idx]';_ch.attribs['list-idx'] = i.toString();}});listitem.addChild(_child);});if (i == 0) {listitem.addClass('active');}common.substituteVars(listitem, listitem.attribs);common.substituteVars(listitem, node.attribs);}/*common.endTimer(startTime, '=> _list load.');*/"
    },
    "listitem": {
      "tag": "xten",
      "name": "listitem",
      "element": "div",
      "style": "position: relative;",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-item-toolbar",
          "index": "1",
          "class": "list-item-toolbar"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "remove",
              "class": "remove",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "delete list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "name": "_listItemRemove",
                  "class": "_listItemRemove",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "delete-list-item",
                      "class": "delete-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      }
    },
    "add-libs": {
      "tag": "xten",
      "name": "add-libs",
      "element": "_hidden",
      "init": "const _value = (node.attribs['libs'] || node.text).trim();if (!_value) {return;}if (!context.libs) {context.libs = {};}const list = _value.split(',');list.forEach((lib) => {const _lib = lib.trim();if (!context.libs[_lib]) {context.libs[_lib] = _lib;}});"
    },
    "align": {
      "tag": "xten",
      "name": "align",
      "element": "div",
      "style": "position: relative;display: flex;",
      "nodeStyle": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
    },
    "banner": {
      "tag": "xten",
      "name": "banner",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-banner > .wx-view-datalist {display: flex;position: relative;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem {display: none;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem.active {display: block;}.wx-xten-banner .banner-controls {display: display-block;}.wx-xten-banner[item-count=\"0\"] .banner-controls {display: none;}.wx-xten-banner[item-count=\"1\"] .banner-controls {display: none;}",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n    const bottom = node.findChild('pos-bottom') || node.findNamedChild('div', 'banner-bottom-toolbar');\n    const changer = bottom.findChild('toolbar') || bottom.findNamedChild('div', 'slide-changer');\n    changer.empty();\n    for (var i = 0; i < value.length; i++) {\n        const icon = changer.newChild('icon');\n        icon.attribs.name = 'circle';\n        icon.attribs['slide-idx'] = i.toString();\n        icon.addClass('change-slide');\n        const tooltip = icon.newChild('tooltip');\n        tooltip.text = 'Slide ' + (i + 1).toString();\n    }\n    xtensions.processXtens(bottom, context);\n}",
      "allow": "owner, admin",
      "mandatory": "aspect-ratio",
      "cssNode": "#[$id] > .wx-view-datalist > .wx-xten-listitem {aspect-ratio: [$aspect-ratio||1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "pos-left",
            "attribs": {
              "name": "banner-left-button",
              "class": "banner-left-button banner-controls",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "left",
                  "class": "left",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerLeftClick",
                      "class": "_fnBannerLeftClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == 0 ? total - 1 : idx - 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-right",
            "attribs": {
              "name": "banner-right-button",
              "class": "banner-right-button banner-controls",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "right",
                  "class": "right",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerRightClick",
                      "class": "_fnBannerRightClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');const idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-bottom",
            "attribs": {
              "name": "banner-bottom-toolbar",
              "class": "banner-bottom-toolbar banner-controls",
              "bottom": "30px",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "toolbar",
                "attribs": {
                  "name": "slide-changer",
                  "class": "slide-changer",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "const item = element.querySelector('.wx-xten-listitem');if (item) {item.classList.add('active');}const icons = element.querySelectorAll('.change-slide');icons.forEach(_icon => {_icon.addEventListener('click', (event) => {event.preventDefault();const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');if (active) {const idx = active.getAttribute('list-idx');active.classList.remove('active');}const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + _icon.getAttribute('slide-idx') + '\"]');target && target.classList.add('active');});});",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "change-slide": {
      "tag": "xten",
      "name": "change-slide",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "style": "background-color: #fefefe",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "circle",
                "attribs": {
                  "style": "background-color: #aaaaaa",
                  "css-width": "50px",
                  "css-height": "50px",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "align",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "{$eval([$list-idx] + 1)}"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      }
    },
    "body": {
      "tag": "xten",
      "name": "body",
      "style": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
      "nodeStyle": "background-color: [$dynamic-background-color||#ffffff];",
      "css": "[show] {display: none;}",
      "prepend": {
        "tag": "prepend",
        "configuration": {
          "tag": "configuration",
          "name": "page-configuration",
          "class": "page-configuration",
          "node": {
            "tag": "configuration",
            "attribs": {
              "name": "page-configuration",
              "class": "page-configuration"
            },
            "children": [],
            "text": null
          }
        },
        "node": {
          "tag": "prepend",
          "attribs": {},
          "children": [
            {
              "tag": "configuration",
              "attribs": {
                "name": "page-configuration",
                "class": "page-configuration",
                "child-idx": 0
              },
              "children": [],
              "text": null
            }
          ],
          "text": null
        }
      }
    },
    "carousel": {
      "tag": "xten",
      "name": "carousel",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "show",
              "class": "show show-button",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Start Slide Show"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "add-class",
                    "attribs": {
                      "classes": "start-show",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "code",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "const element = fntarget;var time = element.getAttribute('interval');if (!time) {wxfns.error('Error running slide show', 'no interval defined in element wxml');return;}time = parseInt(time) * 1000;if (!time) {wxfns.error('Error running slide show', 'invalid value in interval');return;}var idx = 0;element.interval = setInterval(() => {var active = element.querySelector('.wx-xten-listitem.active');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;idx = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + idx.toString() + '\"]');target && target.classList.add('active');}, time);"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "stop",
              "class": "stop stop-button",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Stop Slide Show"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "remove-class",
                    "attribs": {
                      "classes": "start-show",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "code",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "const element = fntarget;clearInterval(element.interval);delete element.interval;"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-carousel > .wx-view-datalist {position: relative;display: block;width: 100%;}.wx-xten-wx-xten-carousel .list-item-toolbar {display: none; position: relative; }.wx-xten-wx-xten-carousel.wx-state-editable .wx-xten-listitem.active .list-item-toolbar {display: flex; right: 0;}.wx-xten-wx-xten-carousel .list-toolbar {display: none;}.wx-xten-wx-xten-carousel.wx-state-editable .list-toolbar {display: flex; }.wx-xten-carousel .wx-xten-listitem {display: none;}.wx-xten-carousel.wx-state-editable .wx-xten-listitem {display: none;width: 100%;}.wx-xten-carousel.wx-state-editable .wx-xten-listitem.active {display: block;}.wx-xten-carousel.start-show.wx-state-editable .wx-xten-icon.add {display: none;}.wx-xten-carousel.start-show.wx-state-editable .list-item-toolbar {display: none;}.wx-xten-carousel.start-show.wx-state-editable .wx-xten-listitem .wx-xten-toolbar {display: none;}.wx-xten-carousel .banner-controls {display: none;}.wx-xten-carousel.wx-state-editable .banner-controls {display: inline-block;}.wx-xten-carousel.start-show .banner-controls {display: none;}.wx-xten-carousel .show-button {display: none;}.wx-xten-carousel .stop-button {display: none;}.wx-xten-carousel.wx-state-editable .show-button {display: initial;}.wx-xten-carousel.wx-state-editable .stop-button {display: none;}.wx-xten-carousel.start-show.wx-state-editable .show-button {display: none;}.wx-xten-carousel.start-show.wx-state-editable .stop-button {display: initial;}.wx-xten-carousel.start-show .wx-xten-listitem {position: absolute;top: 0;left: 0;right: 0;bottom: 0;display: block;opacity: 0;transition: all 2s;}.wx-xten-carousel.start-show .wx-xten-listitem.active {opacity: 1;transition: all 2s;}",
      "init": "const toolbar = node.findChild('toolbar');toolbar.remove();const children = node.children;node.empty();const template = node.newChild('div');template.attribs.name = 'list-item-view';template.attribs.element = '_hidden';template.insertChildren(0, children);const list = node.newChild('div');list.attribs.name = 'wx-view-datalist';list.addClass('wx-view-datalist');node.addChild(toolbar);",
      "load": "var startTime = common.startTimer();const list = node.findNamedChild('div', 'wx-view-datalist');list.empty();const value = await database.inlineValue(node, context, xten);if (!value || !value.length) {node.attribs['item-count'] = '0';return;}node.attribs['item-count'] = value.length.toString();const template = node.findNamedChild('div', 'list-item-view');const name = node.getValue('name');for (var i = 0; i < value.length; i++) {const listitem = list.newChild('listitem', 'last');listitem.attribs.id = value[i].uid;listitem.attribs['list-idx'] = i.toString();listitem.attribs.name = name;xtensions.processXtens(listitem, context);template.children.forEach(child => {const _child = child.clone();_child.iterate(_ch => {if (_ch.attribs['list-child']) {_ch.attribs['list-selector'] = name + '.$[list-idx]';_ch.attribs['list-idx'] = i.toString();}});listitem.addChild(_child);});if (i == 0) {listitem.addClass('active');}common.substituteVars(listitem, listitem.attribs);common.substituteVars(listitem, node.attribs);}/*common.endTimer(startTime, '=> _list load.');*/\nconst bottom = node.findChild('pos-bottom') || node.findNamedChild('div', 'banner-bottom-toolbar');const changer = bottom.findChild('toolbar') || bottom.findNamedChild('div', 'slide-changer');changer.empty();for (var i = 0; i < value.length; i++) {const icon = changer.newChild('icon');icon.attribs.name = 'circle';icon.attribs['slide-idx'] = i.toString();icon.addClass('change-slide');const tooltip = icon.newChild('tooltip');tooltip.text = 'Slide ' + (i + 1).toString();}xtensions.processXtens(bottom, context);",
      "allow": "owner, admin",
      "mandatory": "aspect-ratio",
      "cssNode": "#[$id] > .wx-view-datalist {aspect-ratio: [$aspect-ratio||1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "pos-left",
            "attribs": {
              "name": "banner-left-button",
              "class": "banner-left-button banner-controls",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "left",
                  "class": "left",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerLeftClick",
                      "class": "_fnBannerLeftClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == 0 ? total - 1 : idx - 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-right",
            "attribs": {
              "name": "banner-right-button",
              "class": "banner-right-button banner-controls",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "right",
                  "class": "right",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerRightClick",
                      "class": "_fnBannerRightClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');const idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-bottom",
            "attribs": {
              "name": "banner-bottom-toolbar",
              "class": "banner-bottom-toolbar banner-controls",
              "bottom": "30px",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "toolbar",
                "attribs": {
                  "name": "slide-changer",
                  "class": "slide-changer",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "if (wxfns.hasClass(element, 'wx-state-editable')) {return;}var time = element.getAttribute('interval');if (!time) {return;}time = parseInt(time) * 1000;if (!time) {element.setAttribute('error', 'interval value is incorrect');return;}var idx = 0;setInterval(() => {var active = element.querySelector('.wx-xten-listitem.active');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;idx = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + idx.toString() + '\"]');target && target.classList.add('active');}, time);",
      "_base": "banner",
      "_class": "wx-xten-_list wx-xten-banner"
    },
    "center": {
      "tag": "xten",
      "name": "center",
      "element": "div",
      "style": "display: flex;width: 100%;height: 100%;justify-content: center;align-items: center;"
    },
    "check-human": {
      "tag": "xten",
      "name": "check-human",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "style": "position: relative",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "canvas",
                "attribs": {
                  "name": "human-canvas",
                  "height": "70",
                  "width": "200",
                  "class": "human-canvas",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              },
              {
                "tag": "div",
                "attribs": {
                  "style": "position: absolute; z-index: -1; top: 0; left: 0; bottom: 0; right: 0",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "textalign",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "input",
                        "attribs": {
                          "type": "checkbox",
                          "name": "gotcha",
                          "class": "gotcha",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "svg",
            "attribs": {
              "name": "tick-mark",
              "width": "20",
              "height": "20",
              "viewBox": "0 0 20 20",
              "element": "_hidden",
              "class": "tick-mark",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "path",
                "attribs": {
                  "d": "M5,10 L8,14 L15,6",
                  "fill": "none",
                  "stroke": "green",
                  "stroke-width": "2",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "css": ".wx-xten-check-human .human-canvas {border: 1px solid grey;}",
      "initElement": "const radius = 12;const svgMarkup = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">' +'<path d=\"M5,10 L8,14 L15,6\" fill=\"none\" stroke=\"green\" stroke-width=\"3\" />' +'</svg>';var img = new Image();img.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgMarkup);var canvas = element.querySelector(\"canvas\");var circle = {};var ctx = canvas.getContext(\"2d\");ctx.clearRect(0, 0, canvas.width, canvas.height);element._value = false;ctx.lineWidth = 3;ctx.beginPath();ctx.font = '16px Arial';ctx.fillStyle = 'black';ctx.fillText('Please click in the circle' , 20, 17);circle.x = Math.random() * (canvas.width - 2 * radius) + radius;circle.y = Math.random() * (canvas.height - 2 * radius - 17) + radius + 17;ctx.beginPath();ctx.strokeStyle = circle.color;ctx.arc(circle.x, circle.y, radius, 0, 2 * Math.PI);ctx.stroke();ctx.fillStyle = 'yellow';ctx.fill();ctx.closePath();canvas.addEventListener('click', function handleClick(event) {var rect = canvas.getBoundingClientRect();var mouseX = event.clientX - rect.left;var mouseY = event.clientY - rect.top;var distance = Math.sqrt((mouseX - circle.x) ** 2 + (mouseY - circle.y) ** 2);if (distance <= radius) {ctx.drawImage(img, circle.x - radius, circle.y - radius, radius * 2, radius * 2);element._value = true;canvas.removeEventListener('click', handleClick);}});",
      "function": [
        {
          "tag": "function",
          "_text": "return element.querySelector('gotcha') != 'true' && element._value == true;",
          "name": "get-value",
          "class": "get-value",
          "node": {
            "tag": "function",
            "attribs": {
              "name": "get-value",
              "class": "get-value"
            },
            "children": [],
            "text": "return element.querySelector('gotcha') != 'true' && element._value == true;"
          }
        },
        {
          "tag": "function",
          "_text": "initElement['check-human'](element);",
          "name": "clear",
          "class": "clear",
          "node": {
            "tag": "function",
            "attribs": {
              "name": "clear",
              "class": "clear"
            },
            "children": [],
            "text": "initElement['check-human'](element);"
          }
        }
      ]
    },
    "circle": {
      "tag": "xten",
      "name": "circle",
      "element": "div",
      "style": "overflow: hidden;",
      "nodeStyle": "border-radius: [$radius||50%];"
    },
    "click": {
      "tag": "xten",
      "name": "click",
      "element": "_hidden",
      "init": "(node, context, xten) => {\n    addEvent(node, 'click', context, prop);\n}"
    },
    "column": {
      "tag": "xten",
      "name": "column",
      "element": "div",
      "style": "position: relative;",
      "nodeStyle": "flex: [$ratio||1] [$ratio||0] 1px;"
    },
    "configuration": {
      "tag": "xten",
      "name": "configuration",
      "element": "div",
      "allow": "admin",
      "style": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
      "css": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
      "cssNode": "body::before {z-index: [$index||-1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "row",
            "attribs": {
              "child-idx": 0
            },
            "children": [
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "class": "config-name",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "[$name] - [$url]"
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "toolbar",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "landscape",
                          "background-color": "#dedede",
                          "class": "landscape",
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "page background toolbar"
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "save",
                          "class": "save",
                          "child-idx": 1
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "upload image"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundSaveImage",
                              "field-selector": "page-configuration.background-image",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": "'url(' + toolbarParent['uploaded-url'] + ')'"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": ".wx-xten-configuration",
                                  "class": "background-image",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "toolbarParent['uploaded-url']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "uploaded-url",
                                  "class": "uploaded-url",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "changed-file",
                                  "class": "changed-file",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "remove-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "close",
                          "class": "close",
                          "child-idx": 2
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "cancel"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundCancelImage",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "changed-file",
                                  "class": "changed-file",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "remove-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "upload",
                          "class": "upload",
                          "child-idx": 3
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "select image"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundUploadImage",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "selectfile",
                                "attribs": {
                                  "file-type": "image/*",
                                  "file": "changed-file",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": "'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')'"
                              },
                              {
                                "tag": "add-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "colors",
                          "class": "colors",
                          "child-idx": 4
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "background color"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundColor",
                              "field-selector": "page-configuration.background-color",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('background-color')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "background-color",
                                  "type": "color",
                                  "value": "background-color",
                                  "title": "Background Color",
                                  "class": "background-color",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-color",
                                  "parent": "body",
                                  "class": "background-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['background-color']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['background-color']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "filter",
                          "class": "filter",
                          "child-idx": 5
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "filter color"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundFilterColor",
                              "field-selector": "page-configuration.page-filter-color",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('page-filter-color')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "type": "color",
                                  "value": "page-filter-color",
                                  "title": "Page Filter Color",
                                  "class": "page-filter-color",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-css-var",
                                "attribs": {
                                  "name": "--page-filter-color",
                                  "parent": "body",
                                  "class": "--page-filter-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-color']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-color']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "glasses",
                          "class": "glasses",
                          "child-idx": 6
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "filter opacity"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundFilterOpacity",
                              "field-selector": "page-configuration.page-filter-opacity",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('page-filter-opacity')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "type": "number",
                                  "min": "0",
                                  "max": "1",
                                  "step": "0.01",
                                  "value": "page-filter-opacity",
                                  "title": "Page Background Filter Opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-css-var",
                                "attribs": {
                                  "name": "--page-filter-opacity",
                                  "parent": "body",
                                  "class": "--page-filter-opacity",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-opacity']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-opacity']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "delete-landscape",
                          "class": "delete-landscape",
                          "child-idx": 7
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "delete landscape"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_deletePageBackground",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.transaction(element, 'delete-background', {name: element.getAttribute('name')});if (result.rc != 'success') {return;}"
                              },
                              {
                                "tag": "unset-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "background-image",
                                  "class": "background-image",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-style",
                                "attribs": {
                                  "name": "background-color",
                                  "parent": "body",
                                  "class": "background-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-css-var",
                                "attribs": {
                                  "name": "--page-filter-color",
                                  "parent": "body",
                                  "class": "--page-filter-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 6
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-css-var",
                                "attribs": {
                                  "name": "--page-filter-opacity",
                                  "parent": "body",
                                  "class": "--page-filter-opacity",
                                  "child-idx": 7
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 8
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "class": "page-errors-notification",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "bug",
                          "class": "bug",
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "errors in page"
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 3
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "const access = checkAccess(element);if (access) {element.style.display = \"flex\";} else {element.style.display = \"none\";}if (document.querySelector('[error]') && access) {document.querySelector('.page-errors-notification').style.display = 'block';}const backgroundImage = element.getAttribute('background-image');if (backgroundImage) {element.parentElement.style['background-image'] = backgroundImage;}else{element.parentElement.style['background-image'] = null;}const backgroundColor = element.getAttribute('background-color');if (backgroundColor) {element.parentElement.style['background-color'] = backgroundColor;}else{element.parentElement.style['background-color'] = 'none';}const underlayColor = element.getAttribute('page-filter-color');if (underlayColor) {element.parentElement.style.setProperty('--page-filter-color', underlayColor);}else{element.parentElement.style.setProperty('--page-filter-color', 'none');}const underlayOpacity = element.getAttribute('page-filter-opacity');if (underlayOpacity) {element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);}else{element.parentElement.style.setProperty('--page-filter-opacity', 'none');}",
      "init": "(node, context, xten) => {\n    common.substituteVars(node, node.attribs, true);\n}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value && value['background-image']) {\n        node.attribs['background-image'] = 'url(' + value['background-image'] + ')';\n    } else {\n        delete node.attribs['background-image'];\n    }\n    if (value && value['background-color']) {\n        node.attribs['background-color'] = value['background-color'];\n    } else {\n        delete node.attribs['background-color'];\n    }\n    if (value && value['page-filter-color']) {\n        node.attribs['page-filter-color'] = value['page-filter-color'];\n    } else {\n        delete node.attribs['page-filter-color'];\n    }\n    if (value && value['page-filter-opacity']) {\n        node.attribs['page-filter-opacity'] = value['page-filter-opacity'];\n    } else {\n        delete node.attribs['page-filter-opacity'];\n    }\n}",
      "txn": {
        "tag": "txn",
        "_text": "const objKey = attribs['object-name'] || context['object-name'];const value = await database.getFieldValue(objKey, attribs.name, attribs);const prevFileURL = value ? value['background-image'] : null;if (prevFileURL) {const prevFilePath = context.siteRoot + '/public/uploads/' + prevFileURL;files.remove(prevFilePath);}return await database.removeFieldValue(objKey, attribs.name, attribs);",
        "name": "delete-background",
        "class": "delete-background",
        "node": {
          "tag": "txn",
          "attribs": {
            "name": "delete-background",
            "class": "delete-background"
          },
          "children": [],
          "text": "const objKey = attribs['object-name'] || context['object-name'];const value = await database.getFieldValue(objKey, attribs.name, attribs);const prevFileURL = value ? value['background-image'] : null;if (prevFileURL) {const prevFilePath = context.siteRoot + '/public/uploads/' + prevFileURL;files.remove(prevFilePath);}return await database.removeFieldValue(objKey, attribs.name, attribs);"
        }
      },
      "txns": {}
    },
    "container": {
      "tag": "xten",
      "name": "container",
      "element": "div",
      "style": "display: block;"
    },
    "cover": {
      "tag": "xten",
      "name": "cover",
      "element": "div",
      "style": "display: flex;position: absolute;",
      "nodeStyle": "top: [$top||0];left: [$left||0];bottom: [$bottom||0];right: [$right||0];justify-content: [$horizontal||center];align-items: [$vertical||center];"
    },
    "css": {
      "tag": "xten",
      "name": "css",
      "element": "_hidden",
      "mandatory": "name",
      "init": "(node, context, xten) => {\n    const name = node.getValue('name');\n    context.css[name] = node.text;\n}"
    },
    "currency-icon": {
      "tag": "xten",
      "name": "currency-icon",
      "element": "div",
      "mandatory": "name",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "child-idx": 0
            },
            "children": [
              {
                "tag": "span",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;display: inline-block;",
      "nodeStyle": "border: [$border||1px solid grey];background: [$background-color||#efefef];",
      "css": ".wx-xten-currency-icon > div {position: relative;display: flex;height: [$height||30px];width: auto;align-items: center;justify-content: center;}.wx-xten-currency-icon > div span {display: inline-block;font-size: 28px;height: [$height||30px];width: fit-content;min-width: [$height||30px];text-align: center;}",
      "init": "var name = node.getValue('name');if (!locale.countryCodes[name]) {if (locale.countryNames[name]) {name = locale.countryNames[name].code;}else{common.nodeerror('country code not found ' + name);return;}}const currency = locale.countryCodes[name].currencySymbol || locale.countryCodes[name].currencyCode;node.findOne('span').text = currency;"
    },
    "currency": {
      "tag": "xten",
      "name": "currency",
      "element": "span",
      "mandatory": "name",
      "init": "var name = node.getValue('name');if (!locale.countryCodes[name]) {if (locale.countryNames[name]) {name = locale.countryNames[name].code;}else{common.nodeerror('country code not found ' + name);return;}}const currency = locale.countryCodes[name].currencySymbol || locale.countryCodes[name].currencyCode;node.text = currency;"
    },
    "datetime": {
      "tag": "xten",
      "name": "datetime",
      "mandatory": "name",
      "load": "const name = node.getValue('name');if (!name) {_common.error('name is missing in xten: ' + xten, node);return null;}const collection = node.getValue('collection') || 'object_data';const objKey = node.getValue('object-name') || context['object-name'];const value = await database.getFieldValue(objKey, name, node.attribs, collection);if (!value) {return;}const format = node.getValue('format');const [date, time] = value.split('T');const [year, month, day] = date.split('-');const lastChar = time.slice(-1);const _time = time.slice(0, -1);const [hr, min, sec, ms] = _time.replace('.', ':').split(':');const months = 'January, February, March, April, May, June, July, August, September, October, November, December'.split(/\\s*\\,\\s*/);const days = 'Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday'.split(/\\s*\\,\\s*/);const _day = (new Date(value)).getDay();const subs = {DD: day,MM: month,YY: year.slice(2),YYYY: year,hh: hr,mm: min,ss: sec,ms: ms,month: months[parseInt(month)],mon: months[parseInt(month)].slice(0, 3),day: days[parseInt(_day)].slice(0, 3),weekday: [parseInt(_day)]};const output = common.substitute(format, subs);if (output) {node.text = output;}"
    },
    "draggable": {
      "tag": "xten",
      "name": "draggable",
      "element": "div",
      "style": "position: absolute;display: inline-block;height: auto;width: auto;",
      "nodeStyle": "overflow: [$overflow||hidden];resize: [$resize||both];cursor: [$cursor||move];",
      "initElement": "element.onmousedown = (e) => {const resizeHandleSize = 15;const width = element.offsetWidth;const height = element.offsetHeight;const computedStyle = window.getComputedStyle(element);const cursorStyle = computedStyle.getPropertyValue('cursor');if (e.clientX > (element.offsetLeft + width - resizeHandleSize) && e.clientY > (element.offsetTop + height - resizeHandleSize)){return true;}var currentX = 0;var currentY = 0;currentX = e.clientX;currentY = e.clientY;element.classList.add(\"dragging\");document.onmouseup = () => {document.onmouseup = null;document.onmousemove = null;element.classList.remove(\"dragging\");};document.onmousemove = (e) => {element.style.left = (element.offsetLeft - currentX + e.clientX) + 'px';element.style.top = (element.offsetTop - currentY + e.clientY) + 'px';currentX = e.clientX;currentY = e.clientY;};};"
    },
    "email-form": {
      "tag": "xten",
      "name": "email-form",
      "element": "form",
      "style": "position: relative;display: block;",
      "nodeStyle": "width: [$width||100%];padding: [$padding||20px];",
      "css": ".wx-xten-email-form .edit-email-text {display: none; background-color: lightgrey; z-index: 9999;}.wx-xten-email-form.show-email .edit-email-text {display: block;}.wx-xten-email-form .wx-xten-textedit {height: 500px; width: 600px; background-color: white; border: 1px solid grey; overflowY: scroll; padding: 10px;}.wx-xten-email-form .email-settings {padding: 5px; margin: 5px; background-color: white; width: 100%; border: 1px solid grey;}.wx-xten-email-form .wx-xten-toolbar {display: none;}.wx-xten-email-form.wx-state-editable .wx-xten-toolbar {display: initial;}",
      "initElement": "element.addEventListener('submit', (event) => {event.preventDefault();event.stopPropagation();});element.addEventListener('form-submit-clicked', () => {const list = element.querySelectorAll('.wx-xten-xinput');var valid = true;var checkHuman = null;for (var i = 0; i < list.length; i++) {const _valid = xfns.xinput.validate(list[i]);if (!_valid) {valid = false;}}if (!valid) {const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}return;}const data = wxfns.getFormData(element);if (data.gotcha) {wxfns.error('No entry', 'Bots are not allowed to click buttons in Wohola X');const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}return;}if (data.hasOwnProperty('check-human')) {const human = data['check-human'];if (!human) {const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}wxfns.error('Cannot Send Message', 'Bot check failed');return;}}const submit = new CustomEvent('form-submit', {bubbles: true,detail: data});element.dispatchEvent(submit);});\nelement.addEventListener('form-submit', async (event) => {const data = event.detail;const result = await wxfns.transaction(element, 'email-form', data);const captcha = element.querySelector('.wx-xten-check-human');if (captcha) {xfns['check-human'].clear(captcha);}if (result.rc != 'success') {return;}wxfns.inform('Email sent successfully');element.reset();});",
      "init": "const name = node.getValue('name');const children = node.children;const labels = node.find('label');labels.forEach(label => {label.attribs['object-name'] = name;});const objName = node.getValue('object-name');if (objName) {const inputs = node.find('.xinput');inputs.forEach(input => {input.attribs['object-name'] = objName;});}",
      "mandatory": "name, smtp-settings",
      "allow": "admin",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "screencover",
            "attribs": {
              "class": "edit-email-text",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "pos-top-right",
                "attribs": {
                  "top": "20px",
                  "right": "20px",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "icon",
                    "attribs": {
                      "name": "cross",
                      "class": "cross",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "click",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "const element = event.target.closest('.wx-xten-email-form');wxfns.removeClass(element, 'show-email');"
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "pos-top",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "style": "padding: 10px; font-weight: bold; background: #efefef; text-align: center; width: 600px;",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "Email Body email-text-[$name]"
                  }
                ],
                "text": null
              },
              {
                "tag": "center",
                "attribs": {
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "container",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "row",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "column",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [
                              {
                                "tag": "align",
                                "attribs": {
                                  "horizontal": "flex-start",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "To Email"
                              }
                            ],
                            "text": null
                          },
                          {
                            "tag": "column",
                            "attribs": {
                              "ratio": "3",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "inline",
                                "attribs": {
                                  "class": "to-email-config.email-recipient email-settings",
                                  "name": "to-email-config.email-recipient",
                                  "object-name": "[$name]",
                                  "collection": "constants",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "To Email Address"
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "row",
                        "attribs": {
                          "child-idx": 1
                        },
                        "children": [
                          {
                            "tag": "column",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [
                              {
                                "tag": "align",
                                "attribs": {
                                  "horizontal": "flex-start",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "Email Subject"
                              }
                            ],
                            "text": null
                          },
                          {
                            "tag": "column",
                            "attribs": {
                              "ratio": "3",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "inline",
                                "attribs": {
                                  "class": "to-email-config.email-subject email-settings",
                                  "name": "to-email-config.email-subject",
                                  "object-name": "[$name]",
                                  "collection": "constants",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "Email subject"
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "textedit",
                        "attribs": {
                          "name": "to-email-config.email-text",
                          "object-name": "[$name]",
                          "collection": "constants",
                          "class": "to-email-config.email-text",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "toolbar": {
        "tag": "toolbar",
        "attribs": {},
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "system",
              "class": "system",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "SMTP Settings"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [],
                "text": "const element = event.currentTarget;const form = element.closest('.wx-xten-email-form');const keydata = {name: 'smtp-settings',scope: form.getAttribute('smtp-settings') || '_all'};var result = await wxfns.transaction(element, 'get-constant', keydata);if (result.rc != 'success') {return;}var data = result.data || {};const list = [{name: 'smtp-host',label: 'SMTP Host',tag: 'input',type: 'text',value: data['smtp-host'],required:'true'},{name: 'smtp-port',label: 'SMTP Port',tag: 'input',type: 'number',value: data['smtp-port'],required:'true'},{name: 'user-name',label: 'SMTP User Name',tag: 'input',type: 'text',value: data['user-name'],required:'true'},{name: 'password',label: 'SMTP Password',tag: 'input',type: 'password',value: data['password']},{name: 'ssl',label: 'SSL?',tag: 'input',type: 'checkbox',value: data['ssl'],},{name: 'from',label: 'From Email',tag: 'input',type: 'email',value: data['from'],}];const formData = await wxfns.getMultipleValues(list, 'SMTP Settings');if (!formData) {return;}keydata.data = formData;result = await wxfns.transaction(element, 'save-constant', keydata);if (result.rc != 'success') {return;}"
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "at",
              "class": "at",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Email Text"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [],
                "text": "const element = event.target.closest('.wx-xten-email-form');wxfns.addClass(element, 'show-email');"
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "txn": {
        "tag": "txn",
        "_text": "if (data.gotcha) {return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};}if (!data['check-human']) {return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};}const name = node.attribs.name;const smtpScope = node.attribs['smtp-settings'] || name;const smtp = await database.getConstant('smtp-settings', smtpScope, user, context);if (!smtp) {return {rc: 'smtp-configuration', output: 'SMTP must be configured for this form'};}const toconfig = await database.getConstant('to-email-config', name, user, context);delete data.gotcha;delete data['check-human'];var html = '<table>';html += '<tbody>';for (var prop in data) {html += '<tr>';html += '<td>';html += prop;html += '</td>';html += '<td>';html += data[prop];html += '</td>';html += '</tr>';}html += '</tbody>';html += '</table>';toconfig['email-text'] ='<html><body>' +common.substitute(toconfig['email-text'], {'form-data': html}) +'</body></html>';const result = await require('./mailer').sendMail(smtp, smtp.from, toconfig);if (result) {return {rc: 'sendmail-error', output: result};}return {rc: 'success'};",
        "name": "email-form",
        "class": "email-form",
        "node": {
          "tag": "txn",
          "attribs": {
            "name": "email-form",
            "class": "email-form"
          },
          "children": [],
          "text": "if (data.gotcha) {return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};}if (!data['check-human']) {return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};}const name = node.attribs.name;const smtpScope = node.attribs['smtp-settings'] || name;const smtp = await database.getConstant('smtp-settings', smtpScope, user, context);if (!smtp) {return {rc: 'smtp-configuration', output: 'SMTP must be configured for this form'};}const toconfig = await database.getConstant('to-email-config', name, user, context);delete data.gotcha;delete data['check-human'];var html = '<table>';html += '<tbody>';for (var prop in data) {html += '<tr>';html += '<td>';html += prop;html += '</td>';html += '<td>';html += data[prop];html += '</td>';html += '</tr>';}html += '</tbody>';html += '</table>';toconfig['email-text'] ='<html><body>' +common.substitute(toconfig['email-text'], {'form-data': html}) +'</body></html>';const result = await require('./mailer').sendMail(smtp, smtp.from, toconfig);if (result) {return {rc: 'sendmail-error', output: result};}return {rc: 'success'};"
        }
      },
      "_base": "_form",
      "_class": "wx-xten-_form"
    },
    "fitheight": {
      "tag": "xten",
      "name": "fitheight",
      "element": "div",
      "style": "display: block;height: 100%;width: 100%;overflow: hidden;position: relative;",
      "css": ".wx-xten-fitheight > .wx-xten-image {height: 100%;}.wx-xten-fitheight > .wx-xten-image > img {display: block;width: auto;height: 100%;}"
    },
    "fitwidth": {
      "tag": "xten",
      "name": "fitwidth",
      "element": "div",
      "style": "display: block;width: 100%;overflow: hidden;position: relative;",
      "css": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}"
    },
    "flag": {
      "tag": "xten",
      "name": "flag",
      "element": "div",
      "mandatory": "name",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "name": "flag-code",
              "class": "flag-code",
              "child-idx": 0
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;display: inline-block;",
      "nodeStyle": "width: [$width||60px];height: [$height||auto];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];",
      "css": ".wx-xten-flag > .flag-code {display: flex; width: 100%;height: 100%;}",
      "init": "var name = node.getValue('name');if (!locale.countryCodes[name]) {if (locale.countryNames[name]) {name = locale.countryNames[name].code;}else{common.nodeerror('country code not found ' + name);return;}}const ratio = node.getValue('ratio') || '4x3';const code = node.findNamedChild('div', 'flag-code');const result = files.read('public/flags/' + ratio +'/' + name + '.svg', context.siteRoot);if (result.rc != 'success') {const child = code.newChild('div');child.text = '.';}const filepath = 'public/flags/' + ratio +'/' + name + '.svg';const _lines = preprocessor(filepath, context.siteRoot);if (!_lines) {common.error('could not parse file : ' + filepath);node.attribs.error('could not parse file : ' + filepath);return;}const root = parser(_lines, filepath, context.siteRoot);const svg = root.findChildren('svg')[0];if (!svg.attribs.viewBox) {svg.attribs.viewBox = '0 0 ' + svg.attribs.width + ' ' + svg.attribs.height;}delete svg.attribs.width;delete svg.attribs.height;const defs = svg.findChild('defs');if (defs) {defs.remove();const g = svg.findChild('g');delete g.attribs['clip-path'];}code.addChild(svg);"
    },
    "flex": {
      "tag": "xten",
      "name": "flex",
      "element": "div",
      "style": "display: flex;position: relative;width: 100%;height: 100%;"
    },
    "event": {
      "tag": "xten",
      "name": "event",
      "element": "_hidden",
      "init": "(node, context, xten) => {\n    addEvent(node, node.getValue('name'), context, prop);\n}"
    },
    "font": {
      "tag": "xten",
      "name": "font",
      "element": "_hidden",
      "link": "https://fonts.googleapis.com/css2?family=[$name]:wght@[$weight]&display=swap"
    },
    "gap": {
      "tag": "xten",
      "name": "gap",
      "element": "div",
      "mandatory": "height",
      "nodeStyle": "height: [$height||15px];"
    },
    "grid": {
      "tag": "xten",
      "name": "grid",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-grid > .wx-view-datalist {flex-wrap: wrap;}",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n}",
      "allow": "owner, admin",
      "mandatory": "columns",
      "cssNode": "#[$id] > .wx-view-datalist {flex-direction: [$orientation||row];gap: [$item-gap||0];}#[$id] > .wx-view-datalist > .wx-xten-listitem {flex-grow: [$grow||0];flex-shrink: [$shrink||0];flex-basis: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );width: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );}",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "icon": {
      "tag": "xten",
      "name": "icon",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "name": "icon-code",
              "class": "icon-code",
              "child-idx": 0
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;display: inline-block;",
      "nodeStyle": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
      "css": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
      "init": "(node, context, xten) => {\n    const name = node.getValue('name');\n    const code = node.findNamedChild('div', 'icon-code'); /*if (!context.globals.icons) {context.globals.icons = {};}if (context.globals.icons[name]) {code.addChild(context.globals.icons[name].clone());return;}*/\n    const result = files.read('public/icons/' + name + '.svg', context.siteRoot);\n    if (result.rc != 'success') {\n        const child = code.newChild('div');\n        child.text = '.';\n    }\n    const filepath = 'public/icons/' + name + '.svg';\n    const _lines = preprocessor(filepath, context.siteRoot);\n    if (!_lines) {\n        common.error('could not parse file : ' + filepath);\n        node.attribs.error('could not parse file : ' + filepath);\n        return;\n    }\n    const root = parser(_lines, filepath, context.siteRoot);\n    const svg = root.findChildren('svg')[0];\n    if (!svg.attribs.viewBox) {\n        svg.attribs.viewBox = '0 0 ' + svg.attribs.width + ' ' + svg.attribs.height;\n    }\n    delete svg.attribs.width;\n    delete svg.attribs.height;\n    const defs = svg.findChild('defs');\n    if (defs) {\n        defs.remove();\n        const g = svg.findChild('g');\n        delete g.attribs['clip-path'];\n    }\n    code.addChild(svg); /* context.globals.icons[name] = svg.clone(); */\n}"
    },
    "if": {
      "tag": "xten",
      "name": "if",
      "element": "_hidden",
      "load": "const defined = node.getValue('defined');if (defined) {const vars = common.getVariables(node, context);node.attribs.element = vars.hasOwnProperty(defined) ? \"_children\" : \"_hidden\";return;}const notdefined = node.getValue('not-defined');if (notdefined) {const vars = common.getVariables(node, context);node.attribs.element = vars.hasOwnProperty(notdefined) ? \"_hidden\" : \"_children\";return;}const name = node.getValue('var-value');if (name) {const vars = common.getVariables(node, context);node.attribs.element = vars[name] ? \"_children\" : \"_hidden\";return;}const condition = node.getValue('condition');try {const result = eval(condition);node.attribs.element = result ? \"_children\" : \"_hidden\";}catch (e) {common.nodeerror('error in if condition: ' + e.message, node);}"
    },
    "image": {
      "tag": "xten",
      "name": "image",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "img",
            "attribs": {
              "src": "[$src||images/blank.jpg]",
              "alt": "[$alt||$name]",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "toolbar",
            "attribs": {
              "top": "[$toolbar-top||0]",
              "left": "[$toolbar-left||0]",
              "right": "[$toolbar-right||auto]",
              "bottom": "[$toolbar-bottom||auto]",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "save",
                  "class": "save",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "upload image"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_imageSaveImage",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "upload",
                        "attribs": {
                          "name": "save-image",
                          "file": "changed-file",
                          "file-url": "uploaded-url",
                          "class": "save-image",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "class": "src",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "uploaded-url",
                          "class": "uploaded-url",
                          "child-idx": 3
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 4
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 5
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "close",
                  "class": "close",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "cancel"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_imageCancelImageSave",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "toolbarParent.getAttribute('src')"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "upload",
                  "class": "upload",
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "select image"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_imageUploadImage",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "selectfile",
                        "attribs": {
                          "file-type": "image/*",
                          "file": "changed-file",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                      },
                      {
                        "tag": "add-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "add-link",
                  "class": "add-link",
                  "child-idx": 3
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "add hyperlink"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_imageAddHyperlink",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-image');const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {hyperlink: element.getAttribute('href')});const result = await wxfns.transaction(element, 'add-hyperlink', value);if (value) {element.setAttribute('href', value);}else{element.removeAttribute('href');}"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
      "nodeStyle": "aspect-ratio: [$aspect-ratio||auto];",
      "css": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
      "cssNode": "#[$id] > img {aspect-ratio: [$aspect-ratio||auto];}#[$id].wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
      "event": {
        "tag": "event",
        "_text": "const element = event.target.closest('.wx-xten-image');const href = element.getAttribute('href');if (href) {window.location.href = href;}",
        "name": "click",
        "class": "click",
        "node": {
          "tag": "event",
          "attribs": {
            "name": "click",
            "class": "click"
          },
          "children": [],
          "text": "const element = event.target.closest('.wx-xten-image');const href = element.getAttribute('href');if (href) {window.location.href = href;}"
        }
      },
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.attribs.src = value;\n        const img = node.findChildren('img')[0];\n        img.attribs.src = value;\n    }\n    const href = await database.hrefValue(node, context, xten);\n    if (href) {\n        node.attribs.href = href;\n    }\n}"
    },
    "inline": {
      "tag": "xten",
      "name": "inline",
      "element": "span",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: inline-block;",
      "css": ".inline._unsaved_inline {border: 1px solid yellow;}.inline._empty_inline {border: 1px solid red;width: 100%;min-width: 50px;}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.text = value;\n    }\n}",
      "initElement": "const access = checkAccess(element);if (access) {element.setAttribute('contenteditable', true);wxfns.addClass(element, 'editable');const prevText = element.innerText.trim();if (!prevText.length) {element.classList.add('_empty_inline');}else{element.classList.remove('_empty_inline');}element.__inlineValue = prevText;}else{element.removeAttribute('contenteditable');wxfns.removeClass(element, 'editable');}",
      "event": [
        {
          "tag": "event",
          "_text": "const element = event.target;const text = element.innerText.trim();const origValue = element.__inlineValue;if (!text) {element.classList.add('_empty_inline');}else {element.classList.remove('_empty_inline');}if (text != origValue) {element.classList.add('_unsaved_inline');const timout = setTimeout(((_element) => {})(event.target), 3000);}else {element.classList.remove('_unsaved_inline');}",
          "name": "keyup",
          "fname": "_inlineEventKeyUp",
          "class": "keyup",
          "node": {
            "tag": "event",
            "attribs": {
              "name": "keyup",
              "fname": "_inlineEventKeyUp",
              "class": "keyup"
            },
            "children": [],
            "text": "const element = event.target;const text = element.innerText.trim();const origValue = element.__inlineValue;if (!text) {element.classList.add('_empty_inline');}else {element.classList.remove('_empty_inline');}if (text != origValue) {element.classList.add('_unsaved_inline');const timout = setTimeout(((_element) => {})(event.target), 3000);}else {element.classList.remove('_unsaved_inline');}"
          }
        },
        {
          "tag": "event",
          "_text": "const element = event.target;const text = element.innerText.trim();const origValue = element.__inlineValue;if (text == origValue) {return;}if (!text) {element.classList.add('_empty_inline');}else {element.classList.remove('_empty_inline');}if (text) {wxfns.transaction(element, 'save-page-data', element.innerText.trim());element.classList.remove('_unsaved_inline');element.classList.remove('_empty_inline');element.__inlineValue = text;}else {element.innerText = element.__inlineValue;element.classList.remove('_unsaved_inline');element.classList.remove('_empty_inline');}",
          "name": "blur",
          "fname": "_inlineEventBlur",
          "class": "blur",
          "node": {
            "tag": "event",
            "attribs": {
              "name": "blur",
              "fname": "_inlineEventBlur",
              "class": "blur"
            },
            "children": [],
            "text": "const element = event.target;const text = element.innerText.trim();const origValue = element.__inlineValue;if (text == origValue) {return;}if (!text) {element.classList.add('_empty_inline');}else {element.classList.remove('_empty_inline');}if (text) {wxfns.transaction(element, 'save-page-data', element.innerText.trim());element.classList.remove('_unsaved_inline');element.classList.remove('_empty_inline');element.__inlineValue = text;}else {element.innerText = element.__inlineValue;element.classList.remove('_unsaved_inline');element.classList.remove('_empty_inline');}"
          }
        }
      ]
    },
    "layers": {
      "tag": "xten",
      "name": "layers",
      "element": "div",
      "style": "position:relative;display: block;height: 100%;"
    },
    "layer": {
      "tag": "xten",
      "name": "layer",
      "element": "div",
      "style": "position:absolute;",
      "nodeStyle": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: [$index||0];"
    },
    "line": {
      "tag": "xten",
      "name": "line",
      "element": "div",
      "style": "position: relative;",
      "nodeStyle": "border-top: [$line-style||1px solid #000000];",
      "cssNode": "#[$id]:before {content: \"\";width: 100%;border-top: [$before-style||none];position: absolute;top: -5px;}#[$id]:after {content: \"\";width: 100%;border-top: [$after-style||none];position: absolute;top: 5px;}"
    },
    "list": {
      "tag": "xten",
      "name": "list",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n}",
      "allow": "owner, admin",
      "cssNode": "#[$id] > .wx-view-datalist {display: flex;flex-direction: [$orientation||column];gap: [$item-gap||0];width: 100%;}#[$id] > .wx-view-datalist > .wx-xten-listitem {flex: 1 1 0;}",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "navbar": {
      "tag": "xten",
      "name": "navbar",
      "element": "div",
      "_class": "navclass-[$orientation||row]",
      "style": "display:flex;text-transform: [$transform||none];position: relative;",
      "nodeStyle": "flex-direction: [$orientation||row];gap: [$item-gap||0];",
      "css": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
      "cssNode": "#[$id] > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#[$id] > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#[$id] > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#[$id] > .wx-xten-navitem:hover { [$navitem-hover-style|| ] }#[$id] > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#[$id] > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#[$id] > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#[$id] > .wx-xten-navgroup:hover > .wx-xten-navitem { [$navitem-hover-style|| ] }"
    },
    "navitem": {
      "tag": "xten",
      "name": "navitem",
      "element": "span",
      "style": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
      "css": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
      "event": {
        "tag": "event",
        "name": "click",
        "class": "click",
        "code": "event.preventDefault();element = event.target;const href = element.getAttribute('href');if (href && href != '#') {window.location.href = href;}",
        "node": {
          "tag": "event",
          "attribs": {
            "name": "click",
            "class": "click"
          },
          "children": [
            {
              "tag": "code",
              "attribs": {
                "_text": "event.preventDefault();element = event.target;const href = element.getAttribute('href');if (href && href != '#') {window.location.href = href;}",
                "_fargs": "{}",
                "child-idx": 0
              },
              "children": [],
              "text": "event.preventDefault();element = event.target;const href = element.getAttribute('href');if (href && href != '#') {window.location.href = href;}"
            }
          ],
          "text": null
        }
      }
    },
    "navgroup": {
      "tag": "xten",
      "name": "navgroup",
      "style": "display: inline-block;position: relative;",
      "element": "div"
    },
    "pos-bottom-left": {
      "tag": "xten",
      "name": "pos-bottom-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: [$left||0];bottom: [$bottom||0];"
    },
    "pos-bottom-right": {
      "tag": "xten",
      "name": "pos-bottom-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];bottom: [$bottom||0];"
    },
    "pos-bottom": {
      "tag": "xten",
      "name": "pos-bottom",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;bottom: [$bottom||0];transform: translate(-50%, -100%);"
    },
    "pos-left": {
      "tag": "xten",
      "name": "pos-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;",
      "nodeStyle": "left: [$left||0];top: 50%;transform: translateY(-50%);"
    },
    "pos-middle": {
      "tag": "xten",
      "name": "pos-middle",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;top: 50%;transform: translate(-50%, -50%);"
    },
    "pos-right": {
      "tag": "xten",
      "name": "pos-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];top: 50%;transform: translateY(-50%);"
    },
    "pos-top-left": {
      "tag": "xten",
      "name": "pos-top-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: [$left||0];top: [$top||0];"
    },
    "pos-top-right": {
      "tag": "xten",
      "name": "pos-top-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];top: [$top||0];"
    },
    "pos-top": {
      "tag": "xten",
      "name": "pos-top",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;top: [$top||0];transform: translateX(-50%);"
    },
    "quickplay": {
      "tag": "xten",
      "name": "quickplay",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: inline-block;position: relative;",
      "nodeStyle": "aspect-ratio: [$aspect-ratio||auto];",
      "css": ".wx-xten-quickplay .wx-xten-toolbar {display: none;}.wx-xten-quickplay.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-quickplay.quickplay-changed {border: 5px solid red;}.wx-xten-quickplay img {width: 100%; height: 100%; object-fit: cover; object-position: center; }.wx-xten-quickplay .wx-xten-toolbar > .close {display: none;}.wx-xten-quickplay .wx-xten-toolbar > .save {display: none;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar > .save {display: inline-block;}",
      "load": "const value = await database.inlineValue(node, context, xten);if (value) {node.src = value;const video = node.findChildren('video')[0];video.attribs.src = 'stream/' + value;}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "video",
            "attribs": {
              "src": "stream/[$src||videos/blank.mp4]",
              "width": "100%",
              "height": "100%",
              "autoplay": "true",
              "muted": "true",
              "loop": "true",
              "aspect-ratio": "[$aspect-ratio]",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "toolbar",
            "attribs": {
              "top": "[$toolbar-top||0]",
              "left": "[$toolbar-left||0]",
              "right": "[$toolbar-right||auto]",
              "bottom": "[$toolbar-bottom||auto]",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "save",
                  "class": "save",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "upload short video"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvSaveShortVideo",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "upload",
                        "attribs": {
                          "name": "save-video",
                          "file": "changed-file",
                          "file-url": "uploaded-url",
                          "class": "save-video",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "class": "src",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "uploaded-url",
                          "class": "uploaded-url",
                          "child-idx": 3
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 4
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 5
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "close",
                  "class": "close",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "cancel"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvCancelShortVideoSave",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "toolbarParent.getAttribute('src')"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "upload",
                  "class": "upload",
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "select video"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_qvUploadVideo",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "selectfile",
                        "attribs": {
                          "file-type": "video/*",
                          "file": "changed-file",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                      },
                      {
                        "tag": "add-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "element.setAttribute('src', element.querySelector('video').getAttribute('src'));"
    },
    "repeat": {
      "tag": "xten",
      "name": "repeat",
      "element": "div",
      "load": "const output = new DomNode('div');const children = node.children;if (!(children && children.length) && !text) {node.attribs.error = 'nothing to repeat';common.nodeerror('nothing to repeat', node);return;}const n = parseInt(node.getValue('n') || '0');const wrapper = new DomNode('div');for (var i = 0; i < n; i++) {const _clone = node.clone();_clone.children.forEach(child => {child.attribs['repeat-idx'] = i.toString();});wrapper.insertChildren('last', _clone.children);}node.empty();node.insertChildren(0, wrapper.children);"
    },
    "row": {
      "tag": "xten",
      "name": "row",
      "element": "div",
      "style": "display: flex;position: relative;",
      "nodeStyle": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
      "tablet": "flex-direction:[$tablet-direction||row];",
      "phone": "flex-direction:[$phone-direction||column];"
    },
    "screencover": {
      "tag": "xten",
      "name": "screencover",
      "element": "div",
      "style": "position: fixed;top: 0;left: 0;width: 100vw;height: 100vh;"
    },
    "search-results": {
      "tag": "xten",
      "name": "search-results",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "name": "search-results",
              "class": "search-results",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "css",
            "attribs": {
              "name": "search-results-css",
              "class": "search-results-css",
              "child-idx": 1
            },
            "children": [],
            "text": ".search-item-view {border: 1px solid lightgrey;padding: 10px;}"
          },
          {
            "tag": "div",
            "attribs": {
              "name": "search-item-view",
              "class": "search-item-view",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "row",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "column",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "Object: [@object-name]"
                  },
                  {
                    "tag": "column",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "Type: [@object-type]"
                  },
                  {
                    "tag": "column",
                    "attribs": {
                      "ratio": "2",
                      "child-idx": 2
                    },
                    "children": [
                      {
                        "tag": "div",
                        "attribs": {
                          "name": "urls",
                          "class": "urls",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "[@urls]"
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "gap",
                "attribs": {
                  "height": "10px",
                  "child-idx": 1
                },
                "children": [],
                "text": null
              },
              {
                "tag": "div",
                "attribs": {
                  "name": "text",
                  "class": "text",
                  "child-idx": 2
                },
                "children": [],
                "text": "[@snippet]"
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "load": "const type = node.getValue('type') || context.vars['search-type'];if (!type) {node.attribs.error = 'search type missing from search';return;}const container = node.findNamedChild('div', 'search-results');container.empty();const itemView = node.findNamedChild('div', 'search-item-view');itemView.attribs.element = '_hidden';if (type == 'pages') {node.removeClass('search-object');node.addClass('search-pages');const result = await database.search(node, context);if (result.rc != 'success') {node.attribs.error = result.rc;return;}const docs = result.docs;if (!docs.length) {const output = new DomNode('div');output.addClass('empty-search-results');output.text = 'no search results';return;}docs.forEach(doc => {const item = itemView.clone();const vars = doc;const urlsNode = new DomNode('div');urlsNode.addClass('url-list');doc.urls.forEach(_url => {const _urlNode = new DomNode('a');_urlNode.attribs.href = _url;_urlNode.text = _url;_urlNode.addClass('url-link');urlsNode.addChild(_urlNode);});vars.urls = urlsNode.stringify();common.substituteVars(item, vars, true, common.recordPattern);delete item.attribs.element;container.addChild(item);});return;}node.removeClass('search-pages');node.addClass('search-object');const viewName = node.getValue('search-view') || context.vars['search-view'];if (!viewName) {node.attribs.error = 'search-view is mandatory for object search. type ' + type;return;}const configNode = common.findNamed(node, 'object-config', type);if (!configNode) {node.attribs.error = 'could not find object-config for object-type ' + type;common.error(node.attribs.error);return;}searchView = configNode.findNamedChild('search-view', viewName);if (!searchView) {node.attribs.error = 'search-view ' + viewName + ' not found in object-type ' + type;common.error(node.attribs.error);return;}const text = node.getValue('search-text') || context.vars['search-text'];if (!text) {node.attribs.error = 'search text missing from search';return;}const vars = {'search-text': text};const view = searchView.clone();common.substituteVars(view, vars);container.insertChildren(0, view.children);return;"
    },
    "search": {
      "tag": "xten",
      "name": "search",
      "element": "div",
      "mandatory": "pagesize, type",
      "css": ".wx-xten-search {display: inline-block;}.wx-xten-search > .search-wrapper {position: relative; display: inline-block;}.wx-xten-search > .search-wrapper input.search {padding: 5px;}.wx-xten-search > .search-wrapper .wx-xten-icon.search {text-align: left;}",
      "cssNode": ".wx-xten-search > .search-wrapper input.search {border: [$border||1px solid lightgrey;]}.wx-xten-search > .search-wrapper .wx-xten-icon.search {border: [$border||1px solid lightgrey;];}.wx-xten-search > .search-wrapper .wx-xten-icon.search .icon-code {background-color: [$icon-background||#efefef];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "container",
            "attribs": {
              "name": "search-wrapper",
              "class": "search-wrapper",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "flex",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "input",
                    "attribs": {
                      "name": "search",
                      "type": "text",
                      "required": "true",
                      "class": "search",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "event",
                        "attribs": {
                          "name": "keyup",
                          "fname": "_searchInputEnter",
                          "class": "keyup",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "if (event.key === 'Enter' || event.keyCode === 13) {event.target.closest('.search-wrapper').querySelector('.wx-xten-icon.search').click();}"
                      }
                    ],
                    "text": null
                  },
                  {
                    "tag": "icon",
                    "attribs": {
                      "name": "search",
                      "class": "search",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "tooltip",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "Search"
                      },
                      {
                        "tag": "click",
                        "attribs": {
                          "name": "_searchClick",
                          "class": "_searchClick",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "const element = event.target;const value = element.closest('.search-wrapper').querySelector('input.search').value;if (!value) {wxfns.error('[$error-heading||cannot search]', '[$error-message||please type some text to search]');return;}window.location.href = element.closest('.wx-xten-search').getAttribute('url') + value;"
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "init": "const type = node.getValue('type');const pagesize = node.getValue('pagesize');node.attribs.url = 'search-results?search-type=' + type + '&search-pagesize=' + pagesize;if (type != 'pages') {const listView = node.getValue('search-view') || 'default';node.attribs.url += '&search-view=' + listView;}node.attribs.url += '&search-text=';"
    },
    "show": {
      "tag": "xten",
      "name": "show",
      "element": "div",
      "mandatory": "role",
      "style": "display: none;",
      "initElement": "const user = getUser();const role = user ? user.role.trim() : 'public';var allow = element.getAttribute('role');if (allow == 'logged_in') {if (role != 'public') {element.style.display = 'initial';}return;}allow = allow ? allow.split(/\\s*\\,\\s*/) : [];if (allow.includes(role)) {element.style.display = 'initial';}"
    },
    "space": {
      "tag": "xten",
      "name": "space",
      "element": "span",
      "init": "const n = parseInt(node.getValue(node.attribs.n) || 1);node.text = '';for (var i = 0; i < n; i++) {node.text += '&nbsp;';}"
    },
    "sudo": {
      "tag": "xten",
      "name": "sudo",
      "element": "_hidden",
      "init": "const sudo = node.attribs.sudo || node.attribs.name;if (!sudo) {common.nodeerror('sudo name is mandatory ' + node.attribs.id, node);return true;}var selector = node.getValue('selector');if (selector) {context.style[selector + ':' + sudo] = node.text;return;}if (!node.parent.attribs.id) {node.parent.attribs.id = 'x-' + common.uuid();}selector = node.parent.attribs.id;context.style['#' + selector + ':' + sudo] = node.text;"
    },
    "case": {
      "tag": "xten",
      "name": "case",
      "element": "_hidden"
    },
    "default": {
      "tag": "xten",
      "name": "default",
      "element": "_hidden"
    },
    "switch": {
      "tag": "xten",
      "name": "switch",
      "element": "_children",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "name": "switch-output",
              "class": "switch-output",
              "child-idx": 0
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      },
      "init": "const container = node.findNamedChild('div', 'switch-output');container.empty();const value = node.getValue('value');var _default = null;try {const result = eval(value);for (var i = 0; i < node.children.length; i++) {const child = node.children[i];if (child.tag == 'default') {_default = child;continue;}if (child.tag != 'case') {continue;}const match = child.getValue('match');if (match == result) {const _case = child.clone();container.insertChildren(0, _case.children);return;}}if (!_default) {return;}const _case = _default.clone();container.insertChildren(0, _case.children);}catch (e) {common.nodeerror('error in switch value: ' + e.message, node);}"
    },
    "textalign": {
      "tag": "xten",
      "name": "textalign",
      "element": "div",
      "nodeStyle": "text-align: [$align||center];"
    },
    "textedit": {
      "tag": "xten",
      "name": "textedit",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: block; width: 100%",
      "nodeStyle": "column-count:[$cols||1]",
      "nodeTablet": "column-count:[$cols-tablet||1]",
      "nodePhone": "column-count:[$cols-phone||1]",
      "libs": [
        "libs/quill.min.js",
        " libs/quill.snow.css"
      ],
      "css": ".wx-xten-textedit { position: relative; }.wx-xten-textedit > .ql-toolbar {position: absolute;top: -67px;background-color: white;}.wx-xten-textedit > .ql-toolbar.hidden {display: none;}.wx-xten-textedit > .ql-toolbar.visible {display: block;}.wx-xten-textedit > .ql-container {border: none !important;font-family: inherit;font-size: inherit;}.wx-xten-textedit .ql-editor {padding: 0;line-height: inherit;}",
      "initElement": "const access = checkAccess(element);if (access) {var toolbarOptions = [['bold', 'italic', 'underline', 'strike'],['blockquote', 'code-block'],[{ 'list': 'ordered' }, { 'list': 'bullet' }],[{ 'script': 'sub' }, { 'script': 'super' }],[{ 'indent': '-1' }, { 'indent': '+1' }],[{ 'direction': 'rtl' }],[{ 'size': ['small', false, 'large', 'huge'] }],[{ 'header': [1, 2, 3, 4, 5, 6, false] }],[{ 'color': [] }, { 'background': [] }],[{ 'font': [] }],[{ 'align': [] }],['image', 'video'],['clean']];var editor = document.createElement('div');editor.className = 'editor';editor.innerHTML = element.innerHTML;element.innerHTML = '';element.appendChild(editor);editor = element.querySelector('.editor');var dirty = false;if (!xdata.quill) {xdata.quill = {};}const quill = new Quill(editor, {modules: {toolbar: toolbarOptions},theme: 'snow'});const toolbar = element.querySelector('.ql-toolbar');wxfns.addClass(toolbar, 'hidden');quill.getModule(\"toolbar\").addHandler(\"image\", (value) => {const upload = async () => {const file = await wxfns.selectFile('image/*');/*const result = await wxfns.upload(element, 'save_image', null, file);*/const result = await wxfns.upload(element, 'save-image', null, file);const range = quill.getSelection();quill.insertEmbed(range.index, 'image', result.output);quill.setSelection(range.index + 1);};upload();});quill.on('text-change', function (delta, oldDelta, source) {dirty = true;});setInterval(function () {if (dirty) {dirty = false;const text = quill.root.innerHTML;/*wxfns.transaction(element, 'save_page_data', text.trim());*/wxfns.transaction(element, 'save-page-data', text.trim());}}, 2000);const ImageBlot = Quill.import('formats/image');const Parchment = Quill.import('parchment');element.addEventListener('click', (e) => {e.stopPropagation();const toolbar = element.querySelector('.ql-toolbar');wxfns.addClass(toolbar, 'visible');wxfns.removeClass(toolbar, 'hidden');const img = Parchment.find(e.target);if (img instanceof ImageBlot) {quill.setSelection(img.offset(quill.scroll) - 1, 1, 'user');}});document.addEventListener('click', () => {const toolbar = element.querySelector('.ql-toolbar');wxfns.removeClass(toolbar, 'visible');wxfns.addClass(toolbar, 'hidden');});}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.text = value;\n    }\n}"
    },
    "toolbar": {
      "tag": "xten",
      "name": "toolbar",
      "element": "div",
      "style": "display: flex;gap: 1px;",
      "nodeStyle": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];"
    },
    "tooltip": {
      "tag": "xten",
      "name": "tooltip",
      "element": "div",
      "parentclass": "tooltip-parent",
      "style": "position: absolute;display: none;width: max-content;",
      "nodeStyle": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
      "initElement": "const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;const parentElement = element.parentElement;parentElement.addEventListener('mouseenter', () => {element.style.display = 'block';const tooltipRect = element.getBoundingClientRect();if ((tooltipRect.left + tooltipRect.width) > screenWidth) {element.style.right = 0;element.style.left = 'auto';}if ((tooltipRect.top + tooltipRect.height) > screenHeight) {element.style.top = '-' + tooltipRect.height + 'px';}});parentElement.addEventListener('mouseleave', () => {element.style.display = 'none';});"
    },
    "value": {
      "tag": "xten",
      "name": "value",
      "mandatory": "name",
      "load": "const value = await database.inlineValue(node, context, xten);var _value = value;if (value) {if (node.attribs.summary) {const chars = parseInt(node.attribs.summary);_value = _value.replace(/<[^>]+>/g, '').substring(0, chars);}node.text = _value;}"
    },
    "video-player": {
      "tag": "xten",
      "name": "video-player",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: inline-block;position: relative;",
      "nodeStyle": "aspect-ratio: [$aspect-ratio||auto];",
      "css": ".wx-xten-video-player .wx-xten-toolbar {display: none;}.wx-xten-video-player.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-video-player.quickplay-changed {border: 5px solid red;}.wx-xten-video-player img {width: 100%; height: 100%; object-fit: cover; object-position: center; }.wx-xten-video-player .wx-xten-toolbar > .close {display: none;}.wx-xten-video-player .wx-xten-toolbar > .save {display: none;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar > .save {display: inline-block;}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.src = value;\n        const video = node.findChildren('video')[0];\n        video.attribs.src = 'stream/' + value;\n    }\n}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "video",
            "attribs": {
              "src": "stream/[$src||videos/blank.mp4]",
              "width": "100%",
              "height": "100%",
              "controls": "true",
              "controlsList": "nodownload",
              "aspect-ratio": "[$aspect-ratio]",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "toolbar",
            "attribs": {
              "top": "[$toolbar-top||0]",
              "left": "[$toolbar-left||0]",
              "right": "[$toolbar-right||auto]",
              "bottom": "[$toolbar-bottom||auto]",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "save",
                  "class": "save",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "upload video"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvSaveShortVideo",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "upload",
                        "attribs": {
                          "name": "save-video",
                          "file": "changed-file",
                          "file-url": "uploaded-url",
                          "class": "save-video",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "class": "src",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "uploaded-url",
                          "class": "uploaded-url",
                          "child-idx": 3
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 4
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 5
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "close",
                  "class": "close",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "cancel"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvCancelShortVideoSave",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "toolbarParent.getAttribute('src')"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "upload",
                  "class": "upload",
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "select video"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_qvUploadVideo",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "selectfile",
                        "attribs": {
                          "file-type": "video/*",
                          "file": "changed-file",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                      },
                      {
                        "tag": "add-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "element.setAttribute('src', element.querySelector('video').getAttribute('src'));"
    },
    "xbutton": {
      "tag": "xten",
      "name": "xbutton",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "button",
            "attribs": {
              "type": "[$type]",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "align",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "if",
                    "attribs": {
                      "defined": "icon",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "[$icon]",
                          "class": "[$icon]",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  },
                  {
                    "tag": "span",
                    "attribs": {
                      "class": "button-label",
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "[$label]"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;display: inline-block;",
      "css": ".wx-xten-xbutton button {display: flex;}",
      "cssNode": "#[$id] > button {padding: [$padding||5px];}#[$id] .wx-xten-icon {margin-right: [$item-gap||10px];}",
      "initElement": "const overlay = document.createElement('div');overlay.style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0;';overlay.addEventListener('click', (event) => {event.preventDefault();event.stopPropagation();const submit = new CustomEvent('form-submit-clicked', {bubbles: false});const form = element.closest('form');form.dispatchEvent(submit);});element.appendChild(overlay);",
      "event": {
        "tag": "event",
        "_text": "event.preventDefault();event.stopPropagation();element = event.currentTarget;const type = element.getAttribute('type');switch(type) {case 'link':const href = element.getAttribute('href');if (href && href != '#') {window.location.href = href;}break;case 'submit':event.preventDefault();wxfns.error('No entry', 'Bots are not allowed to click buttons in Wohola X');return;break;}",
        "name": "click",
        "class": "click",
        "node": {
          "tag": "event",
          "attribs": {
            "name": "click",
            "class": "click"
          },
          "children": [],
          "text": "event.preventDefault();event.stopPropagation();element = event.currentTarget;const type = element.getAttribute('type');switch(type) {case 'link':const href = element.getAttribute('href');if (href && href != '#') {window.location.href = href;}break;case 'submit':event.preventDefault();wxfns.error('No entry', 'Bots are not allowed to click buttons in Wohola X');return;break;}"
        }
      }
    },
    "xinput": {
      "tag": "xten",
      "name": "xinput",
      "element": "div",
      "mandatory": "name, type",
      "css": ".wx-xten-xinput[type=\"textarea\"] label {display: inline-block;}.wx-xten-xinput textarea {width: 100%;min-height: 100px;}.wx-xten-xinput input {width: 100%;}.wx-xten-xinput input {width: 100%;}.wx-xten-xinput .xinput-error {color: red; padding: 3px; font-size: 0.8em;}",
      "cssNode": "#[$id] input {padding: [$padding||5px];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "row",
            "attribs": {
              "item-gap": "15px",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "align",
                    "attribs": {
                      "horizontal": "flex-end",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "container",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "label",
                            "attribs": {
                              "xten": "inline",
                              "name": "input-label-[$name]",
                              "class": "input-label-[$name]",
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "[$label||editable label]"
                          },
                          {
                            "tag": "if",
                            "attribs": {
                              "var-value": "required",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "span",
                                "attribs": {
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "*"
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "ratio": "3",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "switch",
                    "attribs": {
                      "value": "node.closest('.wx-xten-xinput').attribs.type",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "case",
                        "attribs": {
                          "match": "textarea",
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "textarea",
                            "attribs": {
                              "name": "[$name]",
                              "required": "[$required||false]",
                              "class": "[$name] xinput-control",
                              "child-idx": 0
                            },
                            "children": [],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "case",
                        "attribs": {
                          "match": "check-human",
                          "child-idx": 1
                        },
                        "children": [
                          {
                            "tag": "check-human",
                            "attribs": {
                              "class": "xinput-control",
                              "child-idx": 0
                            },
                            "children": [],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "default",
                        "attribs": {
                          "child-idx": 2
                        },
                        "children": [
                          {
                            "tag": "input",
                            "attribs": {
                              "name": "[$name]",
                              "type": "[$type]",
                              "required": "[$required||false]",
                              "class": "[$name] xinput-control",
                              "child-idx": 0
                            },
                            "children": [],
                            "text": null
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  },
                  {
                    "tag": "div",
                    "attribs": {
                      "class": "xinput-error",
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "gap",
            "attribs": {
              "height": "5px",
              "child-idx": 1
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      },
      "function": [
        {
          "tag": "function",
          "_text": "const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');switch (type) {case 'checkbox':_input.checked = false;break;case 'check-human':_input._value = false;break;default:_input.value = '';}",
          "name": "clear",
          "class": "clear",
          "node": {
            "tag": "function",
            "attribs": {
              "name": "clear",
              "class": "clear"
            },
            "children": [],
            "text": "const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');switch (type) {case 'checkbox':_input.checked = false;break;case 'check-human':_input._value = false;break;default:_input.value = '';}"
          }
        },
        {
          "tag": "function",
          "_text": "const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');var value = null;switch (type) {case 'checkbox':value = _input.checked;break;case 'check-human':return _input._value;break;default:value = _input.value;}return value;",
          "name": "get-value",
          "class": "get-value",
          "node": {
            "tag": "function",
            "attribs": {
              "name": "get-value",
              "class": "get-value"
            },
            "children": [],
            "text": "const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');var value = null;switch (type) {case 'checkbox':value = _input.checked;break;case 'check-human':return _input._value;break;default:value = _input.value;}return value;"
          }
        },
        {
          "tag": "function",
          "_text": "const name = element.getAttribute('name');const label = element.getAttribute('label');const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');const validate = element.getAttribute('validate');const required = element.getAttribute('required') == 'true';const errorElement = element.querySelector('.xinput-error');errorElement.innerText = '';if (!validate) {return true;}var value = null;switch (type) {case 'checkbox':value = _input.checked;break;case 'check-human':value = _input._value;break;default:value = _input.value;}if (!value) {if (required) {errorElement.innerText = label + ' is required';return false;}return true;}var valid = true;const checks = validate.split(/\\s*\\,\\s*/);for (var i = 0; i < checks.length; i++) {const _check = checks[i].trim();const matches = _check.match(/^\\s*([a-z]+)\\s*(\\(\\s*(.*)\\s*\\))?\\s*$/);const _fname = matches[1];if (!_fname || !validations[_fname]) {errorElement.innerText = 'validation ' + _fname + ' not defined';return false;}const _args = matches[3];const error = validations[_fname](value, _args);if (error) {valid = false;errorElement.innerText = label + ' is ' + error;break;}}return valid;",
          "name": "validate",
          "class": "validate",
          "node": {
            "tag": "function",
            "attribs": {
              "name": "validate",
              "class": "validate"
            },
            "children": [],
            "text": "const name = element.getAttribute('name');const label = element.getAttribute('label');const type = element.getAttribute('type');const _input = element.querySelector('.xinput-control');const validate = element.getAttribute('validate');const required = element.getAttribute('required') == 'true';const errorElement = element.querySelector('.xinput-error');errorElement.innerText = '';if (!validate) {return true;}var value = null;switch (type) {case 'checkbox':value = _input.checked;break;case 'check-human':value = _input._value;break;default:value = _input.value;}if (!value) {if (required) {errorElement.innerText = label + ' is required';return false;}return true;}var valid = true;const checks = validate.split(/\\s*\\,\\s*/);for (var i = 0; i < checks.length; i++) {const _check = checks[i].trim();const matches = _check.match(/^\\s*([a-z]+)\\s*(\\(\\s*(.*)\\s*\\))?\\s*$/);const _fname = matches[1];if (!_fname || !validations[_fname]) {errorElement.innerText = 'validation ' + _fname + ' not defined';return false;}const _args = matches[3];const error = validations[_fname](value, _args);if (error) {valid = false;errorElement.innerText = label + ' is ' + error;break;}}return valid;"
          }
        }
      ]
    },
    "xstyle": {
      "tag": "xten",
      "name": "xstyle",
      "element": "_hidden",
      "init": "const selector = node.getValue('selector') || '#' + node.attribs.id;if (!selector) {common.nodeerror('selector or element id is mandatory', node);return false;}context.style[selector] = node.text;"
    }
  },
  "pages": [
    "_home",
    "blog",
    "contact",
    "login",
    "layout-example",
    "blog-post-default",
    "blog-post-summary-page"
  ],
  "contexts": {
    "_home": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-a4766243-6631-4fa5-9f26-b0893a5989be-3449": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-30d47154-d6cd-4267-8d24-11e4e53be61c-8919": "#x-30d47154-d6cd-4267-8d24-11e4e53be61c-8919 > img {aspect-ratio: [$aspect-ratio||auto];}#x-30d47154-d6cd-4267-8d24-11e4e53be61c-8919.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-e1324177-a910-4e15-8739-8ca178e90c36-1659": "#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navitem:hover { color: blue }#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-e1324177-a910-4e15-8739-8ca178e90c36-1659 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "video-player": ".wx-xten-video-player .wx-xten-toolbar {display: none;}.wx-xten-video-player.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-video-player.quickplay-changed {border: 5px solid red;}.wx-xten-video-player img {width: 100%; height: 100%; object-fit: cover; object-position: center; }.wx-xten-video-player .wx-xten-toolbar > .close {display: none;}.wx-xten-video-player .wx-xten-toolbar > .save {display: none;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-video-player.quickplay-changed .wx-xten-toolbar > .save {display: inline-block;}",
        "banner": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-banner > .wx-view-datalist {display: flex;position: relative;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem {display: none;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem.active {display: block;}.wx-xten-banner .banner-controls {display: display-block;}.wx-xten-banner[item-count=\"0\"] .banner-controls {display: none;}.wx-xten-banner[item-count=\"1\"] .banner-controls {display: none;}",
        "x-1900aec2-103a-4861-836e-f8e2b97ae2f8-7984": "#x-1900aec2-103a-4861-836e-f8e2b97ae2f8-7984 > .wx-view-datalist > .wx-xten-listitem {aspect-ratio: 2.5;}",
        "x-9fffa4eb-64ff-4bc8-84e4-30197e2d0af3-865": "#x-9fffa4eb-64ff-4bc8-84e4-30197e2d0af3-865 > img {aspect-ratio: [$aspect-ratio||auto];}#x-9fffa4eb-64ff-4bc8-84e4-30197e2d0af3-865.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "inline": ".inline._unsaved_inline {border: 1px solid yellow;}.inline._empty_inline {border: 1px solid red;width: 100%;min-width: 50px;}",
        "textedit": ".wx-xten-textedit { position: relative; }.wx-xten-textedit > .ql-toolbar {position: absolute;top: -67px;background-color: white;}.wx-xten-textedit > .ql-toolbar.hidden {display: none;}.wx-xten-textedit > .ql-toolbar.visible {display: block;}.wx-xten-textedit > .ql-container {border: none !important;font-family: inherit;font-size: inherit;}.wx-xten-textedit .ql-editor {padding: 0;line-height: inherit;}",
        "grid": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-grid > .wx-view-datalist {flex-wrap: wrap;}",
        "x-0ee5efde-213d-4829-b748-5dd0aab22fb2-5112": "#x-0ee5efde-213d-4829-b748-5dd0aab22fb2-5112 > .wx-view-datalist {flex-direction: [$orientation||row];gap: 15px;}#x-0ee5efde-213d-4829-b748-5dd0aab22fb2-5112 > .wx-view-datalist > .wx-xten-listitem {flex-grow: [$grow||0];flex-shrink: [$shrink||0];flex-basis: calc((100% / 2) - 15px * (2 - 1) / 2 );width: calc((100% / 2) - 15px * (2 - 1) / 2 );}",
        "x-14c4f639-90af-477f-ac49-422ebcbda67c-5826": "#x-14c4f639-90af-477f-ac49-422ebcbda67c-5826 > img {aspect-ratio: 1.5;}#x-14c4f639-90af-477f-ac49-422ebcbda67c-5826.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "list": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
        "x-cd084eb7-528b-4d9f-b398-c7a9aa133110-4668": "#x-cd084eb7-528b-4d9f-b398-c7a9aa133110-4668 > .wx-view-datalist {display: flex;flex-direction: row;gap: 32px;width: 100%;}#x-cd084eb7-528b-4d9f-b398-c7a9aa133110-4668 > .wx-view-datalist > .wx-xten-listitem {flex: 1 1 0;}",
        "x-3cd6eec3-8ee1-44b7-8ee3-e44d0b1e7792-8680": "#x-3cd6eec3-8ee1-44b7-8ee3-e44d0b1e7792-8680 > img {aspect-ratio: 1;}#x-3cd6eec3-8ee1-44b7-8ee3-e44d0b1e7792-8680.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: calc(50% - 15px);left: calc(50% - 15px);right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "x-d415ab6a-62e7-42aa-bd30-a42363cf6972-7703": "#x-d415ab6a-62e7-42aa-bd30-a42363cf6972-7703 > img {aspect-ratio: 1.5;}#x-d415ab6a-62e7-42aa-bd30-a42363cf6972-7703.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "x-9894fddd-9935-4b65-89f9-15e8b13a2bec-7273": "#x-9894fddd-9935-4b65-89f9-15e8b13a2bec-7273 > img {aspect-ratio: 1.5;}#x-9894fddd-9935-4b65-89f9-15e8b13a2bec-7273.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-7f177748-1fd6-4a6c-a979-deceb13fff55-7426": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-b8cef595-80dc-48b1-a9f0-42723a188474-6466": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-e130c1c0-77d0-4053-94fc-435ee543f3e6-7632": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-c7e89d50-d544-46cf-ad72-a2fac5f3784c-2352": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-9191e1cb-7788-42f4-bec0-b90f3e4fe496-7703": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-debb518e-3fdb-4f7d-9d7e-b8a02b9cb057-1467": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-7dc5862f-d674-4784-849c-5b3636fb7240-9778": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a9d8f791-dc66-47dd-a946-a152f6c0d305-6826": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-61b768ef-0e2c-4c46-8ae0-03eddeae32ab-5538": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0e4c068a-c8c3-417c-824f-8ff78afef0ba-6664": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-4b6434d5-43a1-4529-a683-7e38c7623b53-3765": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d687c487-499c-4b6e-a5ba-102b7b3fc6a6-725": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-04c7c9c9-1984-41b2-987e-9c6b3198267f-1963": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-35e3cba9-9de9-476a-8060-a16f582f7710-9493": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-a7dc1936-1d33-4380-9d5b-5946284f26ae-276": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-62631f7e-f698-40cb-8df2-59e7865e39d4-6584": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-90c52535-c904-417c-a21e-8bba902c878b-8778": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f125aba8-e719-45ef-bee6-47c46c1a8041-6142": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b12814f5-2955-4238-97a7-f5508c9b377d-6430": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d5aa4380-38d1-47d8-ac40-f00323032d49-490": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-fe0895db-6290-4f97-9727-3304cbabe0ba-8486": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1f1f70a7-94f1-437b-ac3e-bcf9946a5e2a-6848": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-5fc6b279-e694-414b-a34e-a478b7f1ba90-5970": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-970f52ca-a374-4dd8-8012-9a295a9bdc65-1455": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a6d42599-2385-4b95-903c-4fec959a08ee-8506": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-9f76fcb0-c4de-47c3-b3c8-dbcfe9afcb0b-8739": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-7c862542-27f4-4712-b05f-3fd9b1921f4c-7885": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-075ce9bd-2842-463c-a01a-3510c8ed5602-1534": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-755a69fb-e3c3-4f7f-a273-404a43f537a0-7757": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-30d47154-d6cd-4267-8d24-11e4e53be61c-8919": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-d8ce1bcd-596b-4712-b2a5-d366402e4655-1004": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-0ad8387e-7423-4430-8724-b3abbbd64113-8553": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-bb87a148-fc1e-427a-959a-b0edb9e59b13-708": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3cde6759-3f7c-43c8-807d-232b48f66efb-9401": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-9fadfefb-8172-404b-8344-558810c0edb4-4504": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3284ad96-9a3a-4af8-b0ad-f92d7622e65c-4364": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-e35e7ba9-c43a-45ea-9322-a74b6b237f6c-5382": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-dc9d7dab-ff04-4918-a86e-bf5a051fa75a-4181": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-cd894dc4-7e99-445b-8732-1d0253da01f5-3327": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-654e0bb3-2f20-49a3-bf0d-d2ae13b18cc4-8537": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-16d51108-3973-43d0-8988-1f11f33a952b-6819": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-e1324177-a910-4e15-8739-8ca178e90c36-1659": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        ".wx-xten-video-player": "display: inline-block;position: relative;",
        "#x-947e9d33-025a-46eb-8de2-6762d9097fee-288": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-607fb3b9-a737-43bf-acc9-1222d270bdea-3403": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-317669c5-3725-45f1-9b28-d10cefd3cde2-1681": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-83e88841-1430-42ca-8f76-22cbab3acf3f-6039": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-fe182d4c-826b-4e24-894d-73e377fe254d-3487": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-5f24089f-c79f-4e73-99fc-4dcd94cb6c3d-8673": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9ae53b9f-415a-4704-878f-0bf768216bf9-4470": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-0986ac90-d2e4-4095-b689-dab1bb109341-7024": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-85510de0-3085-422f-a01b-806b0b2e6cc1-4315": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-32471acb-3ed7-4f04-b8b5-b76d6bea04d2-1338": "height: 30px;",
        ".wx-xten-banner": "position: relative;",
        "#x-9fffa4eb-64ff-4bc8-84e4-30197e2d0af3-865": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-df4e8324-7954-4a2e-a76c-b24fb99d3210-8226": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-def876ff-5a0b-4c13-baa8-e8b2f6f00552-4206": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-59ac9c75-b4fe-4e19-ad13-9f820e9ad264-9153": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-43391f07-1300-4f99-8ebc-08e5cd72d787-3225": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-019bf007-40e8-4fa1-8442-91e143b740e6-8344": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-572137e8-598c-46d7-9d39-5d06cea1c8dd-5198": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-d2e0bde0-e32c-4606-ad72-5b680b6f1e62-1435": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-30e287ed-e050-44fa-9814-6eb80fc5b953-5060": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-1ad36a4d-1728-48f8-8d9f-021249c663cb-424": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        ".wx-xten-pos-middle": "position: absolute;display: inline-block;left: 50%;top: 50%;transform: translate(-50%, -50%);",
        ".wx-xten-inline": "display: inline-block;",
        "#x-0f11d432-ffee-41dc-a678-a793edd3536d-1739": "height: 10px;",
        "#x-fb231fdf-6a4b-464e-856d-df92100ef49d-3327": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-ce646967-914b-41bf-8f73-0fb99f73ac73-3494": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-ef025661-e49c-44b3-87fd-99de1be3a2ac-789": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        ".wx-xten-pos-left": "position: absolute;display: inline-block;",
        "#x-94bb409d-b7ec-46e7-b431-f5de7b0260a6-9897": "left: [$left||0];top: 50%;transform: translateY(-50%);",
        "#x-18ed69fc-0737-4bcc-aeff-b01baff6c22d-475": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        ".wx-xten-pos-right": "position: absolute;display: inline-block;right: [$right||0];top: 50%;transform: translateY(-50%);",
        "#x-87fd699b-c94e-4bf1-84eb-49dbc40378a6-6965": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        ".wx-xten-pos-bottom": "position: absolute;display: inline-block;left: 50%;bottom: 30px;transform: translate(-50%, -100%);",
        "#x-f139fa8e-6a93-40b1-8db6-3c4b6e8e5650-2170": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-86211d6d-9adc-4956-82da-6386c48e724d-3892": "height: 30px;",
        "#x-3fc76752-b0d9-4630-a654-fc18496bfc2c-1686": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-bf158ab1-9732-4484-acf1-fb432fd6b48a-2541": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-cf2aae89-f784-4986-a00e-5713a78b927c-8425": "height: 30px;",
        "#x-ea183958-8b5e-4f55-ba7a-932e78d01ee5-8938": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        ".wx-xten-textedit": "display: block; width: 100%",
        "#x-569919dc-f99b-4538-81a0-48c3cda32a1b-7276": "column-count:[$cols||1]",
        "#x-ebb1e207-3d90-49b3-aebb-a565da5494f2-7301": "height: 30px;",
        "#x-6ee3183b-139f-4b02-a41c-27393b8b24f1-5081": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-a0ff0a77-f685-4fbb-ba93-3ed2a2791eac-7340": "height: 30px;",
        ".wx-xten-grid": "position: relative;",
        "#x-14c4f639-90af-477f-ac49-422ebcbda67c-5826": "aspect-ratio: 1.5;",
        "#x-d7c35373-cd52-4817-ba5b-c84b827d5066-3541": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-247ebad4-5645-46c7-9b92-ae04a61be23b-3904": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-45d770d2-a2ea-47a9-b356-4879bc55f975-6425": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-71e2dd19-d85b-4d8c-b849-5f10f6e1fee5-4566": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-57013ef0-bb05-40b5-95aa-55fbcaf18c57-7195": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0205b0da-73ed-4ce5-ae9d-821f13507656-4182": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7969f60c-7bba-47ac-a024-c29058cd2ac5-6172": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4b0f124f-87b4-4daa-99a4-16ab81f538cb-283": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b2c33d84-a3b5-46ad-a324-9e59410fdf5b-2743": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-be409fbb-21d5-42aa-8c36-869478269588-4112": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-97430bcf-0331-4f31-8392-cd82b0118ebf-6383": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-579fadce-ad43-420c-9ced-e40295aa13ea-176": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-fa371401-66a5-48cd-9e6a-035bbeaad9ed-5755": "height: 30px;",
        "#x-9fd2d8a2-c2f8-4a87-9468-223095586226-5172": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-7bf346dc-248d-444d-a274-da58071c5e98-9980": "height: 30px;",
        ".wx-xten-list": "position: relative;",
        "#x-ca33f9d6-d12a-47b7-a28d-e7f2d6eb8fe5-1206": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        ".wx-xten-circle": "overflow: hidden;",
        "#x-754d623d-40a4-4f23-9e07-86780dbff166-2868": "border-radius: [$radius||50%];",
        "#x-3cd6eec3-8ee1-44b7-8ee3-e44d0b1e7792-8680": "aspect-ratio: 1;",
        "#x-b94f79b8-d5ef-4146-9727-99587f9aff0f-8808": "top: calc(50% - 15px);right: [$toolbar-right||auto];left: calc(50% - 15px);bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-fbd0f44f-4053-4dca-8fc6-a6b242802396-6720": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-31be1647-649a-4b95-af6f-7cd24d719df0-2272": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c4b95ea8-e81e-4a80-8d33-18d7ee83688c-2606": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8b6fbc56-580c-4a2f-9939-6680dbb75a6d-7785": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-220da52d-651d-41c5-b0ad-2dbb9baacdd8-4129": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-fb54e2cb-9eae-4eb7-b9ad-f593f354fa49-7622": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a846d48b-b182-477d-9074-c96b489bce05-5166": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8721d4c6-8df3-495c-aef0-7cfb875a49d5-8631": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-8952e759-4c04-48f9-89a7-a087e4544919-1662": "width:[$width||100%];height:fit-content;justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-cf89603f-3ed6-4913-a8b8-7c3e8502ccf9-5210": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-c43843ee-863c-426f-9c31-3271eed9e6b0-5232": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-026d390b-a005-4268-a41c-29581b832610-871": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f40f265f-7405-44a6-a18a-93cde129963e-5899": "height: 30px;",
        "#x-56142f7b-f302-451d-b1a2-b78964c6c2f1-2951": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-aaaad834-db31-48d3-a2d2-11b64c19a9d2-1609": "height: 30px;",
        "#x-fc8ec32f-cfbd-4ff4-9442-324a5f13ef65-752": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-38647a6a-0fa2-43e0-abba-aaecc121acef-4799": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-d415ab6a-62e7-42aa-bd30-a42363cf6972-7703": "aspect-ratio: 1.5;",
        "#x-c49886f3-d3d0-449f-8241-d2c27793ba52-9368": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-b0f0aacf-baf3-4d43-9f88-115b438b0d51-8686": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-39b3d55b-1635-48a9-9ccc-aa2ac566fe53-8897": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d33a564e-fc0c-495c-b0f0-a981d3abd141-8153": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-000ec2c5-750c-4efa-9a23-e7b35fbd7e31-966": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4b59f6a5-16a1-4d6e-ba53-bc9a13d7eb83-3073": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8aaa8477-a4c7-43b6-bbca-354f67fdf0dc-733": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4c98b99f-b79a-44e0-b14b-aa88d2cf5e0d-9810": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8314ffbc-bf8e-4394-afbd-b564e71da8d1-172": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-8ad97810-8266-4652-9ef5-dcc74344fc3f-6881": "flex: 6 6 1px;",
        "#x-e5e54667-94c5-45ec-bbcc-5e0d810800c5-1414": "column-count:[$cols||1]",
        "#x-155686df-5317-4588-958e-859bcf74ece0-6663": "height: 30px;",
        "#x-7242b403-54ca-4a45-ad5e-c5de4a2bb708-113": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-414c472d-55c1-406f-8d03-5ace5da0e79c-8212": "flex: 6 6 1px;",
        "#x-e10fd912-eff2-4a62-a6ea-7547af41f688-7595": "column-count:[$cols||1]",
        "#x-0dcb2f5b-74f2-4098-addb-673da9836255-2627": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-9894fddd-9935-4b65-89f9-15e8b13a2bec-7273": "aspect-ratio: 1.5;",
        "#x-06590722-57be-45a2-9ab9-775af1a11fe2-2961": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-75cbbb11-0513-44ca-a9c5-8e15b725c78f-1766": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-58d4cc14-e8e3-40f1-81b9-d2ba9d81b0d8-9661": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-62fc995e-b8c2-41ac-af71-b85c095b9e4f-6968": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-04cb165f-297d-471e-af58-d3c462378337-5025": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-32806403-6098-4464-a7d9-2ae9f653a25e-2586": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-38aad70e-1d8a-4f5c-a222-88d76f786b4b-7884": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-10f774e3-133f-49cb-9260-b08036b596e7-3696": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-6cba86cb-ada4-4ae5-a0f9-0d38a67bf464-4678": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-edba0a84-f277-4224-9470-d6cfd9fa7ff7-7960": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {
        "libs/quill.min.js": "libs/quill.min.js",
        "libs/quill.snow.css": "libs/quill.snow.css",
        " libs/quill.snow.css": " libs/quill.snow.css"
      },
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};",
        "initElement['video-player']": "initElement['video-player'] = (element) => {\n    element.setAttribute('src', element.querySelector('video').getAttribute('src'));\n};",
        "_qvSaveShortVideo": "const _qvSaveShortVideo = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-video', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('video' != 'null') {\n            fntarget = toolbarParent.querySelector('video');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'quickplay-changed');\n    }\n};",
        "_qvCancelShortVideoSave": "const _qvCancelShortVideoSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('video' != 'null') {\n            fntarget = toolbarParent.querySelector('video');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'quickplay-changed');\n    }\n};",
        "_qvUploadVideo": "const _qvUploadVideo = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('video/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('video' != 'null') {\n            fntarget = toolbarParent.querySelector('video');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'quickplay-changed');\n    }\n};",
        "initElement['banner']": "initElement['banner'] = (element) => {\n    const item = element.querySelector('.wx-xten-listitem');\n    if (item) {\n        item.classList.add('active');\n    }\n    const icons = element.querySelectorAll('.change-slide');\n    icons.forEach(_icon => {\n        _icon.addEventListener('click', (event) => {\n            event.preventDefault();\n            const element = event.target.closest('.wx-xten-banner');\n            var active = element.querySelector('.wx-xten-listitem.active');\n            if (active) {\n                const idx = active.getAttribute('list-idx');\n                active.classList.remove('active');\n            }\n            const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + _icon.getAttribute('slide-idx') + '\"]');\n            target && target.classList.add('active');\n        });\n    });\n};",
        "initElement['inline']": "initElement['inline'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.setAttribute('contenteditable', true);\n        wxfns.addClass(element, 'editable');\n        const prevText = element.innerText.trim();\n        if (!prevText.length) {\n            element.classList.add('_empty_inline');\n        } else {\n            element.classList.remove('_empty_inline');\n        }\n        element.__inlineValue = prevText;\n    } else {\n        element.removeAttribute('contenteditable');\n        wxfns.removeClass(element, 'editable');\n    }\n};",
        "_inlineEventKeyUp": "const _inlineEventKeyUp = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text != origValue) {\n        element.classList.add('_unsaved_inline');\n        const timout = setTimeout(((_element) => {})(event.target), 3000);\n    } else {\n        element.classList.remove('_unsaved_inline');\n    }\n};",
        "_inlineEventBlur": "const _inlineEventBlur = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (text == origValue) {\n        return;\n    }\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text) {\n        wxfns.transaction(element, 'save-page-data', element.innerText.trim());\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n        element.__inlineValue = text;\n    } else {\n        element.innerText = element.__inlineValue;\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n    }\n};",
        "event_icon_x_ce646967_914b_41bf_8f73_0fb99f73ac73_3494_onclick": "const event_icon_x_ce646967_914b_41bf_8f73_0fb99f73ac73_3494_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};",
        "event_icon_x_18ed69fc_0737_4bcc_aeff_b01baff6c22d_475_onclick": "const event_icon_x_18ed69fc_0737_4bcc_aeff_b01baff6c22d_475_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-banner');\n    var active = element.querySelector('.wx-xten-listitem.active');\n    idx = parseInt(active ? active.getAttribute('list-idx') : '0');\n    if (active) {\n        active.classList.remove('active');\n    }\n    var total = element.querySelectorAll('.wx-xten-listitem').length;\n    const next = idx == 0 ? total - 1 : idx - 1;\n    const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');\n    target && target.classList.add('active');\n};",
        "event_icon_x_87fd699b_c94e_4bf1_84eb_49dbc40378a6_6965_onclick": "const event_icon_x_87fd699b_c94e_4bf1_84eb_49dbc40378a6_6965_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-banner');\n    var active = element.querySelector('.wx-xten-listitem.active');\n    const idx = parseInt(active ? active.getAttribute('list-idx') : '0');\n    if (active) {\n        active.classList.remove('active');\n    }\n    var total = element.querySelectorAll('.wx-xten-listitem').length;\n    const next = idx == total - 1 ? 0 : idx + 1;\n    const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');\n    target && target.classList.add('active');\n};",
        "initElement['textedit']": "initElement['textedit'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        var toolbarOptions = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{\n                'list': 'ordered'\n            }, {\n                'list': 'bullet'\n            }],\n            [{\n                'script': 'sub'\n            }, {\n                'script': 'super'\n            }],\n            [{\n                'indent': '-1'\n            }, {\n                'indent': '+1'\n            }],\n            [{\n                'direction': 'rtl'\n            }],\n            [{\n                'size': ['small', false, 'large', 'huge']\n            }],\n            [{\n                'header': [1, 2, 3, 4, 5, 6, false]\n            }],\n            [{\n                'color': []\n            }, {\n                'background': []\n            }],\n            [{\n                'font': []\n            }],\n            [{\n                'align': []\n            }],\n            ['image', 'video'],\n            ['clean']\n        ];\n        var editor = document.createElement('div');\n        editor.className = 'editor';\n        editor.innerHTML = element.innerHTML;\n        element.innerHTML = '';\n        element.appendChild(editor);\n        editor = element.querySelector('.editor');\n        var dirty = false;\n        if (!xdata.quill) {\n            xdata.quill = {};\n        }\n        const quill = new Quill(editor, {\n            modules: {\n                toolbar: toolbarOptions\n            },\n            theme: 'snow'\n        });\n        const toolbar = element.querySelector('.ql-toolbar');\n        wxfns.addClass(toolbar, 'hidden');\n        quill.getModule(\"toolbar\").addHandler(\"image\", (value) => {\n            const upload = async () => {\n                const file = await wxfns.selectFile('image/*'); /*const result=await wxfns.upload(element,'save_image',null,file);*/\n                const result = await wxfns.upload(element, 'save-image', null, file);\n                const range = quill.getSelection();\n                quill.insertEmbed(range.index, 'image', result.output);\n                quill.setSelection(range.index + 1);\n            };\n            upload();\n        });\n        quill.on('text-change', function(delta, oldDelta, source) {\n            dirty = true;\n        });\n        setInterval(function() {\n            if (dirty) {\n                dirty = false;\n                const text = quill.root.innerHTML; /*wxfns.transaction(element,'save_page_data',text.trim());*/\n                wxfns.transaction(element, 'save-page-data', text.trim());\n            }\n        }, 2000);\n        const ImageBlot = Quill.import('formats/image');\n        const Parchment = Quill.import('parchment');\n        element.addEventListener('click', (e) => {\n            e.stopPropagation();\n            const toolbar = element.querySelector('.ql-toolbar');\n            wxfns.addClass(toolbar, 'visible');\n            wxfns.removeClass(toolbar, 'hidden');\n            const img = Parchment.find(e.target);\n            if (img instanceof ImageBlot) {\n                quill.setSelection(img.offset(quill.scroll) - 1, 1, 'user');\n            }\n        });\n        document.addEventListener('click', () => {\n            const toolbar = element.querySelector('.ql-toolbar');\n            wxfns.removeClass(toolbar, 'visible');\n            wxfns.addClass(toolbar, 'hidden');\n        });\n    }\n};",
        "event_icon_x_97430bcf_0331_4f31_8392_cd82b0118ebf_6383_onclick": "const event_icon_x_97430bcf_0331_4f31_8392_cd82b0118ebf_6383_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};",
        "event_icon_x_c43843ee_863c_426f_9c31_3271eed9e6b0_5232_onclick": "const event_icon_x_c43843ee_863c_426f_9c31_3271eed9e6b0_5232_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];",
        "#x-569919dc-f99b-4538-81a0-48c3cda32a1b-7276": "column-count:[$cols-tablet||1]",
        "#x-e5e54667-94c5-45ec-bbcc-5e0d810800c5-1414": "column-count:[$cols-tablet||1]",
        "#x-e10fd912-eff2-4a62-a6ea-7547af41f688-7595": "column-count:[$cols-tablet||1]"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];",
        "#x-569919dc-f99b-4538-81a0-48c3cda32a1b-7276": "column-count:[$cols-phone||1]",
        "#x-e5e54667-94c5-45ec-bbcc-5e0d810800c5-1414": "column-count:[$cols-phone||1]",
        "#x-e10fd912-eff2-4a62-a6ea-7547af41f688-7595": "column-count:[$cols-phone||1]"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "_home",
      "allow": ""
    },
    "blog": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-e77ba52a-bae1-4de0-8741-d75f462d09dc-8343": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-cb892510-c8f3-4036-8c4d-17a94138f725-7237": "#x-cb892510-c8f3-4036-8c4d-17a94138f725-7237 > img {aspect-ratio: [$aspect-ratio||auto];}#x-cb892510-c8f3-4036-8c4d-17a94138f725-7237.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-b0619ee4-9778-4439-a29b-9f7063542c62-8669": "#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navitem:hover { color: blue }#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "object-list": ".wx-xten-object-list .wx-view-list-item {position: relative; width: 100%;}.wx-xten-object-list .wx-view-list-parent {position: relative;}.wx-xten-object-list .wx-view-list-parent:not(tbody) {display: flex; flex-wrap: wrap; width: 100%;}.wx-xten-object-list .object-list-toolbar {display: none;}.wx-xten-object-list .object-item-toolbar {display: none;}.wx-xten-object-list.wx-state-editable .object-list-toolbar {display: inline-block;}.wx-xten-object-list.wx-state-editable .object-item-toolbar {display: inline-block;}",
        "x-3c9ee80b-cc63-4831-824b-a841502111d7-6734": "#x-3c9ee80b-cc63-4831-824b-a841502111d7-6734 .wx-view-list-parent:not(tbody) {flex-direction: row; gap:15px;}#x-3c9ee80b-cc63-4831-824b-a841502111d7-6734 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: 1 0 0px;width: calc((100% / 3) - 15px * (3 - 1) / 3 );[$list-item-style|| ]}",
        "x-24a8437e-b83a-4958-bc80-9821d825a717-3594": "#x-24a8437e-b83a-4958-bc80-9821d825a717-3594 .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#x-24a8437e-b83a-4958-bc80-9821d825a717-3594 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: 1 0 0px;width: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}",
        "x-af65b293-4e97-4b4a-9ad1-f0827ee4b3cd-197": "#x-af65b293-4e97-4b4a-9ad1-f0827ee4b3cd-197 .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#x-af65b293-4e97-4b4a-9ad1-f0827ee4b3cd-197 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: 1 0 0px;width: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-799a7ced-d078-47e4-8e96-82b5f238928e-8543": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-c08fba34-a153-48c3-adce-478e48aeb0b9-6856": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-5b9cbcc9-1123-4f7d-8db0-334dd95fab11-2861": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-76b6073e-187d-4507-b0ba-8c119cfd8a83-4407": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-073f984d-ddf9-4fa5-ada4-ed76066a91fb-4826": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-15d00875-5daf-45e0-9c07-2762b2c7d808-7135": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-7e687061-97d0-4367-a96f-80a16ac0a0ff-3317": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-cd71fd7b-b247-4c70-a556-01990b70de7d-1172": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-435ecf54-a576-43b8-b2f2-ed38851b8703-102": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e21a418a-ce81-490b-b555-992b26f000b7-7163": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-492bca63-6555-4d88-a0c0-347812bf7bc9-4507": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5d67645d-38f0-45df-89be-1cb7438fb5e1-7195": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b4cb707f-a266-442e-a4d6-b829b054dee9-3865": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-ff9bba1a-21ba-4faf-8ec7-9be19f3b4999-1441": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-4d0b4e6d-be30-47bd-b774-1eed955689c8-54": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e36d3a22-e4f1-4bce-a05e-e0b3cc8ad00e-8779": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-82f008fd-7b13-4d75-8b89-3d519a1ebf59-3278": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-78898bda-3ff5-4adf-a74d-e1cc66356ea7-1594": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-01381a2c-b012-4356-9c86-60c245460c93-9775": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-caeb4485-bcaa-4dc6-8055-a8926e49dd81-6216": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-2fefdf3f-d364-4526-b366-ebd54089c170-4043": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f37cf37b-fb4b-4ba1-8e92-1f968ff6517c-9681": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-c60b0e52-769b-4db8-ade3-9c68457e5a6a-5612": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b51ce988-6770-4cd3-8140-9dc769d06352-4510": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b914d741-af45-4bbb-9b6a-181d811d3359-2783": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-da76bfa2-a02a-4057-bb24-feb85179c136-9086": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-0e35cbcc-aece-41fa-9dd6-eaa7f2beacdd-3714": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-a8f4ce4d-6ede-4acc-bb3d-550f419aee7c-2746": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-1c766adf-6826-48d1-8202-8280f6d420f6-619": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-cb892510-c8f3-4036-8c4d-17a94138f725-7237": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-f6f0ffe5-5a3b-4fe7-83e8-c342d6b83453-4614": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-5a550ff2-bf71-4a8d-b729-62c7ee7ddc02-1389": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-fce7991b-82ed-4ad1-9eff-441c81899a9d-2017": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b7bcde92-3296-4a54-b121-c02a07736ce1-1363": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-733432ac-3a72-4448-82d7-e26e15648f38-1460": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d164535c-7048-4942-b2ae-688c6185c391-7048": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-e46f8a0a-6a3d-4f7c-b49a-b96cdfd232ef-7133": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-7b266950-a85f-4719-af06-7ece6fe991eb-80": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-4afa5b1b-e053-48e4-959c-f963b3e4c5df-9877": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a10200f9-9077-48c7-a2d7-532b6dbd9b37-5683": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-5cd7341b-7321-45d2-8341-cda77cc71ce6-9189": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-b0619ee4-9778-4439-a29b-9f7063542c62-8669": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        ".wx-xten-object-list": "position: relative;",
        "#x-328f0e73-c279-4b33-9239-7d45860ae0e8-2091": "height: 30px;",
        "#x-1520506e-6547-4a51-86b4-5505c33f4aaa-1723": "height: 30px;",
        "#x-6f8dc57e-616a-48d0-ad97-8b4a4ceeca12-1690": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "blog",
      "allow": ""
    },
    "contact": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-654eea31-3f83-4537-aeb7-b216c442ee25-4734": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-5c6b79ef-4986-4c29-8f48-50bda5770884-5874": "#x-5c6b79ef-4986-4c29-8f48-50bda5770884-5874 > img {aspect-ratio: [$aspect-ratio||auto];}#x-5c6b79ef-4986-4c29-8f48-50bda5770884-5874.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-16dda982-c499-4f19-b960-b9189250780d-2721": "#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navitem:hover { color: blue }#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-16dda982-c499-4f19-b960-b9189250780d-2721 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-c55ff62c-6590-4380-abd9-26ca6d2f003d-8120": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-40cd9180-31fb-4eb7-8c03-09b2f6eea0ea-4458": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-f232ae55-ce56-49b2-bf3e-22dbdc12c9f4-3729": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-872cab3b-70cc-4278-ae2d-33895d877900-4711": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-f21e1f39-a212-4ded-903a-f1aa7e4d1f44-3698": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-78b89d1e-aac7-4cf5-9494-ea5378210fa5-8061": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-c3767ebe-5b27-4293-b2fd-bdd2a58284cb-8988": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0f4fbefe-3d82-4554-a325-40b374a70935-6556": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8adfe734-bffd-4f9c-a8a1-384d58a508bb-588": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1c6e20aa-ae97-49da-898d-69f2a2d9fe8c-419": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-57f4a2ca-0023-4fc5-b070-39ae3f9a11d6-25": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-033f86b8-0734-4dd6-b0f9-49fc69f709d9-1681": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-67e870ba-f0ae-4f8f-90b3-acda0558f9a0-3121": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-48608d99-2306-4b8d-8edf-bc2ac3a9cc63-3274": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-544c6a9e-2814-4489-bb8f-9ff155bea0a8-435": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e5cd1e6a-27fd-4e24-89ae-26d64392340e-275": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-d0bce399-ed4c-4d7c-8c18-058a3512d237-1474": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-04e502e1-7811-4d80-8a0f-71fc22109287-177": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-40b7e4d0-773e-4af7-b574-1d81d183f5e2-8994": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6caf86f0-670f-44aa-937b-d9d88e6fa35a-9813": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7e7cfa90-89cc-4915-8edc-8e20652bdb81-8519": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-8f9f32d9-4ef6-4083-9b09-c8f97a0f11bb-4965": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-44ee2da9-d8c4-4354-bccf-a5c5cddd392a-6479": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-37bc6c69-a551-444f-a3a9-8c11b81581f9-4851": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c049ecc4-352e-4d5a-9edd-65120905e111-4596": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-1e2160ac-e2c5-447c-a702-453acf88afb1-5317": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-48613b9b-4da9-44ec-8def-e72f225e28d3-6708": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-16a00318-b2ff-401b-a071-c59e6d076e32-6806": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-34c538a0-2142-4acd-b9c0-4454cfeae770-8001": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-5c6b79ef-4986-4c29-8f48-50bda5770884-5874": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-b73e59d7-10b9-45a1-97a0-2e1de73571e3-7542": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-e24f2316-90d7-4a26-b6d4-a493c6ca9740-2964": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b8f55581-0871-4241-93fb-32a98ef6064b-1419": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-545438f9-0f50-49db-98b1-c0f0cac6b88c-3048": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-6497e14c-a248-42be-bf61-896ca8ff84c2-6385": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b7bc9edc-b680-46a4-8c54-a450e6e99216-2528": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-365b1a6d-bf05-4c79-a012-2425a3dd673f-1731": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e40097ad-e5ca-4d0f-ae36-6e7eaeab3d30-8883": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-627ddffe-9dcf-48b2-9167-1b7fd2a6d566-8156": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e4a4c201-4b08-4a14-9ced-519eacef56b7-3885": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-bbed1b91-9b3f-4deb-ad94-b13ac7c8402d-1898": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-16dda982-c499-4f19-b960-b9189250780d-2721": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-f5081e05-94a4-4b93-944a-6ac6ad10a2e6-7584": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "contact",
      "allow": ""
    },
    "login": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-30ae32d7-f908-4169-9341-81c57a3c3714-8731": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-1b65c432-77b3-4e60-9326-ab1caa5cbf8b-3266": "#x-1b65c432-77b3-4e60-9326-ab1caa5cbf8b-3266 > img {aspect-ratio: [$aspect-ratio||auto];}#x-1b65c432-77b3-4e60-9326-ab1caa5cbf8b-3266.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-e04572a0-5812-4480-ba82-c069b060bf4c-1500": "#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navitem:hover { color: blue }#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-e47223b0-b412-4414-b973-49ac2e87f20a-5255": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-97a1eb10-99a1-41c8-a162-499fbc82f21b-8516": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-fae38028-9f9c-43b4-a64b-cf31adc3e90f-4869": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-f6225299-add3-4525-813a-3ebb2a29bd16-4031": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-17e22c7e-819b-494c-8083-e4b38fc64b8e-5008": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-4a913c56-a80d-40e0-8497-4e08852c257f-9197": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-883c6a20-6030-4de2-b714-e7abea1b9748-2246": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6f507245-063d-45b6-8f87-08a7785576c0-9301": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-d8cd91fd-d474-4b15-8dfb-1bcc9d22e620-320": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-7dbad61b-4172-40d1-a9a2-b0295ebcc687-6986": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-e107dd6d-2e64-4341-a740-d2cf342cc0df-927": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a8395b25-cd5d-4e2b-b5f3-2ca17c584326-1015": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-13cdc8d6-099b-471a-8d4d-9bf98f2631e2-3202": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c6a6ee5b-b53e-4f69-a337-ef20f54cacd0-5976": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-6ddc6b8d-8f2a-4b52-b984-002514f36a16-2027": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5752447b-e403-4a9a-98af-44fbd3d179b8-280": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-42bf0b73-bae7-4d43-a6f2-5641d36ee5d8-9895": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0d76e07b-810d-4b45-9e3b-4602ab603f86-3472": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-d3407b48-7896-448d-81ea-cd3e6e7c0455-5070": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a27ec025-6303-4ac2-998c-5bf60724eeee-8439": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7196335f-9c69-4a42-94fb-f836e1768532-6764": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3aa9e565-79e7-41b7-af14-67b49eaa99d4-4501": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-d587c86e-871e-4e1b-a135-7941b81fd3e2-1588": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7ac5b865-fe2d-4b73-b645-dd0b5c54cfd0-8560": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4982eab2-0e66-4098-ba78-2d70b7442ff0-2354": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-0e1834fd-d9aa-4943-bea6-2410407ed4e2-6656": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-2f2ddb26-8969-4863-99a8-1e0d1ced0f3a-4237": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-67f3e2fa-9ea2-4d49-889c-ccf3b7cb6c0c-4243": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-e9f1e751-2ee1-43d1-a667-2e8a01f69512-8827": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-1b65c432-77b3-4e60-9326-ab1caa5cbf8b-3266": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-3e708cbf-1e15-437b-a8b5-f88965fbf47d-3248": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-5f0519f7-22a6-4381-8875-16524627ca79-8608": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-6363870b-5bdf-4404-a5a8-4497af8a7108-7794": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-91cefd9e-da05-4588-88b3-0ff8a974c337-6846": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-fc48ed98-ede3-43ce-bc41-2a6ff1acf578-6976": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6eff77e9-4fc8-4f8f-9ab2-ae8c50cc26c2-4470": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-5a0552c1-289a-4f61-8eb0-c832cf505f30-8655": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-971a5287-bce0-401f-bda2-e0e86d0e3d9b-1326": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b9f29c48-efd6-4dec-8ed7-cd530f8e1c8e-8335": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6c8eb936-4049-43ae-a948-1c2ff5904bc2-1045": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-9733aead-06ee-456a-ac20-6b2e7f1d4e6d-4364": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-e04572a0-5812-4480-ba82-c069b060bf4c-1500": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-44c35ee1-9359-44a6-8a1d-d9e9e167a9f3-9314": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-bcb6c657-3c92-40b3-934e-e31dd2a316c9-5588": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-24c8bf26-91b0-410b-8e89-4c3ef804601a-9380": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-bb24cae6-c148-4923-9808-e1678ab3b82a-8391": "flex: 4 4 1px;",
        "#x-7cef30da-d585-4e15-bde3-8180c98e9232-5845": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-acef78c4-d8bf-4332-8895-de2cfbdc827a-3844": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-291efdf4-2cdb-400f-ae33-d0bbccf5ae22-4484": "flex: 4 4 1px;",
        "#x-beade882-fd0c-4ddc-a94d-2b0daf58ab72-8426": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-836b9cd2-2cec-48af-bffb-6e9ec16197a9-9703": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-0267af39-4a86-4d7b-ae84-fd8b4150b01b-3325": "flex: 4 4 1px;",
        "#x-9897eb4f-2427-4709-ba20-146e45ab1d2f-999": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};",
        "events_loginform_onsubmit": "const events_loginform_onsubmit = async (event) => {\r\n    event.preventDefault();\r\n    const element = event.target;\r\n\r\n    if (!validateForm(element)) {\r\n        return;\r\n    }\r\n    const data = wxfns.getFormData(element);\r\n    const result = await wxfns.transaction(element, 'login', data, true);\r\n    if (result.rc != 'success') {\r\n        element.getElementsByClassName('form_error')[0].innerText = result.rc;\r\n        return;\r\n    }\r\n    const user = result.output;\r\n    setUser(user);\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: user\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    const [action, args] = element.getAttribute('action').trim().split(/\\s*\\:\\s*/);\r\n    if (action == 'reload') {\r\n        location.reload();\r\n        return;\r\n    }\r\n    if (action == 'redirect') {\r\n        location.href = args;\r\n        return;\r\n    }\r\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "login",
      "allow": ""
    },
    "layout-example": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-d3aacce5-e8bf-4831-86a5-20a37679f3cf-8201": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-31acd7a3-4a9a-4d09-be17-666026f4a4b0-1827": "#x-31acd7a3-4a9a-4d09-be17-666026f4a4b0-1827 > img {aspect-ratio: [$aspect-ratio||auto];}#x-31acd7a3-4a9a-4d09-be17-666026f4a4b0-1827.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961": "#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navitem:hover { color: blue }#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-df1a0341-6f3f-4c3c-90ff-ec87dd71fdca-1554": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-ccd89445-dd36-496c-b17f-07b6e8c66898-5103": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-0cc51b69-df97-4d46-a784-9643a3a090ca-956": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-104b7466-8a6f-4260-9836-19780840510c-2437": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-0601f8a3-295a-4f5f-82a5-f65c739e5938-3236": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-cbc70483-8fb1-4e21-b486-d20073833d71-4515": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-dad9a711-c6f4-46aa-a882-4eb9c2fbc42f-7863": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5abd1de2-53d5-4f7c-b93d-1b82ac8eaf50-720": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-c5826b3d-ef24-4749-842c-14e4f00cdc5f-1656": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4e47b825-0553-4667-aeff-b68490812957-7855": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8cc591b1-646c-4370-a3fc-6ac6e07f12c6-3347": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9350b113-ea48-41b2-ac1c-4c216c6c6ea9-8955": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-578e76d2-3ac9-40c9-a353-4bb8612af7dc-8925": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-99862619-9613-412b-aaef-cc2246e5d453-9737": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-e09a4095-5d2d-4a7d-9c8c-7c93557ffe87-1315": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-fdab019e-bb4f-420c-8c75-6732df835656-928": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b7dc4a1b-1e26-4e3d-b447-4c9aa4bb428e-2613": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-2a0f9fae-02f9-45b8-b840-ed1de05d05da-3361": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-9257aa50-5693-42de-bfcd-5c2e58086fcf-9547": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-7fb40849-ffa4-4a61-babc-53b0196eb620-3391": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-059a2bc4-8c02-4364-8ed5-114181852c4f-5098": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-7df20e3f-3793-45b0-ad40-5420c5e2288b-4777": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-1a85fad0-15c4-44ac-ae5f-4ada9f185512-5824": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-600f35ad-dafb-4522-b628-447b28e563da-3464": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-dd42039b-d992-4b69-9fd1-d4bdddf8d81a-9167": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-5b9caede-b263-4aa6-a038-4a042ab74c4f-7724": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-40303a9b-c85c-4d0f-8f83-4530e6d89806-1706": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-67cfae4a-c2d5-46e0-b484-5f44423b7f19-7765": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-278eb4f0-1910-4886-bbec-10394df3ac34-2240": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-31acd7a3-4a9a-4d09-be17-666026f4a4b0-1827": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-1363ce64-cc73-4655-a2d0-d284f0a43989-8701": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-8e93bc56-d697-4786-9277-fbafebb0d81a-202": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-ea3574d9-22da-481d-857a-83310dd19e8d-5327": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1357c9a7-267c-42b8-be05-a6d6387878a0-8694": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-1171a477-b2a7-46a5-bb9c-37d8339f3fa7-7878": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3f63042b-6206-4558-890d-338198f22576-581": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-33fe2a4f-bf55-4e8f-8f00-d69c05c7d650-1877": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-88d94be0-63e2-4187-be2c-a0d8e504b3f0-6311": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-9470cc59-889e-49b6-8c90-60827fe605a2-561": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a436b156-38b8-46be-ac1f-19413b982074-2103": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-4cb0ae5d-b3f5-4bc1-9f99-088117ba335a-5885": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-faa1c7c3-d74f-4fad-bb2b-2f2d18ff9ff7-2961": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-de779764-4f84-4267-8a9b-6c635cde0309-391": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-d52bdd1b-0793-4bd8-94e0-f94b3d708ae9-7233": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-center": "display: flex;width: 100%;height: 100%;justify-content: center;align-items: center;",
        "#x-d258aa97-a8e3-4d72-af11-e564d8887126-2665": "flex: 3 3 1px;",
        "#x-af8c17c3-d6de-48b6-9651-ef200020e935-2731": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-47acc2d8-e74d-45fb-9e87-3b098b1502cd-1571": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-1a81ecd5-5c2e-4c86-a3fb-1cb82362f1ca-4402": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-b00e7e1b-d832-4131-a3f4-cf966312b2fd-5821": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-cc4944dc-dd0e-4fa8-858f-c6b6d3a391cf-9516": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-71b69993-507d-4c0d-ac50-902dbb4423b3-5871": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-ed5cdbeb-f8bb-4e18-ab7f-b179be74e9d5-254": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-e7a8eb2a-bce0-4323-b4ec-7b965893a1ec-4379": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-e8b6b693-0dba-4e85-a8da-5937fe20900a-3167": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-ed31fda0-9233-4a1a-a32d-d9fd9c6aa1cd-3491": "flex: 5 5 1px;",
        "#x-0fbe5413-e5f3-4787-a863-8a4e4ac9bc95-3607": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-9e737b4e-70d8-4b54-830f-7b2e72a354e2-1594": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-b99c1cdf-6d0e-466b-b2b0-63d8e26bc29a-5865": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "layout-example",
      "allow": ""
    },
    "blog-post-default": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-edced2c9-e708-4d5e-bff6-b584d0bb8ac2-1501": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {object-fit: cover;object-position: center;width: 100%;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-28d2a913-6198-42a8-b682-6f28b6b76c07-7240": "#x-28d2a913-6198-42a8-b682-6f28b6b76c07-7240 > img {aspect-ratio: [$aspect-ratio||auto];}#x-28d2a913-6198-42a8-b682-6f28b6b76c07-7240.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-da982dd3-265c-450b-a3cf-4affd6c87771-2296": "#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navitem:hover { color: blue }#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "object": ".wx-xten-object > .wx-xten-object-data-wrapper {position: relative;}.wx-xten-object > .view {display:none}.wx-xten-object > .wx-xten-object-data-wrapper > .wx-view-object-list-item {position: relative;}.wx-xten-object > .object-list-toolbar {display: none;}.wx-xten-object.wx-state-ediable > .object-list-toolbar {display: inline-block;}.wx-xten-object .wx-xten-object-item-toolbar {display: none;}.wx-xten-object.wx-state-editable .wx-xten-object-item-toolbar {display: none;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-d4850999-4fae-4602-a5ed-916ca332e52e-1236": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-98ec80c8-cd6f-47d7-9cb3-753fb638c7f3-2686": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-63ccb8f9-6058-46da-a146-b425016af4bf-6270": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-3c8104e8-3e82-4803-8de2-c361d4f1a13a-4865": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-4019a36d-6729-4840-8ad6-83bcc53f5753-4490": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-503b767b-a1a7-4280-91c4-3b837cdc2bac-8000": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-d1df9a53-ca09-4646-bfc8-c23d79dc38f9-4806": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1dd5b63f-2fd8-4f01-8541-58e04b996fb8-1003": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-2e6a6792-c035-42bf-b670-b408bea16c7d-2286": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-38a3f47f-5f2d-41d0-be58-fd15042c3450-7660": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8e7b2561-826e-48c5-836a-98d687a410d2-1859": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4ef455b4-4775-4ddd-8541-e506beb3d940-6907": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-50d8d742-9643-4843-b333-29da435a1abf-8204": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-649936b1-20a5-43b2-a0bb-2bc313924cc2-8897": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-ab769492-6f5b-49f1-9c49-c713a7b0cc01-6255": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-8f0f2ac1-8bea-4479-bb1b-9f0356af82e6-9384": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7a0b3b30-6188-4e59-8d8e-920e584360d9-2384": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5d73244a-5aa8-42ae-bc26-85c5f5f107f2-654": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-3e1d3093-ef51-4461-824f-bf1f0f82d2f0-2467": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0755800f-a250-4432-acf9-e0feaf75cb9b-2048": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-a811a1c2-1996-4064-b735-e6e16409505f-2147": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-edefe553-0321-47b4-bc31-0da6d780ba29-4229": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-7b5bdb39-78a6-4080-9e24-e385aa0c1b24-7661": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-1b57c5a4-c302-46cf-9d04-8b372a89d32f-1846": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-43299f27-c39d-4d6e-8ed2-e13f3168a08f-6876": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-ef42e12f-e544-4a58-9b96-03254a502f1e-9637": "max-width: 900px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-114e6c1f-7b0f-4bf6-86b6-ba7a254cf072-367": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-b558542f-a8f7-44ea-840c-9061d36553c9-454": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-abc69dec-7cfc-453a-a651-6f69ea698fc9-6857": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-28d2a913-6198-42a8-b682-6f28b6b76c07-7240": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-112e38b8-70eb-4500-a8a9-a4001b26e8b1-7949": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-f67083c4-1ab9-42f8-8cd2-bc92e0195668-1761": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-ed7dedb1-5610-4bfa-8ce5-7203454348aa-9376": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-55f30484-02d7-4199-8c58-c0cd463075e0-3707": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b38b9809-8bf9-4d41-8bf7-5d2360fd5707-2039": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-2e1da0a9-1039-4aa6-a9e2-3d2e194ab996-7664": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-b906a736-39cc-40f2-b1db-5acbaa969d3c-555": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4038a485-1673-44fa-89b3-9be5f8582c0d-3708": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-0dc5e696-95f1-47c1-898b-b294827414d1-3127": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5c490c91-42bd-451b-8949-7f2048995cd3-7285": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-6b245e54-e2c8-4dec-b784-1249d81f1513-8324": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-da982dd3-265c-450b-a3cf-4affd6c87771-2296": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        "#x-21bb97ce-fe46-4a83-8468-55f23bdb51ae-4244": "height: 20px;",
        ".wx-xten-object": "position: relative;",
        "#x-dadf992a-8bf0-4ee3-9271-dbc534449f58-8739": "height: 20px;",
        "#x-e4f9cc9f-e1d8-49b7-b891-98b0b4fb4d1b-1585": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "events_image_onclick": "const events_image_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const href = element.getAttribute('href');\n    if (href) {\n        window.location.href = href;\n    }\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "_imageAddHyperlink": "const _imageAddHyperlink = async (event) => {\n    const element = event.target.closest('.wx-xten-image');\n    const value = await wxfns.getValue('hyperlink', 'hyperlink', 'Hyperlink', {\n        hyperlink: element.getAttribute('href')\n    });\n    const result = await wxfns.transaction(element, 'add-hyperlink', value);\n    if (value) {\n        element.setAttribute('href', value);\n    } else {\n        element.removeAttribute('href');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    clearUser();\r\n    const element = event.target;\r\n\r\n    const _event = new CustomEvent('changeUser', {\r\n        bubbles: true,\r\n        detail: null\r\n    });\r\n    element.dispatchEvent(_event);\r\n\r\n    await wxfns.transaction(element, 'logout', null);\r\n    window.location.reload();\r\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "blog-post-default",
      "allow": ""
    },
    "blog-post-summary-page": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-5c8d5266-0bd6-4be2-8279-359ccd694bc3-9256": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "object": ".wx-xten-object > .wx-xten-object-data-wrapper {position: relative;}.wx-xten-object > .view {display:none}.wx-xten-object > .wx-xten-object-data-wrapper > .wx-view-object-list-item {position: relative;}.wx-xten-object > .object-list-toolbar {display: none;}.wx-xten-object.wx-state-ediable > .object-list-toolbar {display: inline-block;}.wx-xten-object .wx-xten-object-item-toolbar {display: none;}.wx-xten-object.wx-state-editable .wx-xten-object-item-toolbar {display: none;}"
      },
      "stylesheets": {},
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-59738536-c44b-4d77-b8ec-64f5616aa57e-152": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-f0688b2e-1257-42af-899e-c80ae9eb70fc-9245": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-14368e88-e771-4cb9-b532-bb11aa2bf986-2979": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-d0754493-eb1e-4c99-89fb-5996e75d4061-9351": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-1f047aa5-f806-4e1b-87e7-0065f34ae21a-4946": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-71456ed1-5420-4bac-9e70-30a617c4e0cc-9179": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-934294a2-e0de-47cf-9c4c-0c719c4f9af4-1586": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-973e3949-ee6d-4960-b2e9-8018dc700f88-6277": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-f3389732-280e-4bf2-9fc0-29eec82325e9-5004": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b3e95fe6-b2cc-4676-a1f5-148f20e38432-1444": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-c6a039f6-3c11-47e9-9385-190f102727b5-920": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0fcde01a-3f37-45b3-80d4-f910ffd6f4ba-867": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-cad3a5d6-8a4d-4e9b-a1a0-6bf331cbc122-3114": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-ed9136a2-ddda-4fd3-806b-1b58b80752cf-7124": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-8f30afd2-3a3b-435a-967c-be541aabfc1f-299": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9820d6dc-c050-412c-a96a-e9923023c13d-6685": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-3321ae30-1f14-4141-b5f2-7a5e218ccbe4-464": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-33903f4c-6142-4a5f-b957-ef67ac1bc92f-5681": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-da0b5ea5-737e-4643-bd6b-89ec21d2ad5d-9172": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9eba6b8a-9fed-4de4-b51e-ffd4e1664d8f-1858": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-7597126d-328e-4129-9dd1-385c2e8c6851-1285": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9b0fa8d9-7d4a-4c27-aa89-a28df3535651-5717": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-4f559c22-da26-42f4-9912-0c60e8273379-4225": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid grey];background: [$background-color||#efefef];[$icon-style||];",
        "#x-84491daf-9964-4e5e-9749-dd308cd6d9af-8625": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b7e6b6cf-710b-4ee1-9995-6839ee388053-512": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-242665a4-643b-4f4a-bcd0-0f7babed4a28-9457": "max-width: [$max-width||100%];",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-e8c9dd90-c86b-4e73-893d-1d487e993cd9-5194": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        ".wx-xten-object": "position: relative;"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "public-routes": null,
      "pageName": "blog-post-summary-page",
      "allow": ""
    }
  }
}