{
  "function": {
    "code": {
      "tag": "function",
      "attribs": {
        "name": "code",
        "class": "code"
      },
      "children": [],
      "text": "[$_text]"
    },
    "reload": {
      "tag": "function",
      "attribs": {
        "name": "reload",
        "class": "reload"
      },
      "children": [],
      "text": "window.location.reload();"
    },
    "transaction": {
      "tag": "function",
      "attribs": {
        "name": "transaction",
        "class": "transaction"
      },
      "children": [],
      "text": "var target = toolbarParent;if ('[$target]' == 'event-target') {target = eventCurrentTarget;}const result = await wxfns.transaction(target, '[$name]', [$data||null]);if (result.rc != 'success') {return;}toolbarParent['[$output]'] = result.output;"
    },
    "upload": {
      "tag": "function",
      "attribs": {
        "name": "upload",
        "class": "upload"
      },
      "children": [],
      "text": "var formData = null;const result = await wxfns.upload(toolbarParent, '[$name]', null, toolbarParent['[$file]']);if (result.rc != 'success') {return;}toolbarParent['[$file-url]'] = result.output;"
    },
    "confirm": {
      "tag": "function",
      "attribs": {
        "name": "confirm",
        "class": "confirm"
      },
      "children": [],
      "text": "if (!await wxfns.confirm('[$_text]', '[$heading||Are you sure?]', '[$yestext||Yes]', '[$notext||No]')) {return;}"
    },
    "inform": {
      "tag": "function",
      "attribs": {
        "name": "inform",
        "class": "inform"
      },
      "children": [],
      "text": "await wxfns.inform('[$message]', [$timeout||0]);"
    },
    "error": {
      "tag": "function",
      "attribs": {
        "name": "error",
        "class": "error"
      },
      "children": [],
      "text": "await wxfns.error('[$heading]', '[$message]');"
    },
    "selectfile": {
      "tag": "function",
      "attribs": {
        "name": "selectfile",
        "class": "selectfile"
      },
      "children": [],
      "text": "toolbarParent['[$file]'] = await wxfns.selectFile('[$file-type]');"
    },
    "remove-class": {
      "tag": "function",
      "attribs": {
        "name": "remove-class",
        "class": "remove-class"
      },
      "children": [],
      "text": "wxfns.removeClass(fntarget, '[$classes]');"
    },
    "add-class": {
      "tag": "function",
      "attribs": {
        "name": "add-class",
        "class": "add-class"
      },
      "children": [],
      "text": "wxfns.addClass(fntarget, '[$classes]');"
    },
    "unset-var": {
      "tag": "function",
      "attribs": {
        "name": "unset-var",
        "class": "unset-var"
      },
      "children": [],
      "text": "delete fntarget['[$name]'];"
    },
    "set-var": {
      "tag": "function",
      "attribs": {
        "name": "set-var",
        "class": "set-var"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget['[$name]'] = '[$value]';}else{fntarget['[$name]'] = [$_text];}"
    },
    "get-value": {
      "tag": "function",
      "attribs": {
        "name": "get-value",
        "class": "get-value"
      },
      "children": [],
      "text": "const fargs = [$_fargs];fargs.value = toolbarParent[fargs.value];const value = await wxfns.getValue('[$name]', '[$type]', '[$title]', fargs);if (value == null) {return;}fntarget['[$name]'] = value;"
    },
    "log-var": {
      "tag": "function",
      "attribs": {
        "name": "log-var",
        "class": "log-var"
      },
      "children": [],
      "text": "common.info(fntarget['[$name]']);"
    },
    "set-style": {
      "tag": "function",
      "attribs": {
        "name": "set-style",
        "class": "set-style"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.style['[$name]'] = '[$value]';}else{fntarget.style['[$name]'] = [$_text];}"
    },
    "unset-style": {
      "tag": "function",
      "attribs": {
        "name": "unset-style",
        "class": "unset-style"
      },
      "children": [],
      "text": "fntarget.style['[$name]'] = null;"
    },
    "set-attrib": {
      "tag": "function",
      "attribs": {
        "name": "set-attrib",
        "class": "set-attrib"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.setAttribute('[$name]', '[$value]');}else{fntarget.setAttribute('[$name]', [$_text]);}"
    },
    "unset-attrib": {
      "tag": "function",
      "attribs": {
        "name": "unset-attrib",
        "class": "unset-attrib"
      },
      "children": [],
      "text": "fntarget.removeAttribute('[$name]');"
    },
    "alert": {
      "tag": "function",
      "attribs": {
        "name": "alert",
        "class": "alert"
      },
      "children": [],
      "text": "if ('[$message||null]' != 'null') {alert('[$message]');}else{alert([$_text]);}"
    },
    "set-css-var": {
      "tag": "function",
      "attribs": {
        "name": "set-css-var",
        "class": "set-css-var"
      },
      "children": [],
      "text": "if ('[$value||null]' != 'null') {fntarget.style.setProperty('[$name]', '[$value]');}else{fntarget.style.setProperty('[$name]', [$_text]);}"
    },
    "unset-css-var": {
      "tag": "function",
      "attribs": {
        "name": "unset-css-var",
        "class": "unset-css-var"
      },
      "children": [],
      "text": "fntarget.style.removeProperty('[$name]');"
    },
    "save-value": {
      "tag": "function",
      "attribs": {
        "name": "save-value",
        "class": "save-value"
      },
      "children": [],
      "text": "var result = null;if ('[$value||null]' != 'null') {result = await wxfns.transaction(eventCurrentTarget, 'save-page-data', '[$value]');}else{result = await wxfns.transaction(eventCurrentTarget, 'save-page-data', [$_text]);}if (result && result.rc != 'success') {return;}eventCurrentTarget.result = result;"
    }
  },
  "view": {
    "v.input": {
      "tag": "view",
      "attribs": {
        "name": "v.input",
        "element": "div",
        "class": "v.input"
      },
      "children": [
        {
          "tag": "row",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "column",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "span",
                  "attribs": {
                    "class": "input_label",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "[$label]"
                }
              ],
              "text": null
            },
            {
              "tag": "column",
              "attribs": {
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "input",
                  "attribs": {
                    "name": "[$name]",
                    "type": "[$type]",
                    "placeholder": "[$placeholder]",
                    "class": "[$name]",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "span",
          "attribs": {
            "class": "input_error",
            "child-idx": 1
          },
          "children": [],
          "text": null
        }
      ],
      "text": null
    },
    "v.loginform": {
      "tag": "view",
      "attribs": {
        "name": "v.loginform",
        "class": "v.loginform"
      },
      "children": [
        {
          "tag": "h1",
          "attribs": {
            "class": "form_heading",
            "child-idx": 0
          },
          "children": [],
          "text": "[$heading||Login Form]"
        },
        {
          "tag": "div",
          "attribs": {
            "class": "form_body",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "row",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "span",
                      "attribs": {
                        "class": "input_label",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Email"
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "name": "email",
                        "type": "email",
                        "placeholder": "Email",
                        "class": "email",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "span",
              "attribs": {
                "class": "input_error email",
                "child-idx": 1
              },
              "children": [],
              "text": null
            },
            {
              "tag": "row",
              "attribs": {
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "span",
                      "attribs": {
                        "class": "input_label",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Password"
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "name": "password",
                        "type": "password",
                        "placeholder": "Password",
                        "class": "password",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "span",
              "attribs": {
                "class": "input_error password",
                "child-idx": 3
              },
              "children": [],
              "text": null
            },
            {
              "tag": "row",
              "attribs": {
                "child-idx": 4
              },
              "children": [
                {
                  "tag": "column",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "input",
                      "attribs": {
                        "type": "checkbox",
                        "name": "remember",
                        "value": "remember",
                        "class": "remember",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "column",
                  "attribs": {
                    "ratio": "4",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": "Remember Me"
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "div",
          "attribs": {
            "class": "form_error",
            "child-idx": 2
          },
          "children": [],
          "text": null
        },
        {
          "tag": "div",
          "attribs": {
            "style": "text-align: center",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "button",
              "attribs": {
                "child-idx": 0
              },
              "children": [],
              "text": "Login"
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.unauthorised": {
      "tag": "view",
      "attribs": {
        "name": "v.unauthorised",
        "class": "v.unauthorised"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "You are not authorised to view this page."
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.notfound": {
      "tag": "view",
      "attribs": {
        "name": "v.notfound",
        "class": "v.notfound"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Page not found."
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "v.error": {
      "tag": "view",
      "attribs": {
        "name": "v.error",
        "class": "v.error"
      },
      "children": [
        {
          "tag": "html",
          "attribs": {
            "child-idx": 0
          },
          "children": [
            {
              "tag": "body",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Error: [$error]"
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "object-list-toolbar": {
      "tag": "view",
      "attribs": {
        "name": "object-list-toolbar",
        "class": "object-list-toolbar"
      },
      "children": [
        {
          "tag": "toolbar",
          "attribs": {
            "name": "object-list-toolbar",
            "class": "object-list-toolbar",
            "object-type": "[@object-type]",
            "top": "[$toolbar-top||0]",
            "right": "[$toolbar-right||0]",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "icon",
              "attribs": {
                "name": "add",
                "class": "add",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "tooltip",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "add [@object-label]"
                },
                {
                  "tag": "click",
                  "attribs": {
                    "name": "_eventObjectAdd",
                    "class": "_eventObjectAdd",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "transaction",
                      "attribs": {
                        "name": "add-object",
                        "class": "add-object",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "reload",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    },
    "object-item-toolbar": {
      "tag": "view",
      "attribs": {
        "name": "object-item-toolbar",
        "class": "object-item-toolbar"
      },
      "children": [
        {
          "tag": "toolbar",
          "attribs": {
            "name": "object-item-toolbar",
            "class": "object-item-toolbar",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "icon",
              "attribs": {
                "name": "remove",
                "object-type": "[@object-type]",
                "object-name": "[@object-name]",
                "class": "remove",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "tooltip",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "delete [@object-label]"
                },
                {
                  "tag": "click",
                  "attribs": {
                    "name": "_eventObjectDelete",
                    "class": "_eventObjectDelete",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "confirm",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "Do you want to delete object [@object-name]?"
                    },
                    {
                      "tag": "transaction",
                      "attribs": {
                        "name": "delete-object",
                        "target": "event-target",
                        "class": "delete-object",
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "reload",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "collections": {
    "default": {
      "tag": "collections",
      "attribs": {
        "name": "default",
        "class": "default"
      },
      "children": [
        {
          "tag": "collection",
          "attribs": {
            "name": "urls",
            "class": "urls",
            "child-idx": 0
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "url_index",
                "type": "unique",
                "class": "url_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "type_index",
                "class": "type_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "type"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "object_name_index",
                "class": "object_name_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "object-name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "object_data",
            "class": "object_data",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "name_index",
                "type": "unique",
                "class": "name_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "object_name_index",
                "class": "object_name_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "object-name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "type_index",
                "class": "type_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "type"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "urls_index",
                "class": "urls_index",
                "child-idx": 3
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "urls"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "created_index",
                "class": "created_index",
                "child-idx": 4
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "created"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "users",
            "class": "users",
            "child-idx": 2
          },
          "children": [
            {
              "tag": "struct",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "key",
                  "attribs": {
                    "type": "uuid",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "email",
                  "attribs": {
                    "type": "email",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "password",
                  "attribs": {
                    "child-idx": 2
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "name",
                  "attribs": {
                    "child-idx": 3
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "role",
                  "attribs": {
                    "default": "user",
                    "child-idx": 4
                  },
                  "children": [
                    {
                      "tag": "user",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "admin",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "email_index",
                "unique": "1",
                "class": "email_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "email"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "key_index",
                "unique": "1",
                "class": "key_index",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "key"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "collection",
          "attribs": {
            "name": "constants",
            "class": "constants",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "index",
              "attribs": {
                "name": "scope_index",
                "class": "scope_index",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "scope"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "index",
              "attribs": {
                "name": "name_index",
                "class": "name_index",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "field",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "name",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "name"
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [],
                      "text": "1"
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "db": {
    "wx_demo": {
      "tag": "db",
      "attribs": {
        "name": "wx_demo",
        "class": "wx_demo"
      },
      "children": [],
      "text": null
    }
  },
  "public": [
    {
      "tag": "public",
      "attribs": {},
      "children": [],
      "text": "asdf, asdf"
    }
  ],
  "object-config": {
    "blog-post": {
      "tag": "object-config",
      "attribs": {
        "name": "blog-post",
        "class": "blog-post"
      },
      "children": [
        {
          "tag": "label",
          "attribs": {
            "child-idx": 0
          },
          "children": [],
          "text": "Blog Post"
        },
        {
          "tag": "page",
          "attribs": {
            "name": "default",
            "max-width": "900px",
            "redirect": "/",
            "class": "default",
            "url": null,
            "type": "blog-post",
            "child-idx": 1
          },
          "children": [
            {
              "tag": "html",
              "attribs": {
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "head",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": null
                },
                {
                  "tag": "body",
                  "attribs": {
                    "xten": "body",
                    "class": "wx-xten-body",
                    "element": "body",
                    "id": "x-a892ec18-7e00-4ba2-bd90-4af04ec5b373-7242",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "configuration",
                      "attribs": {
                        "name": "page-configuration",
                        "class": "has-load wx-xten-configuration page-configuration",
                        "xten": "configuration",
                        "element": "div",
                        "id": "x-99393994-b30f-4089-b046-8bc5699bcd6f-3574",
                        "allow": "admin",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "row",
                          "attribs": {
                            "xten": "row",
                            "class": "wx-xten-row",
                            "element": "div",
                            "id": "x-1064ebc0-d327-46bf-8790-84be2a8fccb4-8855",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-80824942-4cd2-4b8c-ad24-def543bec32d-6182",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "config-name",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "page-configuration - [$url]"
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-2353668e-812d-4340-983c-08f6e5631968-3113",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "toolbar",
                                  "attribs": {
                                    "xten": "toolbar",
                                    "class": "wx-xten-toolbar",
                                    "element": "div",
                                    "id": "x-98a0dc46-9a5c-4270-a039-b5c2b2e08cde-2338",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "landscape",
                                        "background-color": "#dedede",
                                        "class": "tooltip-parent wx-xten-icon landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-1016dfaf-d80f-418b-b219-51c798d7e68d-1005",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-e355a6d7-3ee0-4200-9882-1eda169ca31e-6956",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "page background toolbar"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "save",
                                        "class": "tooltip-parent wx-xten-icon save",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-378cf725-2c8d-4909-a4b8-badadcc9aa77-5328",
                                        "onclick": "_backgroundSaveImage(event)",
                                        "child-idx": 1
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-60e93a21-be38-405a-9eca-da84d6bbaa03-2310",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "upload image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundSaveImage",
                                            "field-selector": "page-configuration.background-image",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-888f05fd-bb99-403a-8f53-7f3e35c511c9-2286",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + toolbarParent['uploaded-url'] + ')'"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": ".wx-xten-configuration",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "toolbarParent['uploaded-url']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "uploaded-url",
                                                "class": "uploaded-url",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M626 336 632 336 632 351 626 351Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M658 355 622 355 622 332 658 332 658 355ZM640 381C634.5 381 630 376.5 630 371 630 365.5 634.5 361 640 361 645.5 361 650 365.5 650 371 650 376.5 645.5 381 640 381ZM670 326 658 326 622 326 616 326 606 336 606 390C606 392.2 607.8 394 610 394L670 394C672.2 394 674 392.2 674 390L674 330C674 327.8 672.2 326 670 326Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M637 368 643 368 643 374 637 374Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "close",
                                        "class": "tooltip-parent wx-xten-icon close",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-1896de39-bbb1-432c-aff1-193e8b61e23a-7422",
                                        "onclick": "_backgroundCancelImage(event)",
                                        "child-idx": 2
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-b584c4bb-c2f9-410c-af76-8eed1ee7057a-8584",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "cancel"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundCancelImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-7f87658a-a4f8-49e1-9ebf-969dff223549-1870",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "changed-file",
                                                "class": "changed-file",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "remove-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M675.4 333.1 666.9 324.6 640 351.5 613.1 324.6 604.6 333.1 631.5 360 604.6 386.9 613.1 395.4 640 368.5 666.9 395.4 675.4 386.9 648.5 360Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "upload",
                                        "class": "tooltip-parent wx-xten-icon upload",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-b6745a54-b258-4c92-995b-1d49096ba454-2702",
                                        "onclick": "_backgroundUploadImage(event)",
                                        "child-idx": 3
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-ad7f60e8-716a-4998-86a7-e7f36fe3081d-9746",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "select image"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundUploadImage",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-a8a2c9b8-452d-4815-8909-3046e7cd854c-1682",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "selectfile",
                                              "attribs": {
                                                "file-type": "image/*",
                                                "file": "changed-file",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": "'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')'"
                                            },
                                            {
                                              "tag": "add-class",
                                              "attribs": {
                                                "classes": "background-changed",
                                                "parent": ".wx-xten-configuration",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1012 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1028.22 162.925C1025.16 161.801 1022.65 159.513 1021.26 156.556 1019.38 152.376 1019.87 147.514 1022.53 143.786 1025.24 140.107 1029.77 138.239 1034.29 138.936L1037.84 139.526 1037.84 135.656C1037.87 128.572 1042.69 122.405 1049.55 120.656 1056.44 118.996 1063.55 122.315 1066.71 128.656L1067.92 131.066 1070.43 130.176C1074.19 128.851 1078.35 129.433 1081.6 131.736 1084.83 134.101 1086.74 137.862 1086.75 141.866L1086.75 144.986 1090.83 144.986C1096.01 145.181 1100.06 149.539 1099.86 154.722 1099.68 159.669 1095.68 163.623 1090.73 163.756L1085.48 163.756 1072.52 163.734 1072.52 169.966 1080.17 169.986 1090.73 169.986C1099.37 169.782 1106.2 162.616 1106 153.98 1105.82 146.362 1100.17 139.982 1092.63 138.876 1091.83 133.986 1089.15 129.604 1085.15 126.676 1081.01 123.747 1075.85 122.661 1070.88 123.676 1065.99 116.132 1056.88 112.489 1048.14 114.586 1039.6 116.763 1033.21 123.865 1031.95 132.586 1026.29 132.758 1021.02 135.501 1017.64 140.036 1013.62 145.622 1012.89 152.928 1015.72 159.2 1018.6 165.383 1024.65 169.484 1031.46 169.88L1038.8 169.88 1046.52 169.901 1046.52 163.689 1033.52 163.666 1031.72 163.666C1030.58 163.594 1029.46 163.365 1028.39 162.986Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1067.52 181.986 1067.52 157.986 1080.02 157.986 1059.52 133.986 1039.02 157.986 1051.52 157.986 1051.52 181.986 1067.52 181.986Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "colors",
                                        "class": "tooltip-parent wx-xten-icon colors",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-405cda38-746e-4ab2-b1bb-e2439916ce36-6244",
                                        "onclick": "_backgroundColor(event)",
                                        "child-idx": 4
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-6c33aba1-e3e7-444b-8a59-93e6594573b5-3974",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "background color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundColor",
                                            "field-selector": "page-configuration.background-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-6d183423-9b34-4782-9dbc-617dfa63ac00-430",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('background-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "background-color",
                                                "type": "color",
                                                "value": "background-color",
                                                "title": "Background Color",
                                                "class": "background-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['background-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-1022 -101)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M1100 152C1097.2 152 1095 150.4 1095 148.5 1095 146.6 1097.2 145 1100 145 1102.8 145 1105 146.6 1105 148.5 1105 150.4 1102.8 152 1100 152ZM1095 163C1092.2 163 1090 161.4 1090 159.5 1090 157.6 1092.2 156 1095 156 1097.8 156 1100 157.6 1100 159.5 1100 161.4 1097.8 163 1095 163ZM1084 135C1081.2 135 1079 133.4 1079 131.5 1079 129.6 1081.2 128 1084 128 1086.8 128 1089 129.6 1089 131.5 1089 133.4 1086.8 135 1084 135ZM1084 169C1081.2 169 1079 167.4 1079 165.5 1079 163.6 1081.2 162 1084 162 1086.8 162 1089 163.6 1089 165.5 1089 167.4 1086.8 169 1084 169ZM1070 172C1067.2 172 1065 170.4 1065 168.5 1065 166.6 1067.2 165 1070 165 1072.8 165 1075 166.6 1075 168.5 1075 170.4 1072.8 172 1070 172ZM1064.6 131.6C1066.2 130 1068.3 129.7 1069.4 130.8 1070.5 131.9 1070.1 134 1068.6 135.6 1067 137.2 1064.9 137.5 1063.8 136.4 1062.6 135.3 1063 133.1 1064.6 131.6ZM1056 170C1053.2 170 1051 168.4 1051 166.5 1051 164.6 1053.2 163 1056 163 1058.8 163 1061 164.6 1061 166.5 1061 168.4 1058.8 170 1056 170ZM1095 135C1097.8 135 1100 136.6 1100 138.5 1100 140.4 1097.8 142 1095 142 1092.2 142 1090 140.4 1090 138.5 1090 136.6 1092.2 135 1095 135ZM1070 121C1047.3 121 1050.9 129.9 1053 132L1058 137C1061.2 140.3 1057.3 144 1053.6 142.4L1041.1 137C1032.3 133.2 1030 143.9 1030 149 1030 164.5 1047.9 177 1070 177 1092.1 177 1110 164.5 1110 149 1110 133.5 1092.1 121 1070 121Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "filter",
                                        "class": "tooltip-parent wx-xten-icon filter",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-386f00e2-7b5b-40a8-b384-8004b4b9e20a-7124",
                                        "onclick": "_backgroundFilterColor(event)",
                                        "child-idx": 5
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-bbda0bbb-d678-4e3b-9d8c-415cd6f68058-6649",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter color"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterColor",
                                            "field-selector": "page-configuration.page-filter-color",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-79b4b524-6fc5-4cb5-b134-0243221fa7d9-4765",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-color')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "type": "color",
                                                "value": "page-filter-color",
                                                "title": "Page Filter Color",
                                                "class": "page-filter-color",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-color']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -295)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M177 309 109 309 139 339 139 369 139 377 147 369 147 339Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "glasses",
                                        "class": "tooltip-parent wx-xten-icon glasses",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-38fd3ba3-f7aa-429e-a0d6-fbe0db33a4b6-9744",
                                        "onclick": "_backgroundFilterOpacity(event)",
                                        "child-idx": 6
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-1cc0f614-3633-4285-aaeb-3affcc5f6b10-1950",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "filter opacity"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_backgroundFilterOpacity",
                                            "field-selector": "page-configuration.page-filter-opacity",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-e6cd676c-1592-46be-8d1b-a77241fcdcd6-102",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "set-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "toolbarParent.getAttribute('page-filter-opacity')"
                                            },
                                            {
                                              "tag": "get-value",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "type": "number",
                                                "min": "0",
                                                "max": "1",
                                                "step": "0.01",
                                                "value": "page-filter-opacity",
                                                "title": "Page Background Filter Opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                                            },
                                            {
                                              "tag": "set-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "set-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": "toolbarParent['page-filter-opacity']"
                                            },
                                            {
                                              "tag": "unset-var",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -186)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M184 221.7C173.3 219.6 159.5 218.7 147 223.7 144.4 224.6 141.6 224.6 139 223.7 126.5 218.7 112.7 219.6 102 221.7 100.4 222 99 223.1 99 224.7 99 226.4 100.3 227.7 102 227.7 102 227.7 102.9 231.7 104.3 238.2 105.7 244.7 109.2 248 120 248 125.3 248 129.2 247.8 132 245 135.5 241.4 139.4 231.9 139.4 231.9 140.1 230.6 141.5 229.8 143 229.8 144.5 229.8 145.9 230.6 146.6 231.9 146.6 231.9 150.5 241.4 154 245 156.8 247.8 160.7 248 166 248 176.8 248 180.2 244.8 181.7 238.2 183.2 231.6 184 227.8 184 227.8 185.7 227.8 187 226.5 187 224.8 187 223 185.6 222 184 221.7Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    },
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "delete-landscape",
                                        "class": "tooltip-parent wx-xten-icon delete-landscape",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-5c43b0b6-1ba8-4f1f-8f35-6bd82f6284df-6529",
                                        "onclick": "_deletePageBackground(event)",
                                        "child-idx": 7
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-d9d54d37-ab42-4ec9-9bd8-8a9012eecae5-6848",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "delete landscape"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "fname": "_deletePageBackground",
                                            "xten": "click",
                                            "class": "wx-xten-click",
                                            "element": "_hidden",
                                            "id": "x-29a15037-e425-4398-a5f3-e9266c0102a6-8675",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "code",
                                              "attribs": {
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.transaction(element, 'delete-background', {name: element.getAttribute('name')});if (result.rc != 'success') {return;}"
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-image",
                                                "parent": "body",
                                                "class": "background-image",
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-image",
                                                "class": "background-image",
                                                "child-idx": 2
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-style",
                                              "attribs": {
                                                "name": "background-color",
                                                "parent": "body",
                                                "class": "background-color",
                                                "child-idx": 3
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "background-color",
                                                "class": "background-color",
                                                "child-idx": 4
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-color",
                                                "parent": "body",
                                                "class": "--page-filter-color",
                                                "child-idx": 5
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-color",
                                                "class": "page-filter-color",
                                                "child-idx": 6
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-css-var",
                                              "attribs": {
                                                "name": "--page-filter-opacity",
                                                "parent": "body",
                                                "class": "--page-filter-opacity",
                                                "child-idx": 7
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "unset-attrib",
                                              "attribs": {
                                                "name": "page-filter-opacity",
                                                "class": "page-filter-opacity",
                                                "child-idx": 8
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 2
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-95 -59)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M129 92.94C129 94.641 127.621 96.02 125.92 96.02 124.219 96.02 122.84 94.641 122.84 92.94 122.84 91.24 125.92 86.78 125.92 86.78 125.92 86.78 129 91.24 129 92.94Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M135.56 91.18C135.56 92.395 134.575 93.38 133.36 93.38 132.145 93.38 131.16 92.395 131.16 91.18 131.16 89.97 133.36 86.78 133.36 86.78 133.36 86.78 135.56 90 135.56 91.18Z",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M120.6 91.18C120.682 92.3923 119.766 93.4414 118.553 93.5232 117.341 93.6051 116.292 92.6887 116.21 91.4765 116.203 91.3778 116.203 91.2787 116.21 91.18 116.21 89.97 118.4 86.78 118.4 86.78 118.4 86.78 120.6 90 120.6 91.18Z",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M140.84 80.84C140.849 78.5425 138.993 76.6729 136.696 76.6641 136.463 76.6632 136.23 76.6819 136 76.72L136 76.66C135.997 73.7495 133.635 71.3923 130.725 71.395 130.166 71.3956 129.611 71.485 129.08 71.66 127.413 68.5555 123.546 67.3897 120.441 69.0563 118.411 70.1462 117.126 72.2461 117.08 74.55 114.221 73.9769 111.438 75.8301 110.865 78.6893 110.292 81.5485 112.145 84.331 115.005 84.9041 115.257 84.9547 115.513 84.9867 115.77 85L136.88 85C139.094 84.8833 140.833 83.0576 140.84 80.84Z",
                                                        "child-idx": 3
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M137.33 123C143.71 119.689 150.812 118.013 158 118.12L158.42 118.12C152.999 113.765 146.301 111.306 139.35 111.12 134.726 111.104 130.155 112.104 125.96 114.05 130.331 116.21 134.203 119.259 137.33 123Z",
                                                        "child-idx": 4
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M107.51 134C123.45 132.74 131.76 126.78 132.31 126.38 133.08 125.723 133.888 125.112 134.73 124.55 122.4 110.29 100 112 100 112L100 134.31Z",
                                                        "child-idx": 5
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M182.46 129.41C181.687 128.688 180.865 128.019 180 127.41L180 115.7C183.389 114.527 185.618 111.284 185.5 107.7 185.5 102.7 179.62 91.52 178 91.52 176.38 91.52 170.5 102.74 170.5 107.7 170.382 111.284 172.611 114.527 176 115.7L176 125.08C172.214 123.266 168.163 122.068 164 121.53L164 101.76C168.64 100.76 172.14 96.06 172.14 89.51 172.14 82.05 164.43 66 162 66 159.57 66 151.86 82.05 151.86 89.51 151.86 96.06 155.36 100.72 160 101.76L160 121.17C159.32 121.17 158.64 121.12 158 121.12 148.62 121.12 139.94 123.91 134.24 128.75 134.14 128.82 125.35 135.65 107.73 137.02L100 137 100 148 186 148 186 132.21Z",
                                                        "child-idx": 6
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                },
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "fill": "#ff4343",
                                                    "clip-path": "url(#clip0)",
                                                    "transform": "translate(-622 -90)",
                                                    "child-idx": 1
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M705.4 111.1 696.9 102.6 670 129.5 643.1 102.6 634.6 111.1 661.5 138 634.6 164.9 643.1 173.4 670 146.5 696.9 173.4 705.4 164.9 678.5 138Z",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-340757b8-6307-4d28-95a7-f41169d2cf11-4342",
                                "child-idx": 2
                              },
                              "children": [
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "class": "page-errors-notification",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "bug",
                                        "class": "tooltip-parent wx-xten-icon bug",
                                        "xten": "icon",
                                        "element": "div",
                                        "id": "x-bb06d28c-67bd-49be-a3a3-1e5216f03cca-632",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "xten": "tooltip",
                                            "class": "wx-xten-tooltip",
                                            "element": "div",
                                            "id": "x-db8325f4-8aae-4f54-a364-5e218bc82fe6-8501",
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "errors in page"
                                        },
                                        {
                                          "tag": "div",
                                          "attribs": {
                                            "name": "icon-code",
                                            "class": "icon-code",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "svg",
                                              "attribs": {
                                                "xmlns": "http://www.w3.org/2000/svg",
                                                "xlink": "http://www.w3.org/1999/xlink",
                                                "space": "preserve",
                                                "overflow": "hidden",
                                                "viewBox": "0 0 96 96",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "g",
                                                  "attribs": {
                                                    "transform": "translate(-592 -312)",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "path",
                                                      "attribs": {
                                                        "d": "M672.4 351.82C669.4 350.33 665.84 350.29 662.51 350.82 661.524 348.751 660.31 346.799 658.89 345 661.72 342.61 665.24 340.46 668.46 340.61 669.565 340.657 670.498 339.8 670.545 338.695 670.592 337.59 669.735 336.657 668.63 336.61L668.17 336.61C663.71 336.61 659.41 339.31 656.17 342.04 655.57 341.46 654.95 340.91 654.31 340.4 654.373 340.003 654.407 339.602 654.41 339.2 654.41 334.2 650.41 329.98 644.88 328.29 645.023 327.928 645.222 327.591 645.47 327.29 646.57 325.91 648.69 325.29 651.77 325.55 652.875 325.627 653.833 324.795 653.91 323.69 653.987 322.585 653.155 321.627 652.05 321.55 647.57 321.24 644.3 322.33 642.33 324.81 641.677 325.639 641.191 326.586 640.9 327.6 640.46 327.6 640.01 327.55 639.56 327.55 638.794 327.554 638.03 327.604 637.27 327.7 636.982 326.649 636.485 325.666 635.81 324.81 633.81 322.33 630.57 321.23 626.09 321.55 624.985 321.63 624.155 322.59 624.235 323.695 624.315 324.8 625.275 325.63 626.38 325.55 629.44 325.32 631.57 325.91 632.67 327.29 632.982 327.69 633.216 328.144 633.36 328.63 628.26 330.48 624.71 334.53 624.71 339.25 624.714 339.824 624.775 340.397 624.89 340.96 624.31 341.46 623.75 341.96 623.2 342.54 619.85 339.64 615.2 336.66 610.48 336.87 609.375 336.917 608.518 337.85 608.565 338.955 608.612 340.06 609.545 340.917 610.65 340.87 613.98 340.73 617.65 343.07 620.57 345.58 619.256 347.332 618.127 349.216 617.2 351.2 613.71 350.55 609.89 350.5 606.72 352.08 605.716 352.541 605.276 353.729 605.737 354.732 606.198 355.736 607.386 356.176 608.39 355.715 608.427 355.698 608.464 355.679 608.5 355.66 610.788 354.715 613.309 354.485 615.73 355 614.564 358.635 613.98 362.432 614 366.25 613.973 371.802 615.251 377.283 617.73 382.25 614.9 384.25 612.29 386.84 611.2 390.1 610.844 391.149 611.406 392.289 612.455 392.645 613.504 393.001 614.644 392.439 615 391.39 615.72 389.21 617.59 387.31 619.77 385.74 624.48 392.79 631.77 397.3 640 397.3 648.23 397.3 655.26 392.89 660 386 661.867 387.294 663.317 389.104 664.17 391.21 664.526 392.268 665.672 392.836 666.73 392.48 667.788 392.124 668.356 390.978 668 389.92 666.822 386.914 664.762 384.334 662.09 382.52 664.675 377.487 666.016 371.908 666 366.25 666.008 362.31 665.373 358.395 664.12 354.66 666.326 354.268 668.598 354.525 670.66 355.4 671.646 355.892 672.844 355.494 673.34 354.51 673.827 353.519 673.418 352.32 672.427 351.833 672.418 351.829 672.409 351.824 672.4 351.82ZM622.85 369.9C620.85 369.9 619.25 367.9 619.25 365.4 619.25 362.9 620.86 360.9 622.85 360.9 624.84 360.9 626.45 362.9 626.45 365.4 626.45 367.9 624.84 369.9 622.85 369.9ZM631.66 382.9C630.06 384.08 628.05 384.07 627.16 382.9 626.27 381.73 626.85 379.77 628.44 378.59 630.03 377.41 632.05 377.42 632.94 378.59 633.83 379.76 633.26 381.69 631.66 382.87ZM631 355C629.067 355 627.5 353.433 627.5 351.5 627.5 349.567 629.067 348 631 348 632.933 348 634.5 349.567 634.5 351.5 634.5 353.433 632.933 355 631 355ZM642 393.18C640.668 393.26 639.332 393.26 638 393.18L638 341 642 341ZM646.3 351.5C646.3 349.567 647.867 348 649.8 348 651.733 348 653.3 349.567 653.3 351.5 653.3 353.433 651.733 355 649.8 355 647.867 355.028 646.278 353.483 646.25 351.55 646.25 351.534 646.25 351.517 646.25 351.5ZM653.59 382.84C652.71 384.04 650.69 384.05 649.09 382.84 647.49 381.63 646.92 379.72 647.81 378.53 648.7 377.34 650.71 377.32 652.31 378.53 653.91 379.74 654.43 381.65 653.54 382.84ZM657.85 369.9C655.85 369.9 654.25 367.9 654.25 365.4 654.25 362.9 655.86 360.9 657.85 360.9 659.84 360.9 661.45 362.9 661.45 365.4 661.45 367.9 659.84 369.9 657.85 369.9Z",
                                                        "fill": "#C00000",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "column",
                              "attribs": {
                                "xten": "column",
                                "class": "wx-xten-column",
                                "element": "div",
                                "id": "x-48ef459f-029b-4a9e-891e-857a9f3febbc-6307",
                                "child-idx": 3
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "page-container",
                      "attribs": {
                        "max-width": "900px",
                        "xten": "page-container",
                        "class": "wx-xten-page-container",
                        "element": "div",
                        "id": "x-d2b8d5b0-fbf7-4c01-ad51-bebca40438f1-8933",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "layers",
                          "attribs": {
                            "name": "page-layers",
                            "xten": "layers",
                            "class": "wx-xten-layers",
                            "element": "div",
                            "id": "x-3f2bf779-4479-49fe-a310-3502334799b8-9707",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "layer",
                              "attribs": {
                                "index": -1,
                                "xten": "layer",
                                "class": "wx-xten-layer",
                                "element": "div",
                                "id": "x-8393dc7b-4f37-4ad3-9e7b-ed033a0d924e-192",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "background-filter",
                                  "attribs": {
                                    "xten": "background-filter",
                                    "class": "wx-xten-background-filter",
                                    "element": "div",
                                    "id": "x-c47829c7-f84c-4e69-931d-8e2a3b2cc040-4903",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            },
                            {
                              "tag": "page-content",
                              "attribs": {
                                "xten": "page-content",
                                "class": "wx-xten-page-content",
                                "element": "div",
                                "id": "x-917eeec1-4ce6-4f4a-885d-c1a29920ea1f-4109",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "font",
                                  "attribs": {
                                    "name": "Roboto",
                                    "weight": "400",
                                    "class": "wx-xten-font Roboto",
                                    "xten": "font",
                                    "element": "_hidden",
                                    "id": "x-6a85b9a5-8c52-4d0a-8d33-075d4fc9243a-1232",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "header",
                                  "attribs": {
                                    "cssvar-local-font-family": "font-family",
                                    "style": "font-family:Roboto;",
                                    "child-idx": 1
                                  },
                                  "children": [
                                    {
                                      "tag": "row",
                                      "attribs": {
                                        "xten": "row",
                                        "class": "wx-xten-row",
                                        "element": "div",
                                        "id": "x-00cf8428-c9be-42ff-9dbc-186ac7f6ab33-8715",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "column",
                                          "attribs": {
                                            "xten": "column",
                                            "class": "wx-xten-column",
                                            "element": "div",
                                            "id": "x-7c8d9d52-06a0-4a01-a118-935099697c14-3668",
                                            "child-idx": 0
                                          },
                                          "children": [
                                            {
                                              "tag": "fitwidth",
                                              "attribs": {
                                                "xten": "fitwidth",
                                                "class": "wx-xten-fitwidth",
                                                "element": "div",
                                                "id": "x-a756460c-ff39-4015-8260-f14578676191-1252",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "image",
                                                  "attribs": {
                                                    "name": "site-logo",
                                                    "object-name": "all",
                                                    "alt": "Site Logo",
                                                    "class": "has-load wx-xten-image site-logo",
                                                    "xten": "image",
                                                    "element": "div",
                                                    "id": "x-8228a7ec-577e-4ccd-8b4c-374b3b13d15d-7076",
                                                    "allow": "owner, admin",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "img",
                                                      "attribs": {
                                                        "src": "[$src||images/blank.jpg]",
                                                        "alt": "[$alt||$name]",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": null
                                                    },
                                                    {
                                                      "tag": "toolbar",
                                                      "attribs": {
                                                        "top": "[$toolbar-top||0]",
                                                        "left": "[$toolbar-left||0]",
                                                        "right": "[$toolbar-right||auto]",
                                                        "bottom": "[$toolbar-bottom||auto]",
                                                        "xten": "toolbar",
                                                        "class": "wx-xten-toolbar",
                                                        "element": "div",
                                                        "id": "x-a87ee716-e5da-4c73-a356-b74533421468-8144",
                                                        "child-idx": 1
                                                      },
                                                      "children": [
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "save",
                                                            "class": "tooltip-parent wx-xten-icon save",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-48f1366d-5270-4ea1-9a15-7f16b825ab7b-6465",
                                                            "onclick": "_imageSaveImage(event)",
                                                            "child-idx": 0
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-d5b78215-468a-4ee0-9016-001c081a89d6-2672",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "upload image"
                                                            },
                                                            {
                                                              "tag": "click",
                                                              "attribs": {
                                                                "fname": "_imageSaveImage",
                                                                "xten": "click",
                                                                "class": "wx-xten-click",
                                                                "element": "_hidden",
                                                                "id": "x-4624ebc0-f281-44c6-8cd7-899394227060-6062",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "upload",
                                                                  "attribs": {
                                                                    "name": "save-image",
                                                                    "file": "changed-file",
                                                                    "file-url": "uploaded-url",
                                                                    "class": "save-image",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent['uploaded-url']"
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "class": "src",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent['uploaded-url']"
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "uploaded-url",
                                                                    "class": "uploaded-url",
                                                                    "child-idx": 3
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "changed-file",
                                                                    "class": "changed-file",
                                                                    "child-idx": 4
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "remove-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 5
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-592 -312)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M626 336 632 336 632 351 626 351Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M658 355 622 355 622 332 658 332 658 355ZM640 381C634.5 381 630 376.5 630 371 630 365.5 634.5 361 640 361 645.5 361 650 365.5 650 371 650 376.5 645.5 381 640 381ZM670 326 658 326 622 326 616 326 606 336 606 390C606 392.2 607.8 394 610 394L670 394C672.2 394 674 392.2 674 390L674 330C674 327.8 672.2 326 670 326Z",
                                                                            "child-idx": 1
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M637 368 643 368 643 374 637 374Z",
                                                                            "child-idx": 2
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "close",
                                                            "class": "tooltip-parent wx-xten-icon close",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-c450fd7c-e5fe-40b0-9f41-fd084ef802b5-972",
                                                            "onclick": "_imageCancelImageSave(event)",
                                                            "child-idx": 1
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-84d5e10e-737a-448e-8b25-4cbb5cde70bc-1950",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "cancel"
                                                            },
                                                            {
                                                              "tag": "click",
                                                              "attribs": {
                                                                "fname": "_imageCancelImageSave",
                                                                "xten": "click",
                                                                "class": "wx-xten-click",
                                                                "element": "_hidden",
                                                                "id": "x-362ed841-414b-4ed0-975f-57b32ca0f7e5-4388",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": "toolbarParent.getAttribute('src')"
                                                                },
                                                                {
                                                                  "tag": "unset-var",
                                                                  "attribs": {
                                                                    "name": "changed-file",
                                                                    "class": "changed-file",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "remove-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-592 -312)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M675.4 333.1 666.9 324.6 640 351.5 613.1 324.6 604.6 333.1 631.5 360 604.6 386.9 613.1 395.4 640 368.5 666.9 395.4 675.4 386.9 648.5 360Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "icon",
                                                          "attribs": {
                                                            "name": "upload",
                                                            "class": "tooltip-parent wx-xten-icon upload",
                                                            "xten": "icon",
                                                            "element": "div",
                                                            "id": "x-6ebe0fd0-e534-498f-ad59-f00906c0698d-2733",
                                                            "onclick": "_imageUploadImage(event)",
                                                            "child-idx": 2
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "tooltip",
                                                              "attribs": {
                                                                "xten": "tooltip",
                                                                "class": "wx-xten-tooltip",
                                                                "element": "div",
                                                                "id": "x-63a7d4b1-4d59-4ab8-9d46-097c53130910-7991",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "select image"
                                                            },
                                                            {
                                                              "tag": "event",
                                                              "attribs": {
                                                                "name": "click",
                                                                "fname": "_imageUploadImage",
                                                                "class": "wx-xten-event click",
                                                                "xten": "event",
                                                                "element": "_hidden",
                                                                "id": "x-1a7034bc-ed1e-4826-ad13-a3159c9c6921-2570",
                                                                "child-idx": 1
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "selectfile",
                                                                  "attribs": {
                                                                    "file-type": "image/*",
                                                                    "file": "changed-file",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                },
                                                                {
                                                                  "tag": "set-attrib",
                                                                  "attribs": {
                                                                    "name": "src",
                                                                    "child": "img",
                                                                    "class": "src",
                                                                    "child-idx": 1
                                                                  },
                                                                  "children": [],
                                                                  "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                                                                },
                                                                {
                                                                  "tag": "add-class",
                                                                  "attribs": {
                                                                    "classes": "image-changed",
                                                                    "child-idx": 2
                                                                  },
                                                                  "children": [],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            },
                                                            {
                                                              "tag": "div",
                                                              "attribs": {
                                                                "name": "icon-code",
                                                                "class": "icon-code",
                                                                "child-idx": 2
                                                              },
                                                              "children": [
                                                                {
                                                                  "tag": "svg",
                                                                  "attribs": {
                                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                                    "xlink": "http://www.w3.org/1999/xlink",
                                                                    "space": "preserve",
                                                                    "overflow": "hidden",
                                                                    "viewBox": "0 0 96 96",
                                                                    "child-idx": 0
                                                                  },
                                                                  "children": [
                                                                    {
                                                                      "tag": "g",
                                                                      "attribs": {
                                                                        "transform": "translate(-1012 -101)",
                                                                        "child-idx": 0
                                                                      },
                                                                      "children": [
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M1028.22 162.925C1025.16 161.801 1022.65 159.513 1021.26 156.556 1019.38 152.376 1019.87 147.514 1022.53 143.786 1025.24 140.107 1029.77 138.239 1034.29 138.936L1037.84 139.526 1037.84 135.656C1037.87 128.572 1042.69 122.405 1049.55 120.656 1056.44 118.996 1063.55 122.315 1066.71 128.656L1067.92 131.066 1070.43 130.176C1074.19 128.851 1078.35 129.433 1081.6 131.736 1084.83 134.101 1086.74 137.862 1086.75 141.866L1086.75 144.986 1090.83 144.986C1096.01 145.181 1100.06 149.539 1099.86 154.722 1099.68 159.669 1095.68 163.623 1090.73 163.756L1085.48 163.756 1072.52 163.734 1072.52 169.966 1080.17 169.986 1090.73 169.986C1099.37 169.782 1106.2 162.616 1106 153.98 1105.82 146.362 1100.17 139.982 1092.63 138.876 1091.83 133.986 1089.15 129.604 1085.15 126.676 1081.01 123.747 1075.85 122.661 1070.88 123.676 1065.99 116.132 1056.88 112.489 1048.14 114.586 1039.6 116.763 1033.21 123.865 1031.95 132.586 1026.29 132.758 1021.02 135.501 1017.64 140.036 1013.62 145.622 1012.89 152.928 1015.72 159.2 1018.6 165.383 1024.65 169.484 1031.46 169.88L1038.8 169.88 1046.52 169.901 1046.52 163.689 1033.52 163.666 1031.72 163.666C1030.58 163.594 1029.46 163.365 1028.39 162.986Z",
                                                                            "child-idx": 0
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        },
                                                                        {
                                                                          "tag": "path",
                                                                          "attribs": {
                                                                            "d": "M1067.52 181.986 1067.52 157.986 1080.02 157.986 1059.52 133.986 1039.02 157.986 1051.52 157.986 1051.52 181.986 1067.52 181.986Z",
                                                                            "child-idx": 1
                                                                          },
                                                                          "children": [],
                                                                          "text": null
                                                                        }
                                                                      ],
                                                                      "text": null
                                                                    }
                                                                  ],
                                                                  "text": null
                                                                }
                                                              ],
                                                              "text": null
                                                            }
                                                          ],
                                                          "text": null
                                                        }
                                                      ],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        },
                                        {
                                          "tag": "column",
                                          "attribs": {
                                            "ratio": "8",
                                            "xten": "column",
                                            "class": "wx-xten-column",
                                            "element": "div",
                                            "id": "x-c701c3c3-5685-4e08-8d84-6e1c73bfd310-6152",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "align",
                                              "attribs": {
                                                "horizontal": "flex-end",
                                                "xten": "align",
                                                "class": "wx-xten-align",
                                                "element": "div",
                                                "id": "x-7b91f4c3-e036-4501-896d-8eb8746a8902-1131",
                                                "child-idx": 0
                                              },
                                              "children": [
                                                {
                                                  "tag": "navbar",
                                                  "attribs": {
                                                    "transform": "uppercase",
                                                    "item-gap": "15px",
                                                    "navitem-hover-style": "color: blue",
                                                    "cssvar-local-margin": "margin",
                                                    "style": "margin:0.5rem;",
                                                    "xten": "navbar",
                                                    "class": "navclass-[$orientation||row] wx-xten-navbar",
                                                    "element": "div",
                                                    "id": "x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889",
                                                    "child-idx": 0
                                                  },
                                                  "children": [
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "/",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-24c15f49-99c5-4612-b87a-e61d4c2e38c4-7979",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 0
                                                      },
                                                      "children": [],
                                                      "text": "Home"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "blog",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-f5190257-9976-47f4-b139-756be8047002-832",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 1
                                                      },
                                                      "children": [],
                                                      "text": "Blog"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "href": "contact",
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-92c70cb1-9375-42fa-b35b-3c4280ddd9f6-5437",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 2
                                                      },
                                                      "children": [],
                                                      "text": "Contact"
                                                    },
                                                    {
                                                      "tag": "navitem",
                                                      "attribs": {
                                                        "xten": "navitem",
                                                        "class": "wx-xten-navitem",
                                                        "element": "span",
                                                        "id": "x-77a56935-a335-451a-9f0e-9ea45ea13ed0-9067",
                                                        "onclick": "events_navitem_onclick(event)",
                                                        "child-idx": 3
                                                      },
                                                      "children": [
                                                        {
                                                          "tag": "show",
                                                          "attribs": {
                                                            "role": "public",
                                                            "xten": "show",
                                                            "class": "wx-xten-show",
                                                            "element": "div",
                                                            "id": "x-43ccb386-6749-4506-85f3-0a01794df71d-4856",
                                                            "child-idx": 0
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "a",
                                                              "attribs": {
                                                                "href": "login",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "Login"
                                                            }
                                                          ],
                                                          "text": null
                                                        },
                                                        {
                                                          "tag": "show",
                                                          "attribs": {
                                                            "role": "logged_in",
                                                            "xten": "show",
                                                            "class": "wx-xten-show",
                                                            "element": "div",
                                                            "id": "x-bc57ad07-1724-47c4-b3d4-9204ec66847e-8730",
                                                            "child-idx": 1
                                                          },
                                                          "children": [
                                                            {
                                                              "tag": "logout",
                                                              "attribs": {
                                                                "xten": "logout",
                                                                "class": "wx-xten-logout",
                                                                "element": "span",
                                                                "id": "x-b3c73513-a718-4afd-b85a-e11e5895b1bb-4319",
                                                                "onclick": "events_logout_onclick(event)",
                                                                "child-idx": 0
                                                              },
                                                              "children": [],
                                                              "text": "Logout"
                                                            }
                                                          ],
                                                          "text": null
                                                        }
                                                      ],
                                                      "text": null
                                                    }
                                                  ],
                                                  "text": null
                                                }
                                              ],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                },
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": "some information to show before the object on this page"
                                },
                                {
                                  "tag": "gap",
                                  "attribs": {
                                    "height": "20px",
                                    "xten": "gap",
                                    "class": "wx-xten-gap",
                                    "element": "div",
                                    "id": "x-42c4bf57-4dcb-4350-a644-d172f075c324-4008",
                                    "child-idx": 3
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "object",
                                  "attribs": {
                                    "object-name": "[@object-name]",
                                    "xten": "object",
                                    "class": "has-load wx-xten-object",
                                    "element": "div",
                                    "id": "x-70871a66-5c29-4fcb-8bb7-9c190c68fa34-9673",
                                    "tag": "attribs",
                                    "allow": "owner, admin",
                                    "node": {
                                      "tag": "attribs",
                                      "attribs": {
                                        "allow": "owner, admin"
                                      },
                                      "children": [],
                                      "text": null
                                    },
                                    "child-idx": 4
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "gap",
                                  "attribs": {
                                    "height": "20px",
                                    "xten": "gap",
                                    "class": "wx-xten-gap",
                                    "element": "div",
                                    "id": "x-494e9c1c-dca8-425a-9359-d1e75cdd6f53-2899",
                                    "child-idx": 5
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "div",
                                  "attribs": {
                                    "child-idx": 6
                                  },
                                  "children": [],
                                  "text": "some information to show after the object on this page"
                                },
                                {
                                  "tag": "footer",
                                  "attribs": {
                                    "child-idx": 7
                                  },
                                  "children": [
                                    {
                                      "tag": "align",
                                      "attribs": {
                                        "xten": "align",
                                        "class": "wx-xten-align",
                                        "element": "div",
                                        "id": "x-2b2e0886-700a-4e30-8575-20aba1a9c709-9899",
                                        "child-idx": 0
                                      },
                                      "children": [],
                                      "text": "footer"
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "object-view",
          "attribs": {
            "name": "default",
            "class": "default",
            "child-idx": 2
          },
          "children": [
            {
              "tag": "image",
              "attribs": {
                "name": "blog-image",
                "aspect-ratio": ".75",
                "object-name": "[@object-name]",
                "class": "blog-image",
                "child-idx": 0
              },
              "children": [],
              "text": null
            },
            {
              "tag": "gap",
              "attribs": {
                "height": "20px",
                "child-idx": 1
              },
              "children": [],
              "text": null
            },
            {
              "tag": "textalign",
              "attribs": {
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "inline",
                  "attribs": {
                    "name": "blog-title",
                    "element": "div",
                    "object-name": "[@object-name]",
                    "class": "blog-title",
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Add Post Title"
                }
              ],
              "text": null
            },
            {
              "tag": "gap",
              "attribs": {
                "height": "20px",
                "child-idx": 3
              },
              "children": [],
              "text": null
            },
            {
              "tag": "textedit",
              "attribs": {
                "name": "blog-desc",
                "element": "div",
                "object-name": "[@object-name]",
                "class": "blog-desc",
                "child-idx": 4
              },
              "children": [],
              "text": "Add post description"
            },
            {
              "tag": "toolbar",
              "attribs": {
                "name": "object-list-toolbar",
                "class": "object-list-toolbar",
                "object-type": "[@object-type]",
                "top": "[$toolbar-top||0]",
                "right": "[$toolbar-right||0]",
                "child-idx": 5
              },
              "children": [
                {
                  "tag": "icon",
                  "attribs": {
                    "name": "add",
                    "class": "add",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "tooltip",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": "add [@object-label]"
                    },
                    {
                      "tag": "click",
                      "attribs": {
                        "name": "_eventObjectAdd",
                        "class": "_eventObjectAdd",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "transaction",
                          "attribs": {
                            "name": "add-object",
                            "class": "add-object",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": null
                        },
                        {
                          "tag": "reload",
                          "attribs": {
                            "child-idx": 1
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "default",
            "class": "default",
            "child-idx": 3
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "Blog Post List"
                },
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "list-items",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 2
                  },
                  "children": [],
                  "text": "my footer"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 3
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "paginator",
                  "attribs": {
                    "object-type": "blog-post",
                    "pagesize": "[$pagesize]",
                    "list-style": "padding: 10px;",
                    "child-idx": 4
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "name": "list-item",
                    "class": "list-item",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "image",
                      "attribs": {
                        "name": "blog-image",
                        "aspect-ratio": ".75",
                        "object-name": "[@object-name]",
                        "src": "[@blog-image]",
                        "class": "blog-image",
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 1
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "textalign",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [
                        {
                          "tag": "inline",
                          "attribs": {
                            "name": "blog-title",
                            "object-name": "[@object-name]",
                            "class": "blog-title",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "[@blog-title||Blog Title]"
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 3
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "value",
                      "attribs": {
                        "name": "blog-description",
                        "summary": "40",
                        "readonly": "true",
                        "element": "div",
                        "object-name": "[@object-name]",
                        "class": "blog-description",
                        "child-idx": 4
                      },
                      "children": [],
                      "text": "[@blog-description||Blog description]"
                    },
                    {
                      "tag": "gap",
                      "attribs": {
                        "height": "10px",
                        "child-idx": 5
                      },
                      "children": [],
                      "text": null
                    },
                    {
                      "tag": "a",
                      "attribs": {
                        "class": "continue-link",
                        "href": "[@url-default]",
                        "child-idx": 6
                      },
                      "children": [
                        {
                          "tag": "span",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "Continue Reading..."
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "toolbar",
                      "attribs": {
                        "name": "object-item-toolbar",
                        "class": "object-item-toolbar",
                        "child-idx": 7
                      },
                      "children": [
                        {
                          "tag": "icon",
                          "attribs": {
                            "name": "remove",
                            "object-type": "[@object-type]",
                            "object-name": "[@object-name]",
                            "class": "remove",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "tooltip",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "delete [@object-label]"
                            },
                            {
                              "tag": "click",
                              "attribs": {
                                "name": "_eventObjectDelete",
                                "class": "_eventObjectDelete",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "confirm",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "Do you want to delete object [@object-name]?"
                                },
                                {
                                  "tag": "transaction",
                                  "attribs": {
                                    "name": "delete-object",
                                    "target": "event-target",
                                    "class": "delete-object",
                                    "child-idx": 1
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "reload",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "list is empty"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "table",
            "class": "table",
            "child-idx": 4
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "table",
                  "attribs": {
                    "width": "100%",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "thead",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tr",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "image"
                            },
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": "title"
                            },
                            {
                              "tag": "th",
                              "attribs": {
                                "child-idx": 2
                              },
                              "children": [
                                {
                                  "tag": "toolbar",
                                  "attribs": {
                                    "name": "object-list-toolbar",
                                    "class": "object-list-toolbar",
                                    "object-type": "[@object-type]",
                                    "top": "[$toolbar-top||0]",
                                    "right": "[$toolbar-right||0]",
                                    "child-idx": 0
                                  },
                                  "children": [
                                    {
                                      "tag": "icon",
                                      "attribs": {
                                        "name": "add",
                                        "class": "add",
                                        "child-idx": 0
                                      },
                                      "children": [
                                        {
                                          "tag": "tooltip",
                                          "attribs": {
                                            "child-idx": 0
                                          },
                                          "children": [],
                                          "text": "add [@object-label]"
                                        },
                                        {
                                          "tag": "click",
                                          "attribs": {
                                            "name": "_eventObjectAdd",
                                            "class": "_eventObjectAdd",
                                            "child-idx": 1
                                          },
                                          "children": [
                                            {
                                              "tag": "transaction",
                                              "attribs": {
                                                "name": "add-object",
                                                "class": "add-object",
                                                "child-idx": 0
                                              },
                                              "children": [],
                                              "text": null
                                            },
                                            {
                                              "tag": "reload",
                                              "attribs": {
                                                "child-idx": 1
                                              },
                                              "children": [],
                                              "text": null
                                            }
                                          ],
                                          "text": null
                                        }
                                      ],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "tbody",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "list-items",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "paginator",
                  "attribs": {
                    "object-type": "blog-post",
                    "pagesize": "[$pagesize]",
                    "child-idx": 1
                  },
                  "children": [],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "tr",
                  "attribs": {
                    "template": "list-item",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "td",
                      "attribs": {
                        "style": "width: 150px",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "image",
                          "attribs": {
                            "name": "blog-image",
                            "object-name": "[@object-name]",
                            "aspect-ratio": "0.75",
                            "class": "blog-image",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "td",
                      "attribs": {
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "value",
                          "attribs": {
                            "name": "blog-title",
                            "object-name": "[@object-name]",
                            "class": "blog-title",
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "blog title"
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "td",
                      "attribs": {
                        "child-idx": 2
                      },
                      "children": [
                        {
                          "tag": "toolbar",
                          "attribs": {
                            "name": "object-item-toolbar",
                            "class": "object-item-toolbar",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "icon",
                              "attribs": {
                                "name": "remove",
                                "object-type": "[@object-type]",
                                "object-name": "[@object-name]",
                                "class": "remove",
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "tooltip",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "delete [@object-label]"
                                },
                                {
                                  "tag": "click",
                                  "attribs": {
                                    "name": "_eventObjectDelete",
                                    "class": "_eventObjectDelete",
                                    "child-idx": 1
                                  },
                                  "children": [
                                    {
                                      "tag": "confirm",
                                      "attribs": {
                                        "child-idx": 0
                                      },
                                      "children": [],
                                      "text": "Do you want to delete object [@object-name]?"
                                    },
                                    {
                                      "tag": "transaction",
                                      "attribs": {
                                        "name": "delete-object",
                                        "target": "event-target",
                                        "class": "delete-object",
                                        "child-idx": 1
                                      },
                                      "children": [],
                                      "text": null
                                    },
                                    {
                                      "tag": "reload",
                                      "attribs": {
                                        "child-idx": 2
                                      },
                                      "children": [],
                                      "text": null
                                    }
                                  ],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "no items in the list"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        },
        {
          "tag": "list-view",
          "attribs": {
            "name": "list",
            "class": "list",
            "child-idx": 5
          },
          "children": [
            {
              "tag": "data-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 0
              },
              "children": [
                {
                  "tag": "ul",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "list-items",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [],
                      "text": null
                    }
                  ],
                  "text": null
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "list-item-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 1
              },
              "children": [
                {
                  "tag": "li",
                  "attribs": {
                    "object-name": "[@object-name]",
                    "child-idx": 0
                  },
                  "children": [
                    {
                      "tag": "row",
                      "attribs": {
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "column",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "fitwidth",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [
                                {
                                  "tag": "image",
                                  "attribs": {
                                    "name": "blog-image",
                                    "object-name": "[@object-name]",
                                    "aspect-ratio": "0.75",
                                    "class": "blog-image",
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        },
                        {
                          "tag": "column",
                          "attribs": {
                            "ratio": "5",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "value",
                              "attribs": {
                                "name": "blog-title",
                                "object-name": "[@object-name]",
                                "class": "blog-title",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    },
                    {
                      "tag": "toolbar",
                      "attribs": {
                        "name": "object-item-toolbar",
                        "class": "object-item-toolbar",
                        "child-idx": 1
                      },
                      "children": [
                        {
                          "tag": "icon",
                          "attribs": {
                            "name": "remove",
                            "object-type": "[@object-type]",
                            "object-name": "[@object-name]",
                            "class": "remove",
                            "child-idx": 0
                          },
                          "children": [
                            {
                              "tag": "tooltip",
                              "attribs": {
                                "child-idx": 0
                              },
                              "children": [],
                              "text": "delete [@object-label]"
                            },
                            {
                              "tag": "click",
                              "attribs": {
                                "name": "_eventObjectDelete",
                                "class": "_eventObjectDelete",
                                "child-idx": 1
                              },
                              "children": [
                                {
                                  "tag": "confirm",
                                  "attribs": {
                                    "child-idx": 0
                                  },
                                  "children": [],
                                  "text": "Do you want to delete object [@object-name]?"
                                },
                                {
                                  "tag": "transaction",
                                  "attribs": {
                                    "name": "delete-object",
                                    "target": "event-target",
                                    "class": "delete-object",
                                    "child-idx": 1
                                  },
                                  "children": [],
                                  "text": null
                                },
                                {
                                  "tag": "reload",
                                  "attribs": {
                                    "child-idx": 2
                                  },
                                  "children": [],
                                  "text": null
                                }
                              ],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            },
            {
              "tag": "empty-view",
              "attribs": {
                "name": "default",
                "class": "default",
                "child-idx": 2
              },
              "children": [
                {
                  "tag": "div",
                  "attribs": {
                    "child-idx": 0
                  },
                  "children": [],
                  "text": "list view is empty"
                },
                {
                  "tag": "toolbar",
                  "attribs": {
                    "name": "object-list-toolbar",
                    "class": "object-list-toolbar",
                    "object-type": "[@object-type]",
                    "top": "[$toolbar-top||0]",
                    "right": "[$toolbar-right||0]",
                    "child-idx": 1
                  },
                  "children": [
                    {
                      "tag": "icon",
                      "attribs": {
                        "name": "add",
                        "class": "add",
                        "child-idx": 0
                      },
                      "children": [
                        {
                          "tag": "tooltip",
                          "attribs": {
                            "child-idx": 0
                          },
                          "children": [],
                          "text": "add [@object-label]"
                        },
                        {
                          "tag": "click",
                          "attribs": {
                            "name": "_eventObjectAdd",
                            "class": "_eventObjectAdd",
                            "child-idx": 1
                          },
                          "children": [
                            {
                              "tag": "transaction",
                              "attribs": {
                                "name": "add-object",
                                "class": "add-object",
                                "child-idx": 0
                              },
                              "children": [],
                              "text": null
                            },
                            {
                              "tag": "reload",
                              "attribs": {
                                "child-idx": 1
                              },
                              "children": [],
                              "text": null
                            }
                          ],
                          "text": null
                        }
                      ],
                      "text": null
                    }
                  ],
                  "text": null
                }
              ],
              "text": null
            }
          ],
          "text": null
        }
      ],
      "text": null
    }
  },
  "xten": {
    "loginform": {
      "element": "form",
      "useview": "v.loginform",
      "name": "loginform"
    },
    "logout": {
      "element": "span",
      "style": "display: inline-block",
      "name": "logout"
    },
    "page-container": {
      "tag": "xten",
      "name": "page-container",
      "element": "div",
      "style": "width: 100%;margin: auto;background-color: white;",
      "nodeStyle": "max-width: [$max-width||100%];"
    },
    "page-content": {
      "tag": "xten",
      "name": "page-content",
      "element": "div",
      "style": "min-height: 100vh;"
    },
    "background-filter": {
      "tag": "xten",
      "name": "background-filter",
      "element": "div"
    },
    "change-image": {
      "tag": "xten",
      "name": "change-image",
      "element": "_hidden"
    },
    "parentclass": {
      "tag": "xten",
      "name": "parentclass",
      "element": "_hidden",
      "init": "node.parent.addClass(node.text.trim());"
    },
    "paginator": {
      "tag": "xten",
      "name": "paginator",
      "element": "div",
      "style": "text-align: center;padding: 5px;[$list-style||' '];",
      "css": ".wx-xten-paginator > a {display: inline-block; text-decoration: none; color: inherit; padding: 5px; border: 1px solid lightgray; width: 30px;text-align: center;[$list-item-style||' ']}.wx-xten-paginator > a:hover {text-decoration: none;}.wx-xten-paginator > a:visited {color: inherit;}.wx-xten-paginator > a.active {font-weight: bold; border-width: 3px;}",
      "load": "const objType = node.getValue('object-type');if (!objType) {common.nodeerror('object-type is missing', node);return;}const objConfigNode = common.findNamed(node, 'object-config', objType);if (!objConfigNode) {common.nodeerror('invalid object type: ' + objType, node);return;}const objConfig = common._tojson(objConfigNode, 'page, view');const data = await database.count({type: objType}, objConfig.collection);if (data.rc != 'success') {common.nodeerror('System Error', data.rc);return;}node.empty();node.attribs['object-label'] = node.getValue('label') || common.toCamelCase(objType);var pageSize = node.getValue('pagesize') || context.vars[objType + '-pagesize'] || configNode.getValue('pagesize');pageSize = pageSize ? parseInt(pageSize.toString().trim()) : 0;if (!pageSize) {return;}var pageNumber = node.getValue('pagenum') || context.vars[objType + '-pagenum'];pageNumber = pageNumber ? parseInt(pageNumber.toString().trim()) : 1;var url = context.vars.url;const query = context.vars.query || null;url += '?';if (query) {for (var prop in query) {if (prop == objType + '-pagenum') {continue;}url += prop + '=' + query[prop] + '&';}}const pages = Math.ceil(data.count / pageSize);if (pages > 1) {for (var i = 0; i < pages; i++) {const child = node.newChild('a');const _page = (i + 1).toString();const href = url + (_page == '1' ? '' : (objType + '-pagenum=' + _page));child.attribs.href = href[href.length - 1] == '?' ? href.slice(0, -1) : href;child.text = _page;var className = 'paginator-link';if (_page == pageNumber) {className += ' active';}child.attribs.class = className;}}"
    },
    "object": {
      "tag": "xten",
      "name": "object",
      "element": "div",
      "style": "position: relative;",
      "css": ".wx-xten-object > .wx-xten-object-data-wrapper {position: relative;}.wx-xten-object > .view {display:none}.wx-xten-object > .wx-xten-object-data-wrapper > .wx-view-object-list-item {position: relative;}.wx-xten-object > .object-list-toolbar {display: none;}.wx-xten-object.wx-state-ediable > .object-list-toolbar {display: inline-block;}.wx-xten-object .wx-xten-object-item-toolbar {display: none;}.wx-xten-object.wx-state-editable .wx-xten-object-item-toolbar {display: none;}",
      "load": "async (node, context, xten, prop) => {\n    var objKey = node.getValue('object-name');\n    if (!objKey) {\n        common.nodeerror('object-name is missing in xten object', node);\n        return;\n    }\n    var output = null;\n    if (objKey.startsWith('[@')) {\n        output = await database.getPageDataFromURL(context.vars.url);\n        if (output.rc != 'success') {\n            common.nodeerror('could not find page ' + context.vars.url, node);\n            return;\n        }\n    } else {\n        output = await database.getPageDataFromObjectName(context.vars.url);\n        if (output.rc != 'success') {\n            common.nodeerror('could not find object ' + objKey, node);\n            return;\n        }\n    }\n    if (!output.doc) {\n        common.nodeerror('empty page data found ' + objKey + '-' + context.vars.url, node);\n        return;\n    }\n    objKey = output.doc['object-name'];\n    objType = output.doc.type;\n    objConfigNode = common.findNamed(node, 'object-config', objType);\n    if (!objConfigNode) {\n        common.nodeerror('invalid object type: ' + objType, node);\n        return;\n    }\n    const objConfig = common._tojson(objConfigNode, 'page, view');\n    const data = await database.getObjectData(objKey, node.getValue('collection') || objConfig.collection || 'object_data');\n    if (data.rc != 'success') {\n        common.nodeerror('System Error ' + data.rc, node);\n        return;\n    }\n    if (!data.doc) {\n        common.nodeerror('page not found ' + objKey, node);\n        return;\n    }\n    const viewName = node.getValue('object-view') || 'default';\n    const view = objConfigNode.findNamedChild('object-view', viewName);\n    if (!view) {\n        common.nodeerror('object-view : ' + viewName + ' not found. object-config: ' + objType, node);\n        return;\n    }\n    common.substituteVars(view, node.attribs);\n    const toolbarView = common.findNamed(node, 'view', 'object-item-toolbar');\n    var objectItemToolbar = null;\n    if (toolbarView) {\n        const toolbarList = toolbarView.findChildren('toolbar');\n        if (toolbarList.length) {\n            objectItemToolbar = toolbarList[0];\n        }\n    }\n    node.attribs['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    const vars = node.attribs;\n    for (var prop in node.attribs) {\n        vars[prop] = node.attribs[prop];\n    }\n    node.empty();\n    const rec = data.doc;\n    const _vars = rec;\n    _vars['object-type'] = objType;\n    _vars['object-name'] = objKey;\n    _vars['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    vars['object-name'] = rec['name'];\n    vars['object-label'] = node.getValue('label') || objConfig.label || common.toCamelCase(objType);\n    const _view = view.clone();\n    _view.attribs.element = 'div';\n    _view.addClass('wx-view-object-list-item');\n    _view.attribs.name = 'object-view';\n    var _toolbar = null;\n    if (objectItemToolbar) {\n        _toolbar = objectItemToolbar.clone();\n        node.addChild(_toolbar);\n    }\n    common.substituteVars(_view, _vars, true, common.recordPattern);\n    common.substituteVars(_view, node.attribs);\n    node.addChild(_view);\n    xtensions.processXtens(node, context);\n}"
    },
    "object-list": {
      "tag": "xten",
      "name": "object-list",
      "element": "div",
      "style": "position: relative;",
      "css": ".wx-xten-object-list .wx-view-list-item {position: relative; width: 100%;}.wx-xten-object-list .wx-view-list-parent {position: relative;}.wx-xten-object-list .wx-view-list-parent:not(tbody) {display: flex; flex-wrap: wrap; width: 100%;}.wx-xten-object-list .object-list-toolbar {display: none;}.wx-xten-object-list .object-item-toolbar {display: none;}.wx-xten-object-list.wx-state-editable .object-list-toolbar {display: inline-block;}.wx-xten-object-list.wx-state-editable .object-item-toolbar {display: inline-block;}",
      "cssNode": "#[$id] .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#[$id] .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}",
      "load": "async (node, context, xten, prop) => {\n    /*var startTime = common.startTimer();*/\n    const objType = node.getValue('object-type');\n    if (!objType) {\n        node.attribs.error = 'object-type is mandatory';\n        common.error(node.attribs.error);\n        return;\n    }\n    const configNode = common.findNamed(node, 'object-config', objType);\n    if (!configNode) {\n        node.attribs.error = 'could not find object-config for object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const listViewName = node.getValue('list-view') || 'default';\n    listView = configNode.findNamedChild('list-view', listViewName).clone();\n    if (!listView) {\n        node.attribs.error = 'list-view ' + listViewName + ' not found in object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const vars = node.attribs;\n    var pageSize = node.getValue('pagesize') || vars[objType + '-pagesize'] || configNode.getValue('pagesize');\n    pageSize = pageSize ? parseInt(pageSize.toString().trim()) : 0;\n    var pageNumber = context.vars[objType + '-pagenum'] || node.getValue('pagenum');\n    pageNumber = pageNumber ? parseInt(pageNumber.toString().trim()) : 1;\n    const sort = node.getValue('sort') || vars[objType + '-sort'] || configNode.getValue('sort') || 'created:1';\n    const _sort = common.nameValueStr2Json(sort);\n    const label = node.getValue('label') || configNode.getValue('label') || common.toCamelCase(objType);\n    const plural = node.getValue('plural') || configNode.getValue('plural') || (common.toCamelCase(objType) + 's');\n    const orientation = node.getValue('orientation') || vars[objType + '-orientation'] || configNode.getValue('orientation') || 'column';\n    const collection = configNode.getValue('collection');\n    const selector = {\n        type: objType\n    };\n    const data = await database.getObjectList(selector, pageSize, pageNumber, _sort, collection);\n    if (data.rc != 'success') {\n        common.nodeerror('System Error', data.rc);\n        return;\n    }\n    const _vars = {};\n    _vars['object-type'] = objType;\n    _vars['object-label'] = label;\n    _vars['object-plural'] = plural;\n    if (!data.docs || !data.docs.length) {\n        const emptyViewName = node.getValue('empty-view') || 'default';\n        var emptyView = listView.findNamedChild('empty-view', emptyViewName);\n        if (!emptyView) {\n            node.attribs.error = 'list-view ' + listViewName + ' does not have empty view ' + emptyViewName + '. object-type' + objType;\n            common.error(node.attribs.error);\n            return;\n        }\n        emptyView = emptyView.clone();\n        node.empty();\n        node.insertChildren(0, emptyView.children);\n        common.substituteVars(node, _vars, true, common.recordPattern);\n        common.substituteVars(node, node.attribs);\n        xtensions.processXtens(node, context);\n        return;\n    }\n    const dataViewName = node.getValue('data-view') || 'default';\n    var dataView = listView.findNamedChild('data-view', dataViewName);\n    if (!dataView) {\n        node.attribs.error = 'list-view ' + listViewName + ' does not have data view ' + dataViewName + '. object-type' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    dataView = dataView.clone();\n    const placeholderList = dataView.find('list-items');\n    if (placeholderList.length != 1) {\n        node.attribs.error = 'list-view ' + listViewName + ' should have 1 placeholder for list-items. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const placeholder = placeholderList[0];\n    const listParent = placeholder.parent;\n    if (listParent.children.length != 1) {\n        node.attribs.error = 'in list-view ' + listViewName + ' parent of list-item template should not contain anything other than list-item template. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const listItemName = placeholder.attribs.name || 'default';\n    listParent.empty();\n    listParent.addClass('wx-state-orientation-' + orientation);\n    listParent.addClass('wx-view-list-parent');\n    const listItemView = listView.findNamedChild('list-item-view', listItemName);\n    if (!listItemView) {\n        node.attribs.error = 'list-view ' + listViewName + ' does not have list-item-view ' + listItemName + '. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    if (listItemView.children.length != 1) {\n        node.attribs.error = 'list-item-view ' + listItemName + ' in list-view ' + listViewName + ' should hae only one child. object-type ' + objType;\n        common.error(node.attribs.error);\n        return;\n    }\n    const pages = data ? data.pages : 1;\n    const list = data && data.docs ? data.docs : [];\n    for (var i = 0; i < list.length; i++) {\n        const rec = list[i];\n        rec['object-sno'] = i;\n        rec['object-name'] = rec.name;\n        for (var prop in rec['indexed-urls']) {\n            rec['url-' + prop] = rec['indexed-urls'][prop];\n        }\n        const li = listItemView.clone();\n        li.children[0].addClass('wx-view-list-item');\n        common.substituteVars(li, rec, true, common.recordPattern);\n        common.substituteVars(li, node.attribs); /*xtensions.processXtens(li, context);*/\n        listParent.insertChildren(0, li.children);\n    }\n    node.empty();\n    node.insertChildren(0, dataView.children);\n    common.substituteVars(node, _vars, true, common.recordPattern);\n    common.substituteVars(node, node.attribs); /*common.endTimer(startTime, '=> object-list load before process xtens.');*/ /*var startTime = common.startTimer();*/\n    xtensions.processXtens(node, context); /*common.endTimer(startTime, '=> object-list load process xtens.');*/\n}"
    },
    "_form": {
      "tag": "xten",
      "name": "_form",
      "element": "form",
      "style": "position: relative;display: block;",
      "nodeStyle": "width: [$width||100%];padding: [$padding||20px];",
      "css": ".wx-xten-_form label {flex: 1 0 30%;text-align: right;}.wx-xten-_form input {flex: 1 0 70%;}",
      "init": "const name = node.getValue('name');const children = node.children;const labels = node.find('label');labels.forEach(label => {label.attribs['object-name'] = name;});const objName = node.getValue('object-name');if (objName) {const inputs = node.find('.xinput');inputs.forEach(input => {input.attribs['object-name'] = objName;});}"
    },
    "_list": {
      "tag": "xten",
      "name": "_list",
      "element": "_hidden",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
      "init": "const toolbar = node.findChild('toolbar');toolbar.remove();const children = node.children;node.empty();const template = node.newChild('div');template.attribs.name = 'list-item-view';template.attribs.element = '_hidden';template.insertChildren(0, children);const list = node.newChild('div');list.attribs.name = 'wx-view-datalist';list.addClass('wx-view-datalist');node.addChild(toolbar);",
      "load": "var startTime = common.startTimer();const list = node.findNamedChild('div', 'wx-view-datalist');list.empty();const value = await database.inlineValue(node, context, xten);if (!value || !value.length) {node.attribs['item-count'] = '0';return;}node.attribs['item-count'] = value.length.toString();const template = node.findNamedChild('div', 'list-item-view');const name = node.getValue('name');for (var i = 0; i < value.length; i++) {const listitem = list.newChild('listitem', 'last');listitem.attribs.id = value[i].uid;listitem.attribs['list-idx'] = i.toString();listitem.attribs.name = name;xtensions.processXtens(listitem, context);template.children.forEach(child => {const _child = child.clone();_child.iterate(_ch => {if (_ch.attribs['list-child']) {_ch.attribs['list-selector'] = name + '.$[list-idx]';_ch.attribs['list-idx'] = i.toString();}});listitem.addChild(_child);});if (i == 0) {listitem.addClass('active');}common.substituteVars(listitem, listitem.attribs);common.substituteVars(listitem, node.attribs);}/*common.endTimer(startTime, '=> _list load.');*/"
    },
    "listitem": {
      "tag": "xten",
      "name": "listitem",
      "element": "div",
      "style": "position: relative;",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-item-toolbar",
          "index": "1",
          "class": "list-item-toolbar"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "remove",
              "class": "remove",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "delete list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "name": "_listItemRemove",
                  "class": "_listItemRemove",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "delete-list-item",
                      "class": "delete-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      }
    },
    "add-libs": {
      "tag": "xten",
      "name": "add-libs",
      "element": "_hidden",
      "init": "const _value = (node.attribs['libs'] || node.text).trim();if (!_value) {return;}if (!context.libs) {context.libs = {};}const list = _value.split(',');list.forEach((lib) => {const _lib = lib.trim();if (!context.libs[_lib]) {context.libs[_lib] = _lib;}});"
    },
    "align": {
      "tag": "xten",
      "name": "align",
      "element": "div",
      "style": "position: relative;display: flex;",
      "nodeStyle": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
    },
    "banner": {
      "tag": "xten",
      "name": "banner",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-banner > .wx-view-datalist {display: flex;position: relative;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem {display: none;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem.active {display: block;}.wx-xten-banner .banner-controls {display: display-block;}",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n    const bottom = node.findChild('pos-bottom') || node.findNamedChild('div', 'banner-bottom-toolbar');\n    const changer = bottom.findChild('toolbar') || bottom.findNamedChild('div', 'slide-changer');\n    changer.empty();\n    for (var i = 0; i < value.length; i++) {\n        const icon = changer.newChild('icon');\n        icon.attribs.name = 'circle';\n        icon.attribs['slide-idx'] = i.toString();\n        icon.addClass('change-slide');\n        const tooltip = icon.newChild('tooltip');\n        tooltip.text = 'Slide ' + (i + 1).toString();\n    }\n    xtensions.processXtens(bottom, context);\n}",
      "allow": "owner, admin",
      "mandatory": "aspect-ratio",
      "cssNode": "#[$id] > .wx-view-datalist > .wx-xten-listitem {aspect-ratio: [$aspect-ratio||1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "pos-left",
            "attribs": {
              "name": "banner-left-button",
              "class": "banner-left-button banner-controls",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "left",
                  "class": "left",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerLeftClick",
                      "class": "_fnBannerLeftClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == 0 ? total - 1 : idx - 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-right",
            "attribs": {
              "name": "banner-right-button",
              "class": "banner-right-button banner-controls",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "right",
                  "class": "right",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerRightClick",
                      "class": "_fnBannerRightClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');const idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-bottom",
            "attribs": {
              "name": "banner-bottom-toolbar",
              "class": "banner-bottom-toolbar banner-controls",
              "bottom": "30px",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "toolbar",
                "attribs": {
                  "name": "slide-changer",
                  "class": "slide-changer",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "const item = element.querySelector('.wx-xten-listitem');if (item) {item.classList.add('active');}const icons = element.querySelectorAll('.change-slide');icons.forEach(_icon => {_icon.addEventListener('click', (event) => {event.preventDefault();const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');if (active) {const idx = active.getAttribute('list-idx');active.classList.remove('active');}const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + _icon.getAttribute('slide-idx') + '\"]');target && target.classList.add('active');});});",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "change-slide": {
      "tag": "xten",
      "name": "change-slide",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "style": "background-color: #fefefe",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "circle",
                "attribs": {
                  "style": "background-color: #aaaaaa",
                  "css-width": "50px",
                  "css-height": "50px",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "align",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "{$eval([$list-idx] + 1)}"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      }
    },
    "body": {
      "tag": "xten",
      "name": "body",
      "style": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
      "nodeStyle": "background-color: [$dynamic-background-color||#ffffff];",
      "css": "[show] {display: none;}"
    },
    "carousel": {
      "tag": "xten",
      "name": "carousel",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "show",
              "class": "show show-button",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Start Slide Show"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "add-class",
                    "attribs": {
                      "classes": "start-show",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "code",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "const element = fntarget;var time = element.getAttribute('interval');if (!time) {wxfns.error('Error running slide show', 'no interval defined in element wxml');return;}time = parseInt(time) * 1000;if (!time) {wxfns.error('Error running slide show', 'invalid value in interval');return;}var idx = 0;element.interval = setInterval(() => {var active = element.querySelector('.wx-xten-listitem.active');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;idx = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + idx.toString() + '\"]');target && target.classList.add('active');}, time);"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "stop",
              "class": "stop stop-button",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Stop Slide Show"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "remove-class",
                    "attribs": {
                      "classes": "start-show",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "code",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": "const element = fntarget;clearInterval(element.interval);delete element.interval;"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-carousel > .wx-view-datalist {position: relative;display: block;width: 100%;}.wx-xten-wx-xten-carousel .list-item-toolbar {display: none; position: relative; }.wx-xten-wx-xten-carousel.wx-state-editable .wx-xten-listitem.active .list-item-toolbar {display: flex; right: 0;}.wx-xten-wx-xten-carousel .list-toolbar {display: none;}.wx-xten-wx-xten-carousel.wx-state-editable .list-toolbar {display: flex; }.wx-xten-carousel .wx-xten-listitem {display: none;}.wx-xten-carousel.wx-state-editable .wx-xten-listitem {display: none;width: 100%;}.wx-xten-carousel.wx-state-editable .wx-xten-listitem.active {display: block;}.wx-xten-carousel.start-show.wx-state-editable .wx-xten-icon.add {display: none;}.wx-xten-carousel.start-show.wx-state-editable .list-item-toolbar {display: none;}.wx-xten-carousel.start-show.wx-state-editable .wx-xten-listitem .wx-xten-toolbar {display: none;}.wx-xten-carousel .banner-controls {display: none;}.wx-xten-carousel.wx-state-editable .banner-controls {display: inline-block;}.wx-xten-carousel.start-show .banner-controls {display: none;}.wx-xten-carousel .show-button {display: none;}.wx-xten-carousel .stop-button {display: none;}.wx-xten-carousel.wx-state-editable .show-button {display: initial;}.wx-xten-carousel.wx-state-editable .stop-button {display: none;}.wx-xten-carousel.start-show.wx-state-editable .show-button {display: none;}.wx-xten-carousel.start-show.wx-state-editable .stop-button {display: initial;}.wx-xten-carousel.start-show .wx-xten-listitem {position: absolute;top: 0;left: 0;right: 0;bottom: 0;display: block;opacity: 0;transition: all 2s;}.wx-xten-carousel.start-show .wx-xten-listitem.active {opacity: 1;transition: all 2s;}",
      "init": "const toolbar = node.findChild('toolbar');toolbar.remove();const children = node.children;node.empty();const template = node.newChild('div');template.attribs.name = 'list-item-view';template.attribs.element = '_hidden';template.insertChildren(0, children);const list = node.newChild('div');list.attribs.name = 'wx-view-datalist';list.addClass('wx-view-datalist');node.addChild(toolbar);",
      "load": "var startTime = common.startTimer();const list = node.findNamedChild('div', 'wx-view-datalist');list.empty();const value = await database.inlineValue(node, context, xten);if (!value || !value.length) {node.attribs['item-count'] = '0';return;}node.attribs['item-count'] = value.length.toString();const template = node.findNamedChild('div', 'list-item-view');const name = node.getValue('name');for (var i = 0; i < value.length; i++) {const listitem = list.newChild('listitem', 'last');listitem.attribs.id = value[i].uid;listitem.attribs['list-idx'] = i.toString();listitem.attribs.name = name;xtensions.processXtens(listitem, context);template.children.forEach(child => {const _child = child.clone();_child.iterate(_ch => {if (_ch.attribs['list-child']) {_ch.attribs['list-selector'] = name + '.$[list-idx]';_ch.attribs['list-idx'] = i.toString();}});listitem.addChild(_child);});if (i == 0) {listitem.addClass('active');}common.substituteVars(listitem, listitem.attribs);common.substituteVars(listitem, node.attribs);}/*common.endTimer(startTime, '=> _list load.');*/\nconst bottom = node.findChild('pos-bottom') || node.findNamedChild('div', 'banner-bottom-toolbar');const changer = bottom.findChild('toolbar') || bottom.findNamedChild('div', 'slide-changer');changer.empty();for (var i = 0; i < value.length; i++) {const icon = changer.newChild('icon');icon.attribs.name = 'circle';icon.attribs['slide-idx'] = i.toString();icon.addClass('change-slide');const tooltip = icon.newChild('tooltip');tooltip.text = 'Slide ' + (i + 1).toString();}xtensions.processXtens(bottom, context);",
      "allow": "owner, admin",
      "mandatory": "aspect-ratio",
      "cssNode": "#[$id] > .wx-view-datalist {aspect-ratio: [$aspect-ratio||1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "pos-left",
            "attribs": {
              "name": "banner-left-button",
              "class": "banner-left-button banner-controls",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "left",
                  "class": "left",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerLeftClick",
                      "class": "_fnBannerLeftClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == 0 ? total - 1 : idx - 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-right",
            "attribs": {
              "name": "banner-right-button",
              "class": "banner-right-button banner-controls",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "right",
                  "class": "right",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "click",
                    "attribs": {
                      "name": "_fnBannerRightClick",
                      "class": "_fnBannerRightClick",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "const element = event.target.closest('.wx-xten-banner');var active = element.querySelector('.wx-xten-listitem.active');const idx = parseInt(active ? active.getAttribute('list-idx') : '0');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;const next = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');target && target.classList.add('active');"
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "pos-bottom",
            "attribs": {
              "name": "banner-bottom-toolbar",
              "class": "banner-bottom-toolbar banner-controls",
              "bottom": "30px",
              "child-idx": 2
            },
            "children": [
              {
                "tag": "toolbar",
                "attribs": {
                  "name": "slide-changer",
                  "class": "slide-changer",
                  "child-idx": 0
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "if (wxfns.hasClass(element, 'wx-state-editable')) {return;}var time = element.getAttribute('interval');if (!time) {return;}time = parseInt(time) * 1000;if (!time) {element.setAttribute('error', 'interval value is incorrect');return;}var idx = 0;setInterval(() => {var active = element.querySelector('.wx-xten-listitem.active');if (active) {active.classList.remove('active');}var total = element.querySelectorAll('.wx-xten-listitem').length;idx = idx == total - 1 ? 0 : idx + 1;const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + idx.toString() + '\"]');target && target.classList.add('active');}, time);",
      "_base": "banner",
      "_class": "wx-xten-_list wx-xten-banner"
    },
    "center": {
      "tag": "xten",
      "name": "center",
      "element": "div",
      "style": "display: flex;width: 100%;height: 100%;justify-content: center;align-items: center;"
    },
    "circle": {
      "tag": "xten",
      "name": "circle",
      "element": "div",
      "style": "overflow: hidden;",
      "nodeStyle": "border-radius: [$radius||50%];"
    },
    "click": {
      "tag": "xten",
      "name": "click",
      "element": "_hidden",
      "init": "(node, context, xten) => {\n    addEvent(node, 'click', context, prop);\n}"
    },
    "column": {
      "tag": "xten",
      "name": "column",
      "element": "div",
      "style": "position: relative;",
      "nodeStyle": "flex: [$ratio||1] [$ratio||0] 1px;"
    },
    "columns": {
      "tag": "xten",
      "name": "columns",
      "element": "div",
      "nodeStyle": "column-count:[$cols||1]",
      "nodeTablet": "column-count:[$cols-tablet||1]",
      "nodePhone": "column-count:[$cols-phone||1]"
    },
    "configuration": {
      "tag": "xten",
      "name": "configuration",
      "element": "div",
      "allow": "admin",
      "style": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
      "css": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
      "cssNode": "body::before {z-index: [$index||-1];}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "row",
            "attribs": {
              "child-idx": 0
            },
            "children": [
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "class": "config-name",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "[$name] - [$url]"
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "toolbar",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "landscape",
                          "background-color": "#dedede",
                          "class": "landscape",
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "page background toolbar"
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "save",
                          "class": "save",
                          "child-idx": 1
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "upload image"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundSaveImage",
                              "field-selector": "page-configuration.background-image",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": "'url(' + toolbarParent['uploaded-url'] + ')'"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": ".wx-xten-configuration",
                                  "class": "background-image",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "toolbarParent['uploaded-url']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "uploaded-url",
                                  "class": "uploaded-url",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "changed-file",
                                  "class": "changed-file",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "remove-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "close",
                          "class": "close",
                          "child-idx": 2
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "cancel"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundCancelImage",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "changed-file",
                                  "class": "changed-file",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "remove-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "upload",
                          "class": "upload",
                          "child-idx": 3
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "select image"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundUploadImage",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "selectfile",
                                "attribs": {
                                  "file-type": "image/*",
                                  "file": "changed-file",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": "'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')'"
                              },
                              {
                                "tag": "add-class",
                                "attribs": {
                                  "classes": "background-changed",
                                  "parent": ".wx-xten-configuration",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "colors",
                          "class": "colors",
                          "child-idx": 4
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "background color"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundColor",
                              "field-selector": "page-configuration.background-color",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('background-color')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "background-color",
                                  "type": "color",
                                  "value": "background-color",
                                  "title": "Background Color",
                                  "class": "background-color",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-style",
                                "attribs": {
                                  "name": "background-color",
                                  "parent": "body",
                                  "class": "background-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['background-color']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['background-color']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "filter",
                          "class": "filter",
                          "child-idx": 5
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "filter color"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundFilterColor",
                              "field-selector": "page-configuration.page-filter-color",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('page-filter-color')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "type": "color",
                                  "value": "page-filter-color",
                                  "title": "Page Filter Color",
                                  "class": "page-filter-color",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-css-var",
                                "attribs": {
                                  "name": "--page-filter-color",
                                  "parent": "body",
                                  "class": "--page-filter-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-color']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-color']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "glasses",
                          "class": "glasses",
                          "child-idx": 6
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "filter opacity"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_backgroundFilterOpacity",
                              "field-selector": "page-configuration.page-filter-opacity",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "set-var",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "toolbarParent.getAttribute('page-filter-opacity')"
                              },
                              {
                                "tag": "get-value",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "type": "number",
                                  "min": "0",
                                  "max": "1",
                                  "step": "0.01",
                                  "value": "page-filter-opacity",
                                  "title": "Page Background Filter Opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);if (result.rc != 'success') {return;}toolbarParent['uploaded-url'] = result.output;"
                              },
                              {
                                "tag": "set-css-var",
                                "attribs": {
                                  "name": "--page-filter-opacity",
                                  "parent": "body",
                                  "class": "--page-filter-opacity",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-opacity']"
                              },
                              {
                                "tag": "set-attrib",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": "toolbarParent['page-filter-opacity']"
                              },
                              {
                                "tag": "unset-var",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "delete-landscape",
                          "class": "delete-landscape",
                          "child-idx": 7
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "delete landscape"
                          },
                          {
                            "tag": "click",
                            "attribs": {
                              "fname": "_deletePageBackground",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "code",
                                "attribs": {
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "const element = eventCurrentTarget.closest('[xten=\"configuration\"]');if (element.getAttribute('object-name')) {eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));}else{eventCurrentTarget.removeAttribute('object-name');}const result = await wxfns.transaction(element, 'delete-background', {name: element.getAttribute('name')});if (result.rc != 'success') {return;}"
                              },
                              {
                                "tag": "unset-style",
                                "attribs": {
                                  "name": "background-image",
                                  "parent": "body",
                                  "class": "background-image",
                                  "child-idx": 1
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "background-image",
                                  "class": "background-image",
                                  "child-idx": 2
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-style",
                                "attribs": {
                                  "name": "background-color",
                                  "parent": "body",
                                  "class": "background-color",
                                  "child-idx": 3
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "background-color",
                                  "class": "background-color",
                                  "child-idx": 4
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-css-var",
                                "attribs": {
                                  "name": "--page-filter-color",
                                  "parent": "body",
                                  "class": "--page-filter-color",
                                  "child-idx": 5
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "page-filter-color",
                                  "class": "page-filter-color",
                                  "child-idx": 6
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-css-var",
                                "attribs": {
                                  "name": "--page-filter-opacity",
                                  "parent": "body",
                                  "class": "--page-filter-opacity",
                                  "child-idx": 7
                                },
                                "children": [],
                                "text": null
                              },
                              {
                                "tag": "unset-attrib",
                                "attribs": {
                                  "name": "page-filter-opacity",
                                  "class": "page-filter-opacity",
                                  "child-idx": 8
                                },
                                "children": [],
                                "text": null
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "class": "page-errors-notification",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "icon",
                        "attribs": {
                          "name": "bug",
                          "class": "bug",
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "tooltip",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [],
                            "text": "errors in page"
                          }
                        ],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 3
                },
                "children": [],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "const access = checkAccess(element);if (access) {element.style.display = \"flex\";} else {element.style.display = \"none\";}if (document.querySelector('[error]') && access) {document.querySelector('.page-errors-notification').style.display = 'block';}const backgroundImage = element.getAttribute('background-image');if (backgroundImage) {element.parentElement.style['background-image'] = backgroundImage;}else{element.parentElement.style['background-image'] = null;}const backgroundColor = element.getAttribute('background-color');if (backgroundColor) {element.parentElement.style['background-color'] = backgroundColor;}else{element.parentElement.style['background-color'] = 'none';}const underlayColor = element.getAttribute('page-filter-color');if (underlayColor) {element.parentElement.style.setProperty('--page-filter-color', underlayColor);}else{element.parentElement.style.setProperty('--page-filter-color', 'none');}const underlayOpacity = element.getAttribute('page-filter-opacity');if (underlayOpacity) {element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);}else{element.parentElement.style.setProperty('--page-filter-opacity', 'none');}",
      "init": "(node, context, xten) => {\n    common.substituteVars(node, node.attribs, true);\n}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value && value['background-image']) {\n        node.attribs['background-image'] = 'url(' + value['background-image'] + ')';\n    } else {\n        delete node.attribs['background-image'];\n    }\n    if (value && value['background-color']) {\n        node.attribs['background-color'] = value['background-color'];\n    } else {\n        delete node.attribs['background-color'];\n    }\n    if (value && value['page-filter-color']) {\n        node.attribs['page-filter-color'] = value['page-filter-color'];\n    } else {\n        delete node.attribs['page-filter-color'];\n    }\n    if (value && value['page-filter-opacity']) {\n        node.attribs['page-filter-opacity'] = value['page-filter-opacity'];\n    } else {\n        delete node.attribs['page-filter-opacity'];\n    }\n}"
    },
    "container": {
      "tag": "xten",
      "name": "container",
      "element": "div",
      "style": "display: block;"
    },
    "cover": {
      "tag": "xten",
      "name": "cover",
      "element": "div",
      "style": "display: flex;position: absolute;",
      "nodeStyle": "top: [$top||0];left: [$left||0];bottom: [$bottom||0];right: [$right||0];justify-content: [$horizontal||center];align-items: [$vertical||center];"
    },
    "css": {
      "tag": "xten",
      "name": "css",
      "element": "_hidden",
      "mandatory": "name",
      "init": "(node, context, xten) => {\n    const name = node.getValue('name');\n    context.css[name] = node.text;\n}"
    },
    "datetime": {
      "tag": "xten",
      "name": "datetime",
      "mandatory": "name",
      "load": "const name = node.getValue('name');if (!name) {_common.error('name is missing in xten: ' + xten, node);return null;}const collection = node.getValue('collection') || 'object_data';const objKey = node.getValue('object-name') || context['object-name'];const value = await database.getFieldValue(objKey, name, node.attribs, collection);if (!value) {return;}const format = node.getValue('format');const [date, time] = value.split('T');const [year, month, day] = date.split('-');const lastChar = time.slice(-1);const _time = time.slice(0, -1);const [hr, min, sec, ms] = _time.replace('.', ':').split(':');const months = 'January, February, March, April, May, June, July, August, September, October, November, December'.split(/\\s*\\,\\s*/);const days = 'Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday'.split(/\\s*\\,\\s*/);const _day = (new Date(value)).getDay();const subs = {DD: day,MM: month,YY: year.slice(2),YYYY: year,hh: hr,mm: min,ss: sec,ms: ms,month: months[parseInt(month)],mon: months[parseInt(month)].slice(0, 3),day: days[parseInt(_day)].slice(0, 3),weekday: [parseInt(_day)]};const output = common.substitute(format, subs);if (output) {node.text = output;}"
    },
    "draggable": {
      "tag": "xten",
      "name": "draggable",
      "element": "div",
      "style": "position: absolute;display: inline-block;height: auto;width: auto;",
      "nodeStyle": "overflow: [$overflow||hidden];resize: [$resize||both];cursor: [$cursor||move];",
      "initElement": "element.onmousedown = (e) => {const resizeHandleSize = 15;const width = element.offsetWidth;const height = element.offsetHeight;const computedStyle = window.getComputedStyle(element);const cursorStyle = computedStyle.getPropertyValue('cursor');if (e.clientX > (element.offsetLeft + width - resizeHandleSize) && e.clientY > (element.offsetTop + height - resizeHandleSize)){return true;}var currentX = 0;var currentY = 0;currentX = e.clientX;currentY = e.clientY;element.classList.add(\"dragging\");document.onmouseup = () => {document.onmouseup = null;document.onmousemove = null;element.classList.remove(\"dragging\");};document.onmousemove = (e) => {element.style.left = (element.offsetLeft - currentX + e.clientX) + 'px';element.style.top = (element.offsetTop - currentY + e.clientY) + 'px';currentX = e.clientX;currentY = e.clientY;};};"
    },
    "email-form": {
      "tag": "xten",
      "name": "email-form",
      "element": "form",
      "style": "position: relative;display: block;",
      "nodeStyle": "width: [$width||100%];padding: [$padding||20px];",
      "css": ".wx-xten-email-form .edit-email-text {display: none; background-color: lightgrey; z-index: 9999;}.wx-xten-email-form.show-email .edit-email-text {display: block;}.wx-xten-email-form .wx-xten-textedit {height: 500px; width: 600px; background-color: white; border: 1px solid grey; overflowY: scroll; padding: 10px;}.wx-xten-email-form .email-settings {padding: 5px; margin: 5px; background-color: white; width: 100%; border: 1px solid grey;}",
      "init": "const name = node.getValue('name');const children = node.children;const labels = node.find('label');labels.forEach(label => {label.attribs['object-name'] = name;});const objName = node.getValue('object-name');if (objName) {const inputs = node.find('.xinput');inputs.forEach(input => {input.attribs['object-name'] = objName;});}",
      "mandatory": "name, smtp-settings",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "screencover",
            "attribs": {
              "class": "edit-email-text",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "pos-top-right",
                "attribs": {
                  "top": "20px",
                  "right": "20px",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "icon",
                    "attribs": {
                      "name": "cross",
                      "class": "cross",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "click",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "const element = event.target.closest('.wx-xten-email-form');wxfns.removeClass(element, 'show-email');"
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "pos-top",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "div",
                    "attribs": {
                      "style": "padding: 10px; font-weight: bold; background: #efefef; text-align: center; width: 600px;",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "Email Body email-text-[$name]"
                  }
                ],
                "text": null
              },
              {
                "tag": "center",
                "attribs": {
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "container",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "row",
                        "attribs": {
                          "child-idx": 0
                        },
                        "children": [
                          {
                            "tag": "column",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [
                              {
                                "tag": "align",
                                "attribs": {
                                  "horizontal": "flex-start",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "To Email"
                              }
                            ],
                            "text": null
                          },
                          {
                            "tag": "column",
                            "attribs": {
                              "ratio": "3",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "inline",
                                "attribs": {
                                  "class": "email-recipient email-settings",
                                  "name": "email-recipient",
                                  "object-name": "[$name]",
                                  "collection": "constants",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "To Email Address"
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "row",
                        "attribs": {
                          "child-idx": 1
                        },
                        "children": [
                          {
                            "tag": "column",
                            "attribs": {
                              "child-idx": 0
                            },
                            "children": [
                              {
                                "tag": "align",
                                "attribs": {
                                  "horizontal": "flex-start",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "Email Subject"
                              }
                            ],
                            "text": null
                          },
                          {
                            "tag": "column",
                            "attribs": {
                              "ratio": "3",
                              "child-idx": 1
                            },
                            "children": [
                              {
                                "tag": "inline",
                                "attribs": {
                                  "class": "email-subject email-settings",
                                  "name": "email-subject",
                                  "object-name": "[$name]",
                                  "collection": "constants",
                                  "child-idx": 0
                                },
                                "children": [],
                                "text": "Email subject"
                              }
                            ],
                            "text": null
                          }
                        ],
                        "text": null
                      },
                      {
                        "tag": "textedit",
                        "attribs": {
                          "name": "email-text",
                          "object-name": "[$name]",
                          "collection": "constants",
                          "class": "email-text",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "top": "-31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "system",
              "class": "system",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "SMTP Settings"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [],
                "text": "const element = event.currentTarget;const form = element.closest('.wx-xten-email-form');const keydata = {name: 'smtp-settings',scope: form.getAttribute('smtp-settings') || '_all'};var result = await wxfns.transaction(element, 'get-constant', keydata);if (result.rc != 'success') {return;}var data = result.data || {};const list = [{name: 'smtp-host',label: 'SMTP Host',tag: 'input',type: 'text',value: data['smtp-host'],required:'true'},{name: 'smtp-port',label: 'SMTP Port',tag: 'input',type: 'number',value: data['smtp-port'],required:'true'},{name: 'user-name',label: 'SMTP User Name',tag: 'input',type: 'text',value: data['user-name'],required:'true'},{name: 'password',label: 'SMTP Password',tag: 'input',type: 'password',value: data['password']},{name: 'ssl',label: 'SSL?',tag: 'input',type: 'checkbox',value: data['ssl'],},{name: 'from',label: 'From Email',tag: 'input',type: 'email',value: data['from'],}];const formData = await wxfns.getMultipleValues(list, 'SMTP Settings');if (!formData) {return;}keydata.data = formData;result = await wxfns.transaction(element, 'save-constant', keydata);if (result.rc != 'success') {return;}"
              }
            ],
            "text": null
          },
          {
            "tag": "icon",
            "attribs": {
              "name": "at",
              "class": "at",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "Email Text"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [],
                "text": "const element = event.target.closest('.wx-xten-email-form');wxfns.addClass(element, 'show-email');"
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "_base": "_form",
      "_class": "wx-xten-_form"
    },
    "fitheight": {
      "tag": "xten",
      "name": "fitheight",
      "element": "div",
      "style": "display: block;height: 100%;width: 100%;overflow: hidden;position: relative;",
      "css": ".wx-xten-fitheight > .wx-xten-image {height: 100%;}.wx-xten-fitheight > .wx-xten-image > img {display: block;width: auto;height: 100%;}"
    },
    "fitwidth": {
      "tag": "xten",
      "name": "fitwidth",
      "element": "div",
      "style": "display: block;width: 100%;overflow: hidden;position: relative;",
      "css": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}"
    },
    "flex": {
      "tag": "xten",
      "name": "flex",
      "element": "div",
      "style": "display: flex;position: relative;width: 100%;height: 100%;"
    },
    "event": {
      "tag": "xten",
      "name": "event",
      "element": "_hidden",
      "init": "(node, context, xten) => {\n    addEvent(node, node.getValue('name'), context, prop);\n}"
    },
    "font": {
      "tag": "xten",
      "name": "font",
      "element": "_hidden",
      "link": "https://fonts.googleapis.com/css2?family=[$name]:wght@[$weight]&display=swap"
    },
    "gap": {
      "tag": "xten",
      "name": "gap",
      "element": "div",
      "mandatory": "height",
      "nodeStyle": "height: [$height||15px];"
    },
    "grid": {
      "tag": "xten",
      "name": "grid",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-grid > .wx-view-datalist {flex-wrap: wrap;}",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n}",
      "allow": "owner, admin",
      "mandatory": "columns",
      "cssNode": "#[$id] > .wx-view-datalist {flex-direction: [$orientation||row];gap: [$item-gap||0];}#[$id] > .wx-view-datalist > .wx-xten-listitem {flex-grow: [$grow||0];flex-shrink: [$shrink||0];flex-basis: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );width: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );}",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "icon": {
      "tag": "xten",
      "name": "icon",
      "element": "div",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "div",
            "attribs": {
              "name": "icon-code",
              "class": "icon-code",
              "child-idx": 0
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;display: inline-block;",
      "nodeStyle": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
      "css": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
      "init": "(node, context, xten) => {\n    const name = node.getValue('name');\n    const code = node.findNamedChild('div', 'icon-code'); /*if (!context.globals.icons) {context.globals.icons = {};}if (context.globals.icons[name]) {code.addChild(context.globals.icons[name].clone());return;}*/\n    const result = files.read('public/icons/' + name + '.svg', context.siteRoot);\n    if (result.rc != 'success') {\n        const child = code.newChild('div');\n        child.text = '.';\n    }\n    const filepath = 'public/icons/' + name + '.svg';\n    const _lines = preprocessor(filepath, context.siteRoot);\n    if (!_lines) {\n        common.error('could not parse file : ' + filepath);\n        node.attribs.error('could not parse file : ' + filepath);\n        return;\n    }\n    const root = parser(_lines, filepath, context.siteRoot);\n    const svg = root.findChildren('svg')[0];\n    if (!svg.attribs.viewBox) {\n        svg.attribs.viewBox = '0 0 ' + svg.attribs.width + ' ' + svg.attribs.height;\n    }\n    delete svg.attribs.width;\n    delete svg.attribs.height;\n    const defs = svg.findChild('defs');\n    if (defs) {\n        defs.remove();\n        const g = svg.findChild('g');\n        delete g.attribs['clip-path'];\n    }\n    code.addChild(svg); /* context.globals.icons[name] = svg.clone(); */\n}"
    },
    "if": {
      "tag": "xten",
      "name": "if",
      "element": "_hidden",
      "mandatory": "condition",
      "load": "const condition = node.getValue('condition');try {const result = eval(condition);node.attribs.element = result ? \"_children\" : \"_hidden\";}catch (e) {common.nodeerror('error in if condition: ' + e.message, node);}"
    },
    "image": {
      "tag": "xten",
      "name": "image",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "img",
            "attribs": {
              "src": "[$src||images/blank.jpg]",
              "alt": "[$alt||$name]",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "toolbar",
            "attribs": {
              "top": "[$toolbar-top||0]",
              "left": "[$toolbar-left||0]",
              "right": "[$toolbar-right||auto]",
              "bottom": "[$toolbar-bottom||auto]",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "save",
                  "class": "save",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "upload image"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_imageSaveImage",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "upload",
                        "attribs": {
                          "name": "save-image",
                          "file": "changed-file",
                          "file-url": "uploaded-url",
                          "class": "save-image",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "class": "src",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "uploaded-url",
                          "class": "uploaded-url",
                          "child-idx": 3
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 4
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 5
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "close",
                  "class": "close",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "cancel"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_imageCancelImageSave",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "toolbarParent.getAttribute('src')"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "upload",
                  "class": "upload",
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "select image"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_imageUploadImage",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "selectfile",
                        "attribs": {
                          "file-type": "image/*",
                          "file": "changed-file",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "img",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                      },
                      {
                        "tag": "add-class",
                        "attribs": {
                          "classes": "image-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
      "nodeStyle": "aspect-ratio: [$aspect-ratio||auto];",
      "css": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
      "cssNode": "#[$id] > img {aspect-ratio: [$aspect-ratio||auto];}#[$id].wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
      "initElement": "const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);if (ratio) {element.style.height = (element.offsetWidth * ratio) + 'px';}element.setAttribute('src', element.querySelector('img').getAttribute('src'));/*const image = element.querySelector('img');var containerWidth = element.offsetWidth;var containerHeight = element.offsetHeight;var imageWidth = image.naturalWidth;var imageHeight = image.naturalHeight;if (containerHeight && imageHeight) {var containerRatio = containerWidth / containerHeight;var imageRatio = imageWidth / imageHeight;}if (ratio) {containerWidth = element.offsetWidth;containerHeight = Math.round(containerWidth * ratio);element.style.height = containerHeight.toString() + 'px';var containerWidth = element.offsetWidth;var containerHeight = element.offsetHeight;var imageWidth = image.naturalWidth;var imageHeight = image.naturalHeight;var containerRatio = containerWidth / containerHeight;var imageRatio = imageWidth / imageHeight;if (containerRatio < imageRatio) {image.style.height = 'auto';image.style.width = '100%';image.style.margin = 'auto';}else{image.style.height = '100%';image.style.width = 'auto';image.style.margin = 'auto';}const resizeObserver = new ResizeObserver(entries => {const containerWidth = element.offsetWidth;const containerHeight = Math.round(containerWidth * ratio);element.style.height = containerHeight.toString() + 'px';});resizeObserver.observe(element);}*/",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.attribs.src = value;\n        const img = node.findChildren('img')[0];\n        img.attribs.src = value;\n    }\n}"
    },
    "inline": {
      "tag": "xten",
      "name": "inline",
      "element": "span",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: inline-block;",
      "css": ".inline._unsaved_inline {border: 1px solid yellow;}.inline._empty_inline {border: 1px solid red;width: 100%;min-width: 50px;}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.text = value;\n    }\n}",
      "initElement": "const access = checkAccess(element);if (access) {element.setAttribute('contenteditable', true);wxfns.addClass(element, 'editable');const prevText = element.innerText.trim();if (!prevText.length) {element.classList.add('_empty_inline');}else{element.classList.remove('_empty_inline');}element.__inlineValue = prevText;}else{element.removeAttribute('contenteditable');wxfns.removeClass(element, 'editable');}"
    },
    "layers": {
      "tag": "xten",
      "name": "layers",
      "element": "div",
      "style": "position:relative;display: block;height: 100%;"
    },
    "layer": {
      "tag": "xten",
      "name": "layer",
      "element": "div",
      "style": "position:absolute;",
      "nodeStyle": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: [$index||0];"
    },
    "line": {
      "tag": "xten",
      "name": "line",
      "element": "div",
      "style": "position: relative;",
      "nodeStyle": "border-top: [$line-style||1px solid #000000];",
      "cssNode": "#[$id]:before {content: \"\";width: 100%;border-top: [$before-style||none];position: absolute;top: -5px;}#[$id]:after {content: \"\";width: 100%;border-top: [$after-style||none];position: absolute;top: 5px;}"
    },
    "list": {
      "tag": "xten",
      "name": "list",
      "element": "div",
      "toolbar": {
        "tag": "toolbar",
        "attribs": {
          "name": "list-toolbar",
          "class": "list-toolbar",
          "right": "31px"
        },
        "children": [
          {
            "tag": "icon",
            "attribs": {
              "name": "add",
              "class": "add",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "tooltip",
                "attribs": {
                  "child-idx": 0
                },
                "children": [],
                "text": "add new list item"
              },
              {
                "tag": "click",
                "attribs": {
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "transaction",
                    "attribs": {
                      "name": "add-list-item",
                      "class": "add-list-item",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": null
                  },
                  {
                    "tag": "reload",
                    "attribs": {
                      "child-idx": 1
                    },
                    "children": [],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "style": "position: relative;",
      "css": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
      "init": "(node, context, xten) => {\n    const toolbar = node.findChild('toolbar');\n    toolbar.remove();\n    const children = node.children;\n    node.empty();\n    const template = node.newChild('div');\n    template.attribs.name = 'list-item-view';\n    template.attribs.element = '_hidden';\n    template.insertChildren(0, children);\n    const list = node.newChild('div');\n    list.attribs.name = 'wx-view-datalist';\n    list.addClass('wx-view-datalist');\n    node.addChild(toolbar);\n}",
      "load": "async (node, context, xten, prop) => {\n    var startTime = common.startTimer();\n    const list = node.findNamedChild('div', 'wx-view-datalist');\n    list.empty();\n    const value = await database.inlineValue(node, context, xten);\n    if (!value || !value.length) {\n        node.attribs['item-count'] = '0';\n        return;\n    }\n    node.attribs['item-count'] = value.length.toString();\n    const template = node.findNamedChild('div', 'list-item-view');\n    const name = node.getValue('name');\n    for (var i = 0; i < value.length; i++) {\n        const listitem = list.newChild('listitem', 'last');\n        listitem.attribs.id = value[i].uid;\n        listitem.attribs['list-idx'] = i.toString();\n        listitem.attribs.name = name;\n        xtensions.processXtens(listitem, context);\n        template.children.forEach(child => {\n            const _child = child.clone();\n            _child.iterate(_ch => {\n                if (_ch.attribs['list-child']) {\n                    _ch.attribs['list-selector'] = name + '.$[list-idx]';\n                    _ch.attribs['list-idx'] = i.toString();\n                }\n            });\n            listitem.addChild(_child);\n        });\n        if (i == 0) {\n            listitem.addClass('active');\n        }\n        common.substituteVars(listitem, listitem.attribs);\n        common.substituteVars(listitem, node.attribs);\n    } /*common.endTimer(startTime, '=> _list load.');*/\n}",
      "allow": "owner, admin",
      "cssNode": "#[$id] > .wx-view-datalist {display: flex;flex-direction: [$orientation||column];gap: [$item-gap||0];width: 100%;}#[$id] > .wx-view-datalist > .wx-xten-listitem {flex: 1 1 0;}",
      "_base": "_list",
      "_class": "wx-xten-_list"
    },
    "navbar": {
      "tag": "xten",
      "name": "navbar",
      "element": "div",
      "_class": "navclass-[$orientation||row]",
      "style": "display:flex;text-transform: [$transform||none];position: relative;",
      "nodeStyle": "flex-direction: [$orientation||row];gap: [$item-gap||0];",
      "css": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
      "cssNode": "#[$id] > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#[$id] > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#[$id] > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#[$id] > .wx-xten-navitem:hover { [$navitem-hover-style|| ] }#[$id] > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#[$id] > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#[$id] > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#[$id] > .wx-xten-navgroup:hover > .wx-xten-navitem { [$navitem-hover-style|| ] }"
    },
    "navitem": {
      "tag": "xten",
      "name": "navitem",
      "element": "span",
      "style": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
      "css": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
    },
    "navgroup": {
      "tag": "xten",
      "name": "navgroup",
      "style": "display: inline-block;position: relative;",
      "element": "div"
    },
    "pos-bottom-left": {
      "tag": "xten",
      "name": "pos-bottom-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: [$left||0];bottom: [$bottom||0];"
    },
    "pos-bottom-right": {
      "tag": "xten",
      "name": "pos-bottom-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];bottom: [$bottom||0];"
    },
    "pos-bottom": {
      "tag": "xten",
      "name": "pos-bottom",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;bottom: [$bottom||0];transform: translate(-50%, -100%);"
    },
    "pos-left": {
      "tag": "xten",
      "name": "pos-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;",
      "nodeStyle": "left: [$left||0];top: 50%;transform: translateY(-50%);"
    },
    "pos-middle": {
      "tag": "xten",
      "name": "pos-middle",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;top: 50%;transform: translate(-50%, -50%);"
    },
    "pos-right": {
      "tag": "xten",
      "name": "pos-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];top: 50%;transform: translateY(-50%);"
    },
    "pos-top-left": {
      "tag": "xten",
      "name": "pos-top-left",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: [$left||0];top: [$top||0];"
    },
    "pos-top-right": {
      "tag": "xten",
      "name": "pos-top-right",
      "element": "div",
      "style": "position: absolute;display: inline-block;right: [$right||0];top: [$top||0];"
    },
    "pos-top": {
      "tag": "xten",
      "name": "pos-top",
      "element": "div",
      "style": "position: absolute;display: inline-block;left: 50%;top: [$top||0];transform: translateX(-50%);"
    },
    "quickplay": {
      "tag": "xten",
      "name": "quickplay",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: inline-block;position: relative;",
      "nodeStyle": "aspect-ratio: [$aspect-ratio||auto];",
      "css": ".wx-xten-quickplay .wx-xten-toolbar {display: none;}.wx-xten-quickplay.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-quickplay.quickplay-changed {border: 5px solid red;}.wx-xten-quickplay img {width: 100%; height: 100%; object-fit: cover; object-position: center; }.wx-xten-quickplay .wx-xten-toolbar > .close {display: none;}.wx-xten-quickplay .wx-xten-toolbar > .save {display: none;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-quickplay.quickplay-changed .wx-xten-toolbar > .save {display: inline-block;}",
      "load": "const value = await database.inlineValue(node, context, xten);if (value) {node.src = value;const video = node.findChildren('video')[0];video.attribs.src = value;}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "video",
            "attribs": {
              "src": "[$src||videos/test.mp4]",
              "width": "100%",
              "height": "100%",
              "autoplay": "true",
              "muted": "true",
              "loop": "true",
              "aspect-ratio": "[$aspect-ratio]",
              "child-idx": 0
            },
            "children": [],
            "text": null
          },
          {
            "tag": "toolbar",
            "attribs": {
              "top": "[$toolbar-top||0]",
              "left": "[$toolbar-left||0]",
              "right": "[$toolbar-right||auto]",
              "bottom": "[$toolbar-bottom||auto]",
              "child-idx": 1
            },
            "children": [
              {
                "tag": "icon",
                "attribs": {
                  "name": "save",
                  "class": "save",
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "upload short video"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvSaveShortVideo",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "upload",
                        "attribs": {
                          "name": "save-video",
                          "file": "changed-file",
                          "file-url": "uploaded-url",
                          "class": "save-video",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "class": "src",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": "toolbarParent['uploaded-url']"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "uploaded-url",
                          "class": "uploaded-url",
                          "child-idx": 3
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 4
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 5
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "close",
                  "class": "close",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "cancel"
                  },
                  {
                    "tag": "click",
                    "attribs": {
                      "fname": "_qvCancelShortVideoSave",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": "toolbarParent.getAttribute('src')"
                      },
                      {
                        "tag": "unset-var",
                        "attribs": {
                          "name": "changed-file",
                          "class": "changed-file",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "remove-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              },
              {
                "tag": "icon",
                "attribs": {
                  "name": "upload",
                  "class": "upload",
                  "child-idx": 2
                },
                "children": [
                  {
                    "tag": "tooltip",
                    "attribs": {
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "select video"
                  },
                  {
                    "tag": "event",
                    "attribs": {
                      "name": "click",
                      "fname": "_qvUploadVideo",
                      "class": "click",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "selectfile",
                        "attribs": {
                          "file-type": "video/*",
                          "file": "changed-file",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      },
                      {
                        "tag": "set-attrib",
                        "attribs": {
                          "name": "src",
                          "child": "video",
                          "class": "src",
                          "child-idx": 1
                        },
                        "children": [],
                        "text": "URL.createObjectURL(toolbarParent['changed-file'])"
                      },
                      {
                        "tag": "add-class",
                        "attribs": {
                          "classes": "quickplay-changed",
                          "child-idx": 2
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          }
        ],
        "text": null
      },
      "initElement": "element.setAttribute('src', element.querySelector('video').getAttribute('src'));"
    },
    "repeat": {
      "tag": "xten",
      "name": "repeat",
      "element": "div",
      "load": "const output = new DomNode('div');const children = node.children;if (!(children && children.length) && !text) {node.attribs.error = 'nothing to repeat';common.nodeerror('nothing to repeat', node);return;}const n = parseInt(node.getValue('n') || '0');const wrapper = new DomNode('div');for (var i = 0; i < n; i++) {const _clone = node.clone();_clone.children.forEach(child => {child.attribs['repeat-idx'] = i.toString();});wrapper.insertChildren('last', _clone.children);}node.empty();node.insertChildren(0, wrapper.children);"
    },
    "row": {
      "tag": "xten",
      "name": "row",
      "element": "div",
      "style": "display: flex;position: relative;",
      "nodeStyle": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
      "tablet": "flex-direction:[$tablet-direction||row];",
      "phone": "flex-direction:[$phone-direction||column];"
    },
    "screencover": {
      "tag": "xten",
      "name": "screencover",
      "element": "div",
      "style": "position: fixed;top: 0;left: 0;width: 100vw;height: 100vh;"
    },
    "show": {
      "tag": "xten",
      "name": "show",
      "element": "div",
      "mandatory": "role",
      "style": "display: none;",
      "initElement": "const user = getUser();const role = user ? user.role.trim() : 'public';var allow = element.getAttribute('role');if (allow == 'logged_in') {if (role != 'public') {element.style.display = 'initial';}return;}allow = allow ? allow.split(/\\s*\\,\\s*/) : [];if (allow.includes(role)) {element.style.display = 'initial';}"
    },
    "space": {
      "tag": "xten",
      "name": "space",
      "element": "span",
      "init": "const n = parseInt(node.getValue(node.attribs.n) || 1);node.text = '';for (var i = 0; i < n; i++) {node.text += '&nbsp;';}"
    },
    "sudo": {
      "tag": "xten",
      "name": "sudo",
      "element": "_hidden",
      "init": "const sudo = node.attribs.sudo || node.attribs.name;if (!sudo) {common.nodeerror('sudo name is mandatory ' + node.attribs.id, node);return true;}var selector = node.getValue('selector');if (selector) {context.style[selector + ':' + sudo] = node.text;return;}if (!node.parent.attribs.id) {node.parent.attribs.id = 'x-' + common.uuid();}selector = node.parent.attribs.id;context.style['#' + selector + ':' + sudo] = node.text;"
    },
    "textalign": {
      "tag": "xten",
      "name": "textalign",
      "element": "div",
      "nodeStyle": "text-align: [$align||center];"
    },
    "textedit": {
      "tag": "xten",
      "name": "textedit",
      "element": "div",
      "mandatory": "name",
      "allow": "owner, admin",
      "style": "display: block; width: 100%",
      "css": ".wx-xten-textedit { position: relative; }.wx-xten-textedit > .ql-toolbar {position: absolute;top: -67px;background-color: white;}.wx-xten-textedit > .ql-toolbar.hidden {display: none;}.wx-xten-textedit > .ql-toolbar.visible {display: block;}.wx-xten-textedit > .ql-container {border: none !important;font-family: inherit;font-size: inherit;}.wx-xten-textedit .ql-editor {padding: 0;line-height: inherit;}",
      "initElement": "const access = checkAccess(element);if (access) {var toolbarOptions = [['bold', 'italic', 'underline', 'strike'],['blockquote', 'code-block'],[{ 'list': 'ordered' }, { 'list': 'bullet' }],[{ 'script': 'sub' }, { 'script': 'super' }],[{ 'indent': '-1' }, { 'indent': '+1' }],[{ 'direction': 'rtl' }],[{ 'size': ['small', false, 'large', 'huge'] }],[{ 'header': [1, 2, 3, 4, 5, 6, false] }],[{ 'color': [] }, { 'background': [] }],[{ 'font': [] }],[{ 'align': [] }],['image', 'video'],['clean']];var editor = document.createElement('div');editor.className = 'editor';editor.innerHTML = element.innerHTML;element.innerHTML = '';element.appendChild(editor);editor = element.querySelector('.editor');var dirty = false;if (!xdata.quill) {xdata.quill = {};}const quill = new Quill(editor, {modules: {toolbar: toolbarOptions},theme: 'snow'});const toolbar = element.querySelector('.ql-toolbar');wxfns.addClass(toolbar, 'hidden');quill.getModule(\"toolbar\").addHandler(\"image\", (value) => {const upload = async () => {const file = await wxfns.selectFile('image/*');//const result = await wxfns.upload(element, 'save_image', null, file);const result = await wxfns.upload(element, 'save-image', null, file);const range = quill.getSelection();quill.insertEmbed(range.index, 'image', result.output);quill.setSelection(range.index + 1);};upload();});quill.on('text-change', function (delta, oldDelta, source) {dirty = true;});setInterval(function () {if (dirty) {dirty = false;const text = quill.root.innerHTML;//wxfns.transaction(element, 'save_page_data', text.trim());wxfns.transaction(element, 'save-page-data', text.trim());}}, 2000);const ImageBlot = Quill.import('formats/image');const Parchment = Quill.import('parchment');element.addEventListener('click', (e) => {e.stopPropagation();const toolbar = element.querySelector('.ql-toolbar');wxfns.addClass(toolbar, 'visible');wxfns.removeClass(toolbar, 'hidden');const img = Parchment.find(e.target);if (img instanceof ImageBlot) {quill.setSelection(img.offset(quill.scroll) - 1, 1, 'user');}});document.addEventListener('click', () => {const toolbar = element.querySelector('.ql-toolbar');wxfns.removeClass(toolbar, 'visible');wxfns.addClass(toolbar, 'hidden');});}",
      "load": "async (node, context, xten, prop) => {\n    const value = await database.inlineValue(node, context, xten);\n    if (value) {\n        node.text = value;\n    }\n}"
    },
    "toolbar": {
      "tag": "xten",
      "name": "toolbar",
      "element": "div",
      "style": "display: flex;gap: 1px;",
      "nodeStyle": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];"
    },
    "tooltip": {
      "tag": "xten",
      "name": "tooltip",
      "element": "div",
      "parentclass": "tooltip-parent",
      "style": "position: absolute;display: none;width: max-content;",
      "nodeStyle": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
      "initElement": "const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;const parentElement = element.parentElement;parentElement.addEventListener('mouseenter', () => {element.style.display = 'block';const tooltipRect = element.getBoundingClientRect();if ((tooltipRect.left + tooltipRect.width) > screenWidth) {element.style.right = 0;element.style.left = 'auto';}if ((tooltipRect.top + tooltipRect.height) > screenHeight) {element.style.top = '-' + tooltipRect.height + 'px';}});parentElement.addEventListener('mouseleave', () => {element.style.display = 'none';});"
    },
    "value": {
      "tag": "xten",
      "name": "value",
      "mandatory": "name",
      "load": "const value = await database.inlineValue(node, context, xten);var _value = value;if (value) {if (node.attribs.summary) {const chars = parseInt(node.attribs.summary);_value = _value.replace(/<[^>]+>/g, '').substring(0, chars);}node.text = _value;}"
    },
    "xbutton": {
      "tag": "xten",
      "name": "xbutton",
      "element": "button"
    },
    "xinput": {
      "tag": "xten",
      "name": "xinput",
      "element": "div",
      "mandatory": "name, type",
      "css": ".wx-xten-xinput[type=\"textarea\"] label {display: inline-block;}.wx-xten-xinput textarea {width: 100%;min-height: 100px;}.wx-xten-xinput input {width: 100%;height: calc(100%);}",
      "view": {
        "tag": "view",
        "attribs": {},
        "children": [
          {
            "tag": "row",
            "attribs": {
              "item-gap": "15px",
              "child-idx": 0
            },
            "children": [
              {
                "tag": "column",
                "attribs": {
                  "child-idx": 0
                },
                "children": [
                  {
                    "tag": "label",
                    "attribs": {
                      "xten": "inline",
                      "name": "input-label-[$name]",
                      "class": "input-label-[$name]",
                      "child-idx": 0
                    },
                    "children": [],
                    "text": "[$label||editable label]"
                  }
                ],
                "text": null
              },
              {
                "tag": "column",
                "attribs": {
                  "ratio": "3",
                  "child-idx": 1
                },
                "children": [
                  {
                    "tag": "if",
                    "attribs": {
                      "condition": "node.closest('.wx-xten-xinput').attribs.type != 'textarea'",
                      "child-idx": 0
                    },
                    "children": [
                      {
                        "tag": "input",
                        "attribs": {
                          "name": "[$name]",
                          "type": "[$type]",
                          "required": "[$required||false]",
                          "class": "[$name] xinput",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  },
                  {
                    "tag": "if",
                    "attribs": {
                      "condition": "node.closest('.wx-xten-xinput').attribs.type == 'textarea'",
                      "child-idx": 1
                    },
                    "children": [
                      {
                        "tag": "textarea",
                        "attribs": {
                          "name": "[$name]",
                          "required": "[$required||false]",
                          "class": "[$name] xinput",
                          "child-idx": 0
                        },
                        "children": [],
                        "text": null
                      }
                    ],
                    "text": null
                  }
                ],
                "text": null
              }
            ],
            "text": null
          },
          {
            "tag": "gap",
            "attribs": {
              "height": "5px",
              "child-idx": 1
            },
            "children": [],
            "text": null
          }
        ],
        "text": null
      }
    },
    "xstyle": {
      "tag": "xten",
      "name": "xstyle",
      "element": "_hidden",
      "init": "const selector = node.getValue('selector') || '#' + node.attribs.id;if (!selector) {common.nodeerror('selector or element id is mandatory', node);return false;}context.style[selector] = node.text;"
    }
  },
  "pages": [
    "_home",
    "blog",
    "contact",
    "login",
    "layout-example",
    "blog-post-default"
  ],
  "contexts": {
    "_home": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-8d7e19b8-5e9e-4a70-ada3-c45c57423fd1-476": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-c4d864a9-e78e-4a0f-b32f-f6431d45c6d1-8233": "#x-c4d864a9-e78e-4a0f-b32f-f6431d45c6d1-8233 > img {aspect-ratio: [$aspect-ratio||auto];}#x-c4d864a9-e78e-4a0f-b32f-f6431d45c6d1-8233.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089": "#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navitem:hover { color: blue }#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "banner": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-banner > .wx-view-datalist {display: flex;position: relative;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem {display: none;width: 100%;}.wx-xten-banner > .wx-view-datalist > .wx-xten-listitem.active {display: block;}.wx-xten-banner .banner-controls {display: display-block;}",
        "x-339687d4-8acc-4f31-86cc-728e6062a8c6-2256": "#x-339687d4-8acc-4f31-86cc-728e6062a8c6-2256 > .wx-view-datalist > .wx-xten-listitem {aspect-ratio: 3.5;}",
        "x-b1a0681c-80f3-4bcb-8974-2981c3459c97-4758": "#x-b1a0681c-80f3-4bcb-8974-2981c3459c97-4758 > img {aspect-ratio: [$aspect-ratio||auto];}#x-b1a0681c-80f3-4bcb-8974-2981c3459c97-4758.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "inline": ".inline._unsaved_inline {border: 1px solid yellow;}.inline._empty_inline {border: 1px solid red;width: 100%;min-width: 50px;}",
        "textedit": ".wx-xten-textedit { position: relative; }.wx-xten-textedit > .ql-toolbar {position: absolute;top: -67px;background-color: white;}.wx-xten-textedit > .ql-toolbar.hidden {display: none;}.wx-xten-textedit > .ql-toolbar.visible {display: block;}.wx-xten-textedit > .ql-container {border: none !important;font-family: inherit;font-size: inherit;}.wx-xten-textedit .ql-editor {padding: 0;line-height: inherit;}",
        "grid": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }\n.wx-xten-grid > .wx-view-datalist {flex-wrap: wrap;}",
        "x-be4fc3a3-ac21-4c28-8897-0b4e892dc729-8835": "#x-be4fc3a3-ac21-4c28-8897-0b4e892dc729-8835 > .wx-view-datalist {flex-direction: [$orientation||row];gap: 15px;}#x-be4fc3a3-ac21-4c28-8897-0b4e892dc729-8835 > .wx-view-datalist > .wx-xten-listitem {flex-grow: [$grow||0];flex-shrink: [$shrink||0];flex-basis: calc((100% / 2) - 15px * (2 - 1) / 2 );width: calc((100% / 2) - 15px * (2 - 1) / 2 );}",
        "x-8f2518d8-0cfc-4467-966d-92b92206aa25-4002": "#x-8f2518d8-0cfc-4467-966d-92b92206aa25-4002 > img {aspect-ratio: 0.75;}#x-8f2518d8-0cfc-4467-966d-92b92206aa25-4002.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "list": ".wx-xten-_list > .wx-view-datalist {position: relative;display: flex;width: 100%;}.wx-xten-_list .list-item-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}.wx-xten-_list .list-toolbar {display: none;}.wx-xten-_list.wx-state-editable .list-toolbar {display: flex; }",
        "x-e90b8230-d920-4001-bf02-83f67210a7cb-7189": "#x-e90b8230-d920-4001-bf02-83f67210a7cb-7189 > .wx-view-datalist {display: flex;flex-direction: row;gap: 32px;width: 100%;}#x-e90b8230-d920-4001-bf02-83f67210a7cb-7189 > .wx-view-datalist > .wx-xten-listitem {flex: 1 1 0;}",
        "x-f3aff145-4f27-461b-9841-d7fbf53d8e80-8976": "#x-f3aff145-4f27-461b-9841-d7fbf53d8e80-8976 > img {aspect-ratio: 1;}#x-f3aff145-4f27-461b-9841-d7fbf53d8e80-8976.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: calc(50% - 15px);left: calc(50% - 15px);right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "x-acda79da-92f9-443e-8361-8e303f15e36e-3771": "#x-acda79da-92f9-443e-8361-8e303f15e36e-3771 > img {aspect-ratio: 1.5;}#x-acda79da-92f9-443e-8361-8e303f15e36e-3771.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "x-6c304049-c463-4b63-bb0b-ad8069443b4d-7197": "#x-6c304049-c463-4b63-bb0b-ad8069443b4d-7197 > img {aspect-ratio: 1.5;}#x-6c304049-c463-4b63-bb0b-ad8069443b4d-7197.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-d3c9dfa4-434d-44c5-8aac-74ecba7c5adb-8843": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-3c39cd70-4ecd-4e10-8885-b20339c7953d-7876": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-57b7fc54-8e60-4642-8d56-2ba72f71c7de-3309": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-47dc49b7-397a-48e4-9247-bcdc62fc37f6-8078": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-7449dcc9-00ca-4d32-aff5-89f47888693d-7670": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-dea20e8f-9b63-491b-8fed-c73e0fd3344f-3187": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-7b75b479-8a9b-4905-a72c-e99e31e72d6c-1779": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3de81586-695d-4b96-b9b7-76db10384cbf-3074": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-315a4fa7-558e-4f88-8f97-fcc383962b70-7179": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e682706a-7b80-43d2-924e-d6ae78827608-1051": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-95d041ff-cb2f-40dd-8b50-89c04fc6de07-5688": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-74064139-047a-4168-882b-78e4b6405f6c-1437": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-a852ef6b-2d7e-4269-995a-3c7bf86b7215-6010": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5e95613f-7a92-45e0-9d8d-a6f7bdc33de8-2071": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-57811f95-2378-4284-a25d-a264e61b071b-4890": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b5ad929f-c65d-4b3f-94c2-6b77057037b9-4809": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-3a3eebed-46d4-4577-b28d-03a815d4b6bb-7381": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c5477788-1328-45c6-af01-3fea39abaf67-8641": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-91118b54-ddfa-41bb-aca7-e222934b146a-2007": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-643a6ee0-e6cf-42ca-988a-73c6abe0ef41-99": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-cde26b21-54e9-43d7-9ac3-bcbb48ca1944-123": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b72b463e-5d43-497a-9452-a4b7775ae4c3-5974": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-c18d2630-cafa-4347-8ec0-802ced044c97-5013": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-2bd72690-9ad3-41ba-8f7b-a89a0403c722-4596": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-7ec92da2-aae9-45bd-901c-5407e1f60f29-9589": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-396cde84-2b75-468a-9ba4-f32eb46cf746-1792": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-32446cbe-b96b-45fd-b4a9-9df20e92909a-9058": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-2acbe3d7-02f4-4b12-ad74-32697f993d88-2805": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-97db35bc-a580-4652-8cab-f665d3b73e06-389": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-c4d864a9-e78e-4a0f-b32f-f6431d45c6d1-8233": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-00f1162a-f78e-494c-accb-585545dacfdb-4470": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-ef0ced35-9acb-4d73-b109-dd7240ad4739-1201": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-e58ec49b-0096-40fd-994f-cc31a86294f5-4201": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c25f69c5-c53e-479a-a9f3-4262f9ba9efb-460": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-16f20688-a6b8-438c-9327-45ee581011e9-7747": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1cd91bb5-184f-41e0-ba47-339565d8612b-341": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-1b6937e1-f092-47b4-b9b8-668b90484267-9089": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-75952fdb-3a4e-4bbe-b5f1-ba4363bc19d5-6365": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-8aea9504-82f0-49a9-82e4-cdc64ccf1191-8916": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-17d28dc8-56c9-402e-a0fb-8900bba37c41-3089": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-bbcc2122-82c4-493c-b854-9a4e58a55195-9368": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-e207424c-c96d-4a2a-b731-a785be435013-8213": "height: 30px;",
        ".wx-xten-banner": "position: relative;",
        "#x-b1a0681c-80f3-4bcb-8974-2981c3459c97-4758": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-47e8e070-d857-4b72-b3a1-0200192d4867-233": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-c55b2e6e-9b77-4be5-98fa-479cdc7689d5-4293": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-092c300d-83ab-4eac-90de-14320ec51b79-2518": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0921bcf0-1823-4977-b499-9dbc62b194ae-2751": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-113b5909-f902-4c44-b1f9-29bfcc87a2db-2528": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-681fdbcd-7f49-4c55-95d4-0c25c7ee4e30-6421": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-b98e3bda-8436-49ff-8178-e1f2586a2753-3258": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        ".wx-xten-pos-middle": "position: absolute;display: inline-block;left: 50%;top: 50%;transform: translate(-50%, -50%);",
        ".wx-xten-inline": "display: inline-block;",
        "#x-a96dcdf4-5275-45e2-9edd-d16d005f5fd2-5178": "height: 10px;",
        "#x-eebe361a-1b82-4474-89f8-9469d633e553-8886": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-8cf0b0bf-2b3b-4759-bf87-54682051e853-2092": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-b6549905-8d58-4ae8-8fd2-4fb8c4cf5fa6-5951": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        ".wx-xten-pos-left": "position: absolute;display: inline-block;",
        "#x-021eadc7-6fcd-4506-ba96-40ad816ba5b2-6169": "left: [$left||0];top: 50%;transform: translateY(-50%);",
        "#x-f313780b-bf5a-41da-b324-0368dd00f59d-3046": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        ".wx-xten-pos-right": "position: absolute;display: inline-block;right: [$right||0];top: 50%;transform: translateY(-50%);",
        "#x-2acf6015-1fca-4d78-8e5b-0277fdfd02b4-4300": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        ".wx-xten-pos-bottom": "position: absolute;display: inline-block;left: 50%;bottom: 30px;transform: translate(-50%, -100%);",
        "#x-9ed5ea50-4aec-4521-ba83-aeba0a4c2c14-1463": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-cbcdfd6e-1399-4155-9884-3cab3e16f108-9062": "height: 30px;",
        "#x-11f8ed60-8a38-415c-8359-dcb04fe952a3-3746": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-e18653ce-8801-4b16-8451-b6fc18c0ed39-7517": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-1c3979f8-289a-4aa9-b7c7-03d63e9bc365-1483": "height: 30px;",
        "#x-4c4ccaac-527e-46be-ab77-70029ca7ef7e-4013": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        ".wx-xten-textedit": "display: block; width: 100%",
        "#x-eba51f88-390a-42f1-94a3-e6c2fcfd8faf-781": "height: 30px;",
        "#x-9a40deb5-c43e-4c25-b75a-8f7f6524cec5-7028": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-d8fc810a-0c0c-4126-9440-0a877b3049d8-4012": "height: 30px;",
        ".wx-xten-grid": "position: relative;",
        "#x-8f2518d8-0cfc-4467-966d-92b92206aa25-4002": "aspect-ratio: 0.75;",
        "#x-23dfc609-8b5f-452f-826f-eff70fc0bf5e-6517": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-404c5021-c78c-4682-9788-7a756057c889-9986": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-121704ff-69f4-4a64-b6eb-a8af4bdb146e-4944": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9d550c7a-1e7f-4a84-8d36-c332216ccc2f-8136": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d59fff16-eae1-4eed-a384-f0d218097691-3594": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-dfefbabc-9a21-4c7f-ae9e-c42204fff5c5-9265": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-db8ab2f7-6ac6-4e4d-bb9e-ad6f15205944-8818": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f314c5d1-c123-4b8c-883a-6ce50d65e16b-2966": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-ef273a2c-63ba-4c31-b58f-5478360c34c0-4906": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d933166f-2d03-43d3-ab85-18e50b0f9738-3587": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-96630fce-c5ba-4054-abee-58cd729729c2-6538": "height: 30px;",
        "#x-1e2a7ede-4300-40be-ba84-02769a89d634-7884": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-f0ab5915-4ed7-42e7-ab88-94d4a09ff812-6513": "height: 30px;",
        ".wx-xten-list": "position: relative;",
        "#x-56627f8c-bafd-4fdd-8c78-0993e1801025-6056": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        ".wx-xten-circle": "overflow: hidden;",
        "#x-4b37d6e3-fd3e-43bd-b7c9-36b58c896736-8990": "border-radius: [$radius||50%];",
        "#x-f3aff145-4f27-461b-9841-d7fbf53d8e80-8976": "aspect-ratio: 1;",
        "#x-d8c13a1f-0e4f-4224-b5e2-95989fe953f7-32": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-333ce4d9-2338-4c96-9b8e-9271ec28295e-3159": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-9397bc10-6148-4d92-92d7-3d0e7429f392-4482": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-2d8ad56c-6d6a-4c1b-96db-62a06070be2a-7342": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-75a9d9e3-78f3-4393-a616-05cf977664e4-4361": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-be01490a-f234-4466-b164-61e376e29ca8-3423": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-b9152b26-10dc-4575-b56b-3c570ae54cec-7713": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e8caffec-abc5-41bf-a01b-e7e326804d39-8735": "width:[$width||100%];height:fit-content;justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-15e048e4-1a73-4cac-b559-973c23e788c7-4916": "top: [$top||0];right: 31px;left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-1fff8662-f6ff-47ad-9e09-dc74280ecdd4-2717": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-20194580-16d0-4373-a022-ad4fbe3fa813-8122": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0316f2cb-2bca-4842-9fde-99fa110c5c34-7818": "height: 30px;",
        "#x-9ed5981a-61b9-4b6d-9f64-98583eac7a99-2260": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-1099cabf-1bdd-4594-8c96-d95edea3fc24-8569": "height: 30px;",
        "#x-0c0c5483-def3-4304-9c71-868efdfab14d-9890": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-c904fa49-7987-496c-8e02-23d921ad5046-2337": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-acda79da-92f9-443e-8361-8e303f15e36e-3771": "aspect-ratio: 1.5;",
        "#x-4a30f6cc-3323-45fe-b574-82c51a94c47d-9073": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-4aeb92fa-ce08-4740-9958-9f078c4705d3-9499": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-1726e652-a3ce-4986-ae6a-a2a2dec209a3-6374": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9f0af0bd-1f9a-4f75-ac0c-ab749b1c6751-6327": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-0a7395c1-ff6c-4fc9-8c77-9448c2b0b1b4-2516": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a7010ea4-8d2e-4689-a758-b091cf21025b-5021": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-42c5813a-30b1-497e-9720-8e7a7388554f-8863": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5a09a4f6-7aae-41e9-ae21-2df01faba04c-6370": "flex: 6 6 1px;",
        "#x-e223316d-e3f8-4dfe-9767-eef52c389339-6749": "height: 30px;",
        "#x-762833d8-8134-461d-992b-2728eb1be785-8665": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-881b8d33-57be-4013-8ea1-c92ecdc741dd-2114": "flex: 6 6 1px;",
        "#x-4e9e307c-d977-4bf6-b645-9c5d29d02208-7606": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-6c304049-c463-4b63-bb0b-ad8069443b4d-7197": "aspect-ratio: 1.5;",
        "#x-3db752dd-31b8-4762-a54a-f18dc8185891-1100": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-289ad3b5-5c58-43ca-903a-c077b06374d9-4051": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-41d360f5-6b89-454f-9ce7-a4ce0c554170-9551": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-8fc922a4-b30d-4ff0-8154-11e33178cd40-6868": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-43ca04cc-1044-454d-8937-f2a1cbd60259-2333": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-a57af170-2b4b-49a8-92fc-f1b5d657be5f-8025": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-478b3773-8032-423c-8a71-f47daefee34b-4128": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-df2a3af5-e3d3-48d9-ba3c-dcabbfe29913-2596": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {
        "libs/quill.min.js": "libs/quill.min.js",
        "libs/quill.snow.css": "libs/quill.snow.css"
      },
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};",
        "initElement['banner']": "initElement['banner'] = (element) => {\n    const item = element.querySelector('.wx-xten-listitem');\n    if (item) {\n        item.classList.add('active');\n    }\n    const icons = element.querySelectorAll('.change-slide');\n    icons.forEach(_icon => {\n        _icon.addEventListener('click', (event) => {\n            event.preventDefault();\n            const element = event.target.closest('.wx-xten-banner');\n            var active = element.querySelector('.wx-xten-listitem.active');\n            if (active) {\n                const idx = active.getAttribute('list-idx');\n                active.classList.remove('active');\n            }\n            const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + _icon.getAttribute('slide-idx') + '\"]');\n            target && target.classList.add('active');\n        });\n    });\n};",
        "initElement['inline']": "initElement['inline'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.setAttribute('contenteditable', true);\n        wxfns.addClass(element, 'editable');\n        const prevText = element.innerText.trim();\n        if (!prevText.length) {\n            element.classList.add('_empty_inline');\n        } else {\n            element.classList.remove('_empty_inline');\n        }\n        element.__inlineValue = prevText;\n    } else {\n        element.removeAttribute('contenteditable');\n        wxfns.removeClass(element, 'editable');\n    }\n};",
        "_inlineEventKeyUp": "const _inlineEventKeyUp = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text != origValue) {\n        element.classList.add('_unsaved_inline');\n        const timout = setTimeout(((_element) => {})(event.target), 3000);\n    } else {\n        element.classList.remove('_unsaved_inline');\n    }\n};",
        "_inlineEventBlur": "const _inlineEventBlur = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (text == origValue) {\n        return;\n    }\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text) {\n        wxfns.transaction(element, 'save-page-data', element.innerText.trim());\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n        element.__inlineValue = text;\n    } else {\n        element.innerText = element.__inlineValue;\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n    }\n};",
        "event_icon_x_8cf0b0bf_2b3b_4759_bf87_54682051e853_2092_onclick": "const event_icon_x_8cf0b0bf_2b3b_4759_bf87_54682051e853_2092_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};",
        "event_icon_x_f313780b_bf5a_41da_b324_0368dd00f59d_3046_onclick": "const event_icon_x_f313780b_bf5a_41da_b324_0368dd00f59d_3046_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-banner');\n    var active = element.querySelector('.wx-xten-listitem.active');\n    idx = parseInt(active ? active.getAttribute('list-idx') : '0');\n    if (active) {\n        active.classList.remove('active');\n    }\n    var total = element.querySelectorAll('.wx-xten-listitem').length;\n    const next = idx == 0 ? total - 1 : idx - 1;\n    const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');\n    target && target.classList.add('active');\n};",
        "event_icon_x_2acf6015_1fca_4d78_8e5b_0277fdfd02b4_4300_onclick": "const event_icon_x_2acf6015_1fca_4d78_8e5b_0277fdfd02b4_4300_onclick = async (event) => {\n    const element = event.target.closest('.wx-xten-banner');\n    var active = element.querySelector('.wx-xten-listitem.active');\n    const idx = parseInt(active ? active.getAttribute('list-idx') : '0');\n    if (active) {\n        active.classList.remove('active');\n    }\n    var total = element.querySelectorAll('.wx-xten-listitem').length;\n    const next = idx == total - 1 ? 0 : idx + 1;\n    const target = element.querySelector('.wx-xten-listitem[list-idx=\"' + next.toString() + '\"]');\n    target && target.classList.add('active');\n};",
        "initElement['textedit']": "initElement['textedit'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        var toolbarOptions = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{\n                'list': 'ordered'\n            }, {\n                'list': 'bullet'\n            }],\n            [{\n                'script': 'sub'\n            }, {\n                'script': 'super'\n            }],\n            [{\n                'indent': '-1'\n            }, {\n                'indent': '+1'\n            }],\n            [{\n                'direction': 'rtl'\n            }],\n            [{\n                'size': ['small', false, 'large', 'huge']\n            }],\n            [{\n                'header': [1, 2, 3, 4, 5, 6, false]\n            }],\n            [{\n                'color': []\n            }, {\n                'background': []\n            }],\n            [{\n                'font': []\n            }],\n            [{\n                'align': []\n            }],\n            ['image', 'video'],\n            ['clean']\n        ];\n        var editor = document.createElement('div');\n        editor.className = 'editor';\n        editor.innerHTML = element.innerHTML;\n        element.innerHTML = '';\n        element.appendChild(editor);\n        editor = element.querySelector('.editor');\n        var dirty = false;\n        if (!xdata.quill) {\n            xdata.quill = {};\n        }\n        const quill = new Quill(editor, {\n            modules: {\n                toolbar: toolbarOptions\n            },\n            theme: 'snow'\n        });\n        const toolbar = element.querySelector('.ql-toolbar');\n        wxfns.addClass(toolbar, 'hidden');\n        quill.getModule(\"toolbar\").addHandler(\"image\", (value) => {\n            const upload = async () => {\n                const file = await wxfns.selectFile('image/*');\n                //const result=await wxfns.upload(element,'save_image',null,file);\n                const result = await wxfns.upload(element, 'save-image', null, file);\n                const range = quill.getSelection();\n                quill.insertEmbed(range.index, 'image', result.output);\n                quill.setSelection(range.index + 1);\n            };\n            upload();\n        });\n        quill.on('text-change', function(delta, oldDelta, source) {\n            dirty = true;\n        });\n        setInterval(function() {\n            if (dirty) {\n                dirty = false;\n                const text = quill.root.innerHTML;\n                //wxfns.transaction(element,'save_page_data',text.trim());\n                wxfns.transaction(element, 'save-page-data', text.trim());\n            }\n        }, 2000);\n        const ImageBlot = Quill.import('formats/image');\n        const Parchment = Quill.import('parchment');\n        element.addEventListener('click', (e) => {\n            e.stopPropagation();\n            const toolbar = element.querySelector('.ql-toolbar');\n            wxfns.addClass(toolbar, 'visible');\n            wxfns.removeClass(toolbar, 'hidden');\n            const img = Parchment.find(e.target);\n            if (img instanceof ImageBlot) {\n                quill.setSelection(img.offset(quill.scroll) - 1, 1, 'user');\n            }\n        });\n        document.addEventListener('click', () => {\n            const toolbar = element.querySelector('.ql-toolbar');\n            wxfns.removeClass(toolbar, 'visible');\n            wxfns.addClass(toolbar, 'hidden');\n        });\n    }\n};",
        "event_icon_x_ef273a2c_63ba_4c31_b58f_5478360c34c0_4906_onclick": "const event_icon_x_ef273a2c_63ba_4c31_b58f_5478360c34c0_4906_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};",
        "event_icon_x_1fff8662_f6ff_47ad_9e09_dc74280ecdd4_2717_onclick": "const event_icon_x_1fff8662_f6ff_47ad_9e09_dc74280ecdd4_2717_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var target = toolbarParent;\n        if ('[$target]' == 'event-target') {\n            target = eventCurrentTarget;\n        }\n        const result = await wxfns.transaction(target, 'add-list-item', [$data || null]);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['[$output]'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        window.location.reload();\n    }\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "_home",
      "allow": ""
    },
    "blog": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-ab8e8648-f066-44c3-b0a1-38d7cebd8793-4791": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-da44aafb-d358-4845-af4a-7003cade9354-3375": "#x-da44aafb-d358-4845-af4a-7003cade9354-3375 > img {aspect-ratio: [$aspect-ratio||auto];}#x-da44aafb-d358-4845-af4a-7003cade9354-3375.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511": "#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navitem:hover { color: blue }#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "inline": ".inline._unsaved_inline {border: 1px solid yellow;}.inline._empty_inline {border: 1px solid red;width: 100%;min-width: 50px;}",
        "object-list": ".wx-xten-object-list .wx-view-list-item {position: relative; width: 100%;}.wx-xten-object-list .wx-view-list-parent {position: relative;}.wx-xten-object-list .wx-view-list-parent:not(tbody) {display: flex; flex-wrap: wrap; width: 100%;}.wx-xten-object-list .object-list-toolbar {display: none;}.wx-xten-object-list .object-item-toolbar {display: none;}.wx-xten-object-list.wx-state-editable .object-list-toolbar {display: inline-block;}.wx-xten-object-list.wx-state-editable .object-item-toolbar {display: inline-block;}",
        "x-787a89d8-1c70-415a-b297-06b6ad2b6730-756": "#x-787a89d8-1c70-415a-b297-06b6ad2b6730-756 .wx-view-list-parent:not(tbody) {flex-direction: row; gap:15px;}#x-787a89d8-1c70-415a-b297-06b6ad2b6730-756 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: calc((100% / 3) - 15px * (3 - 1) / 3 );[$list-item-style|| ]}",
        "x-e075b3c9-8740-45d9-9cb8-426940d34a60-9333": "#x-e075b3c9-8740-45d9-9cb8-426940d34a60-9333 .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#x-e075b3c9-8740-45d9-9cb8-426940d34a60-9333 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}",
        "x-ac4de484-121a-4b76-9e6d-865492162dce-9054": "#x-ac4de484-121a-4b76-9e6d-865492162dce-9054 .wx-view-list-parent:not(tbody) {flex-direction: [$orientation||row]; gap:[$item-gap||0];}#x-ac4de484-121a-4b76-9e6d-865492162dce-9054 .wx-view-list-parent:not(tbody) .wx-view-list-item {flex-basis: calc((100% / [$columns||1]) - [$item-gap||0px] * ([$columns||1] - 1) / [$columns||1] );[$list-item-style|| ]}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-10263219-1923-4b7f-b3d8-fe1e3f032181-5601": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-15e929c1-6e15-42fc-ada9-67ef58d15a1b-287": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-709d2d36-f277-42e3-94c4-679e184002b9-2136": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-5cd62043-3822-49d1-b617-b921a7646351-61": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-5777bc60-0456-49f6-b62e-e653fabebe73-9025": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-dc9f6983-1c4b-4371-bbbf-788fb080fa19-7056": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-5a11e2cf-8fc3-4e23-9f93-8d9375988326-299": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f148bbf0-e85c-4f18-8ea0-7e2e0c15639e-1047": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-c4290978-80a1-48d1-b973-a937301c98b4-6740": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-14fd4f6a-73d0-4ad5-887f-ccaa90d4c48d-6187": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-ad8359bc-b630-4c0c-988b-f7c2fb6f1def-4530": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5c110243-2550-4e91-a75d-191922be0364-8258": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-6ca07642-60a4-4331-9362-8c93c0390605-8557": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-cae41e74-005b-4f79-8c82-a220a85822da-8355": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-ee4c05c7-449e-4428-bdd1-6c84ceec12bf-6714": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-efb27f80-f49e-4b82-847d-beac04262184-5822": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-926623a2-f947-409a-82fb-3ec2656a2ed2-8503": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-ac2cb4b0-f911-489b-a904-bd3c43ec5e73-8770": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-31d383eb-99a9-4724-840b-70e222bd37ea-8745": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4377cb1d-3add-45fc-b869-07de641540e1-8424": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-e92227f5-1c37-4995-805f-f39a123c6bfc-2418": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-ac3dbcb0-6361-45aa-a1e7-e301ff979411-5756": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-380d4287-4698-4308-a0ad-91b919de6c72-6945": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-2dbeeb0e-bc64-42c2-a2f9-64e64f3096e3-5419": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e2aeaf62-78b1-4e94-8877-1cbbff015747-4377": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-5e01d3a4-91df-4a4a-9dd5-6623a76eb3ad-7194": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-88c7cad6-4c5d-4a50-b4c7-512f379dfb18-8377": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-ba0d352a-e6fb-46a0-bf0d-0df36d0e60d8-2300": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-339c5922-7e94-4760-9350-385af5aab70a-7403": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-da44aafb-d358-4845-af4a-7003cade9354-3375": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-e409261d-55f5-47db-b4d0-abdb81bbf7a6-1599": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-0bc5fb6a-efb5-4764-ae2c-821bfee84504-1581": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-044e83d0-b618-4e4f-b3fc-2fcef4524c91-4374": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-e4dd6517-ae46-46fd-9296-a8797c957de6-812": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-9919a052-6d25-4e5c-baf2-4a805c985c7c-7767": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-2cf0f7f0-e083-4df1-afed-ccb00ec388d2-9093": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-1a971724-2d26-4312-9502-987149f03b7e-6771": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1c36738d-d07f-44f3-a8d1-069b8e9f5187-6384": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-eba0b2fc-674b-4318-bd7b-2d78c7903716-8655": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-3144c35b-91ff-41fc-9476-a5c6dc6988f2-1511": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        ".wx-xten-inline": "display: inline-block;",
        ".wx-xten-object-list": "position: relative;",
        "#x-fd57a47c-fcd3-4277-9761-fc372f65aad7-2850": "height: 30px;",
        "#x-be56150e-4313-4225-a011-a809df2d50e6-2367": "height: 30px;",
        "#x-869a7cba-5115-4f98-9947-223ebbd27d9f-471": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};",
        "initElement['inline']": "initElement['inline'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.setAttribute('contenteditable', true);\n        wxfns.addClass(element, 'editable');\n        const prevText = element.innerText.trim();\n        if (!prevText.length) {\n            element.classList.add('_empty_inline');\n        } else {\n            element.classList.remove('_empty_inline');\n        }\n        element.__inlineValue = prevText;\n    } else {\n        element.removeAttribute('contenteditable');\n        wxfns.removeClass(element, 'editable');\n    }\n};",
        "_inlineEventKeyUp": "const _inlineEventKeyUp = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text != origValue) {\n        element.classList.add('_unsaved_inline');\n        const timout = setTimeout(((_element) => {})(event.target), 3000);\n    } else {\n        element.classList.remove('_unsaved_inline');\n    }\n};",
        "_inlineEventBlur": "const _inlineEventBlur = async (event) => {\n    const element = event.target;\n    const text = element.innerText.trim();\n    const origValue = element.__inlineValue;\n    if (text == origValue) {\n        return;\n    }\n    if (!text) {\n        element.classList.add('_empty_inline');\n    } else {\n        element.classList.remove('_empty_inline');\n    }\n    if (text) {\n        wxfns.transaction(element, 'save-page-data', element.innerText.trim());\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n        element.__inlineValue = text;\n    } else {\n        element.innerText = element.__inlineValue;\n        element.classList.remove('_unsaved_inline');\n        element.classList.remove('_empty_inline');\n    }\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "blog",
      "allow": ""
    },
    "contact": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-02e25d5c-3137-4ae3-8508-d84eb330b31d-9538": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-4f50dfe4-2d2c-4a51-a7d0-8576332eaa9b-9003": "#x-4f50dfe4-2d2c-4a51-a7d0-8576332eaa9b-9003 > img {aspect-ratio: [$aspect-ratio||auto];}#x-4f50dfe4-2d2c-4a51-a7d0-8576332eaa9b-9003.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-4d97c845-3c43-4965-9ef7-a692b458b439-7626": "#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navitem:hover { color: blue }#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-524dc0fe-4677-46df-9af6-c91ffd68fd2a-6464": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-a2a11e33-c89a-4dc8-9197-7b7d8801c779-1409": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-995fa8e3-6df9-4064-9d81-6736299e4389-6427": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-2f6ef704-3ed6-4717-89fe-8fa347f5b118-2131": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-e00f4ea6-5e28-43d9-81b2-a95dd7c98cae-7751": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-41ddb8e2-664d-427c-be42-4d00d9025894-3459": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-e1e5af15-3874-4bb7-a511-a3c61809c4aa-9833": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d09d9a1d-f846-423c-a2cc-8b76b8fbc242-3657": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-4f247162-9196-4c8f-b6a7-03d06037ca0f-5402": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b7dd21c9-c0ce-4eb3-8153-cb9215640e4c-7118": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-44f00d81-2195-4843-a51f-d08f89ace4c4-3238": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3a978c13-0b9f-4566-854e-3b574a3f86a8-4987": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-84c9297b-1886-48e8-a62d-a77a30c50e80-896": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b9e4688a-7680-4446-a877-7aae24ed6028-758": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-cb37405a-3131-44cc-a55a-0cfc0b18e847-746": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-0afc95a9-881f-4797-bb34-6546aa02be27-3958": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-83e39d96-0fee-4985-a95c-a36e618a00ee-4319": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-58cce103-819f-47ce-9506-a99b4d99582e-3618": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-da1b5e5b-7cec-45cb-bbe7-0209924a955a-6742": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6326cc3f-cd06-47d7-bb1f-6fec582b30ff-2430": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-c31ed072-4363-4043-85e2-b061e232ba5f-8657": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-3a351401-2737-4b75-9224-74de96117048-5091": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-69c63c6f-e2d9-4b2e-b9fa-2beb7f436c47-753": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-7efd6ce9-ba3a-4b4c-b772-7fff0cc2e3db-9138": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1f0ee705-7b9f-43a5-af92-c94ee119fa5f-6165": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-ac4ae18f-e869-43a4-8a71-3fd142d72c5c-4190": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-84ab6573-3451-4848-941c-5200607d1d73-8589": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-e0079b34-5423-4279-a054-9363d369b666-5674": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-9217b1a2-189c-465a-b81d-558ed7e48346-1936": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-4f50dfe4-2d2c-4a51-a7d0-8576332eaa9b-9003": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-6a1b06b8-befa-4d0b-a393-8155f3701fb6-1772": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-f14c94fe-8bb1-42a5-aa07-67e8a6b600d9-5811": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-e146ebed-d5ad-4156-b5c3-4b8b398a70fa-7554": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b1c6912e-fbb1-48ab-80df-a8350240136c-436": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d41fdad5-0070-4ed7-8bde-f50c3c4fae2e-4962": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-65604996-a456-40fe-b653-cbe908bdd743-7132": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-e447ec58-7fbf-4fd3-9325-c4c2a69a5702-9553": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-68c74d90-4b6b-4a78-881f-14e41e03af1b-4887": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-2ba5e49b-9230-4df8-abab-25c65e879915-4152": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-4d97c845-3c43-4965-9ef7-a692b458b439-7626": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-27365416-4580-47e1-9d96-d51b1dd8ab8e-4896": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "contact",
      "allow": ""
    },
    "login": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-28bbea12-a653-49ff-9643-96bab81f3cf6-3851": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-6bd62d67-5f2e-422b-8cdf-55a21227c99c-7991": "#x-6bd62d67-5f2e-422b-8cdf-55a21227c99c-7991 > img {aspect-ratio: [$aspect-ratio||auto];}#x-6bd62d67-5f2e-422b-8cdf-55a21227c99c-7991.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142": "#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navitem:hover { color: blue }#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-ea73aaa6-ca17-4bbc-a2e6-ef8157cf72a2-9842": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-d2a86e66-0e67-40b8-90a2-d7dc1e0b402e-9069": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-d5e30f3c-1365-4510-bc9b-e33aa6827ab0-3063": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-14318b2f-b384-48fe-a022-77ce790d8054-5764": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-cb1084fa-f47f-4eda-abee-cd5b33948548-8352": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-4826dbc9-3aec-408e-96c3-16ba5579b652-3335": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-55718901-ea21-43d1-b3aa-015a749f06eb-7621": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9fe1085a-e71c-4b3c-a620-6fd8ee42ed77-4107": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-7f782b01-53b0-4a06-a704-6486cd7da644-8281": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9ea5e499-3d30-4f4d-a299-364d0f916cc1-8065": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-f1b98561-5c0d-4269-b6e5-03741ba1f1c8-7165": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-61b97978-5844-4333-bfbc-97b4153ae5a3-5384": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-e4434eda-13eb-41ed-a7f4-29c1f6173f34-9910": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c76023dd-47a3-464c-9822-da2b5a4aebbd-422": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-0d2ff389-0c97-41ff-8e66-bca900c44383-1595": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4f4a9c94-c8c8-434d-b9b8-03900c3bd9ff-9387": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-74010206-744b-4447-b0a4-d9318c367df5-3501": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-9fa2e2f5-ffb8-4a7f-bd93-91b2e84c0546-8436": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-2d159752-6aa8-4a7f-81ac-369aad108d48-3822": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5f6ec652-8c34-4f3f-942d-7a67af27b29b-7365": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-8d8948c8-18ac-4668-8270-313daee4f2cb-526": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-25c9d827-7093-4b24-b436-e8ddbedb6ec8-6157": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-36bed098-c232-4457-b334-627667387d88-7692": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-9b96a4b8-390a-41fe-be49-b910903d3774-4839": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4327c11c-59c7-4377-9ebd-e552680d75de-8898": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-efbb4bc9-fbde-4283-9c65-48be6c4f223e-8130": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-0d3f13e5-d424-4b81-9cf0-3487e9c5ebaf-862": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-705e2d81-5cb1-45d7-9f23-70ab4605e772-9750": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-618ed687-1d99-4fd9-a0b5-9507627e82dd-1163": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-6bd62d67-5f2e-422b-8cdf-55a21227c99c-7991": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-1b5dfc95-bae8-433d-bbe1-d099f5a45225-5006": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-35e7b079-97e5-44a2-a1fa-af1fcd72e03a-316": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-5d2ff014-fd47-44e7-9a50-fb094a51ec75-8987": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-933a98df-87a6-4327-8a4a-27271e92e663-761": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d868c471-6795-4852-91e4-d62d9e20ac94-794": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5bc3606a-3bef-4705-aac1-2e9404cb6342-5553": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-44fc54d1-107c-4be3-bb79-59bd3e1a7dcd-2287": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4990bc54-eb48-4849-b914-b340bffec24e-9131": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-42b8bc79-cff3-4bcb-b746-ab8e07ca7ea9-8883": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-04abc5e2-0903-4b61-aaa3-8dae6c8d32c2-142": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-a1cb2860-1bac-4da4-b7ac-3b655808ed1d-7774": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];",
        "#x-6e6e38d6-d263-4b9c-9ce1-448560149a08-4001": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-91a6ad88-d10b-45bc-8bf8-4242e40aa0b7-6588": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-86fffcda-e151-4657-a4fd-a949c56c9015-8327": "flex: 4 4 1px;",
        "#x-270fb9cb-a5a3-40cf-ac4c-f141251a0d5d-4654": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-7a521dc2-1b69-416d-bba7-a8cd3fc1799e-8167": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-e5c41e99-a2d7-4ffd-a990-065afd43a9ca-2388": "flex: 4 4 1px;",
        "#x-85e91c7f-c2d3-413b-beed-0f6bfbf98e3b-9661": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-3d4fb278-8a80-4da9-8370-8f9d245a5fbb-693": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-558151a2-e2ad-481e-8ec2-72f544d71bde-9747": "flex: 4 4 1px;",
        "#x-88b8c843-cafa-42e0-af10-dfcbe497ea73-8093": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};",
        "events_loginform_onsubmit": "const events_loginform_onsubmit = async (event) => {\n    event.preventDefault();\n    const element = event.target;\n    if (!validateForm(element)) {\n        return;\n    }\n    const data = wxfns.getFormData(element);\n    const result = await wxfns.transaction(element, 'login', data, true);\n    if (result.rc != 'success') {\n        element.getElementsByClassName('form_error')[0].innerText = result.rc;\n        return;\n    }\n    const user = result.output;\n    setUser(user);\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: user\n    });\n    element.dispatchEvent(_event);\n    const [action, args] = element.getAttribute('action').trim().split(/\\s*\\:\\s*/);\n    if (action == 'reload') {\n        location.reload();\n        return;\n    }\n    if (action == 'redirect') {\n        location.href = args;\n        return;\n    }\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "login",
      "allow": ""
    },
    "layout-example": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-aebfd917-ce86-4976-8067-0c56056ad65c-3506": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-2c846c7e-7db1-4551-8473-94ac0998762a-1967": "#x-2c846c7e-7db1-4551-8473-94ac0998762a-1967 > img {aspect-ratio: [$aspect-ratio||auto];}#x-2c846c7e-7db1-4551-8473-94ac0998762a-1967.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143": "#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navitem:hover { color: blue }#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-e76a981f-5451-495f-95f0-a16acf153da9-7730": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-36fcb8fa-9b45-4fd6-981b-b4910132f5b4-9861": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-d35abcf1-9553-40b9-ba28-bd0eb92f10d5-9227": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-0bd05fd6-f4a6-40e9-aaca-cf4f873cbe9f-4481": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-72af2387-3132-42eb-8c39-a3841fc29986-6823": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-c79c4272-3a81-484a-b3b4-5d381d9e74c9-1288": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-37987cf2-fb25-46e4-8fdc-0c2709af1148-596": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5b8ac4b5-7e80-4268-bb62-490666f0896d-9831": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-ac790b43-cc8c-486c-8f50-f0f5fedfca88-2128": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-d49f27e8-14ec-4dca-a40f-2b3730e3722c-7400": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-c4d20599-ccf0-453c-995c-7f66a438654a-9520": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-92f4d8ee-ef71-46eb-b01d-b8f53e55542f-6308": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d97ac91d-c8aa-4d18-aee8-5807063b4629-3716": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-adf1775a-036f-41f1-9b1c-c37addc4b611-9197": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-90fdc2a7-b7d3-4332-ba6d-d35bb32c5d48-9665": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-27052bdb-aef1-41e4-8baa-9a128b73c810-710": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-dd9da8df-bbc3-4943-9d49-ecdb2811831c-2736": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-2c5c08cd-f405-41b8-be16-75f07177749a-8272": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-2300d3ef-a595-4981-9153-d5bd898c03fd-8245": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6152c6ae-34ba-47b4-8eec-5c1dd306a287-110": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-a6148b34-ec4b-4574-8d8f-5d223b1c167c-8820": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-4fd0a9a1-61f3-4a1f-9ba7-3a5a57e7b670-9287": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-e5ce6743-77fe-438d-9986-a42d9a6f4aed-7089": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-7382570b-2085-4dc9-afd3-23757455fae6-7071": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-22a487c8-f1ed-420c-8c03-469ba439d0ab-9254": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-b5c96e75-b75c-4d87-a9e9-7de7d07cba99-8627": "max-width: 1000px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-484f7d41-b7eb-4e94-a2b5-11bc9d8ef30b-7864": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-0578dba5-7ba9-4466-9158-b08709230b5e-7224": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-134e5855-dd86-4aa5-b04d-906b2ae5613b-3964": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-2c846c7e-7db1-4551-8473-94ac0998762a-1967": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-21408d51-7b9d-4bd8-bcf2-de8a6fd96e9b-820": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-ae49f5ef-a475-4b8e-b93a-7b878a250e3e-405": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-6e7a6018-6a4c-46b9-9e15-3fd6aaff6d10-4269": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-f86c4ff7-d611-4f67-83a1-4b26534b1a34-241": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-8e81cd31-ee83-4250-8f30-1b4b68299476-2359": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-39e2a6d5-3b0e-41c9-9775-976d06cffa39-4207": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-0e199895-8c72-4a1e-bca2-ac2bff31fc9c-2308": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-524b4863-cf99-4581-9f5b-c149df49afee-9258": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-61b1c3f0-36b6-4e42-8e92-4b244671e5a8-8005": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-73bd0d68-e358-41d4-82e1-65fd57bf82e6-6143": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        ".wx-xten-container": "display: block;",
        "#x-f20131c3-69fa-4592-ac3b-0a52e965eae9-4456": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-4a141776-ef74-4b1e-904d-71f97e3958e0-1839": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-center": "display: flex;width: 100%;height: 100%;justify-content: center;align-items: center;",
        "#x-1596dc61-2aef-4e64-88e6-850932c1779c-8905": "flex: 3 3 1px;",
        "#x-51e109cb-1d25-4796-8ba7-26afd1638728-3633": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-892366be-93e0-4eee-a830-640cbfee2b80-7203": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-557b5a51-df9b-465e-b16a-5ce63923bf03-2749": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-47d46d85-6092-4a60-90de-d80d53a4addb-860": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-cf7b7bda-d768-4f91-b9a2-34bf3b3bd1b4-2420": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-3fff5a3a-fd2e-4831-b495-827cc5499741-19": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-373e2d0f-0385-4d79-8470-546624ed9e21-797": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-ccdad6fd-d8e1-4de3-b879-157cbc024840-3911": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-2506944e-df04-449a-b01e-887c6cfe0226-6927": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-b2b499b8-92b8-47e2-a568-2eec90e03e62-9239": "flex: 5 5 1px;",
        "#x-ddba9aef-6be7-4bfa-b25f-a034f4800971-1684": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-ab7d50e7-4c58-40d6-a18d-a680201995e2-6939": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-8a8b1841-7fdb-4b2a-ae56-3c907512481d-1486": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "layout-example",
      "allow": ""
    },
    "blog-post-default": {
      "serverfilePath": "demo.xml",
      "siteRoot": "sites/demo/",
      "cachePath": "sites/demo/_cache/",
      "css": {
        "test": ".test { color: red; }",
        "body": "[show] {display: none;}",
        "configuration": ".wx-xten-configuration .wx-xten-toolbar {position: relative !important;display: flex !important;align-items: center;top: 0;left: 0;right: auto;z-index: 0;}.wx-xten-configuration .wx-xten-toolbar .wx-xten-tooltip {left: 0;z-index: 1;right: auto;}.wx-xten-configuration .config-name {margin-right: 15px;margin-left: 5px;font-weight: bold;}.wx-xten-configuration .page-errors-notification {display: none; margin-left: 10px; color: red; font-weight: bold;}.wx-xten-configuration .wx-xten-toolbar > .close {display: none;}.wx-xten-configuration .wx-xten-toolbar > .save {display: none;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-configuration.background-changed .wx-xten-toolbar > .save {display: inline-block;}body {position: relative;background-size: cover;background-repeat: no-repeat;}body::before {content: \"\";display: block;position: absolute;top: 0;left: 0;width: 100%;height: 100%;opacity: var(--page-filter-opacity);background-color: var(--page-filter-color);}",
        "x-99393994-b30f-4089-b046-8bc5699bcd6f-3574": "body::before {z-index: [$index||-1];}",
        "icon": ".wx-xten-icon > .icon-code {width: 100%;height: 100%;}",
        "fitwidth": ".wx-xten-fitwidth > * {width: 100%;height: auto;}.wx-xten-fitwidth > * > img {display: block;width: 100%;height: auto;}",
        "image": ".wx-xten-image > .wx-xten-toolbar {display: none;position: relative;}.wx-xten-image.wx-state-editable .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed .wx-xten-toolbar {display: inline-block;}.wx-xten-image.image-changed {border: 5px solid red;}.wx-xten-image > img {width: 100%;height: 100%;object-fit: cover;object-position: center;}.wx-xten-image > .wx-xten-toolbar > .close {display: none;}.wx-xten-image > .wx-xten-toolbar > .save {display: none;}.wx-xten-image.image-changed > .wx-xten-toolbar > .close {display: inline-block;}.wx-xten-image.image-changed > .wx-xten-toolbar > .save {display: inline-block;}",
        "x-8228a7ec-577e-4ccd-8b4c-374b3b13d15d-7076": "#x-8228a7ec-577e-4ccd-8b4c-374b3b13d15d-7076 > img {aspect-ratio: [$aspect-ratio||auto];}#x-8228a7ec-577e-4ccd-8b4c-374b3b13d15d-7076.wx-state-editable > .wx-xten-toolbar {display: inline-block;position: absolute;top: [$toolbar-top||0];left: [$toolbar-left||0];right: [$toolbar-right||auto];bottom: [$toolbar-bottom||auto];}",
        "navbar": ".wx-xten-navbar .wx-xten-navitem {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar > .wx-xten-navgroup {flex: [$nav-item-flex||1 0 0]; text-align: [$align-navitem||center]; justify-content: center;}.wx-xten-navbar .wx-xten-navitem::first {padding-left: 0;}.wx-xten-navbar .wx-xten-navitem::last {padding-right: 0;}",
        "x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889": "#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navgroup > .wx-xten-navbar {z-index:[$index||1];display:none;}#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navitem {cursor: [$nav-cursor||pointer];}#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navitem { text-decoration: none; [$navitem-style|| ] }#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navitem:hover { color: blue }#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navgroup:hover > .navclass-column {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navgroup:hover > .navclass-row {display:flex;position:absolute;top:[$nav-top||0];left:[$nav-left||0];}#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navgroup > .wx-xten-navitem { [$navitem-style|| ] }#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889 > .wx-xten-navgroup:hover > .wx-xten-navitem { color: blue }",
        "navitem": ".navclass-column > .wx-xten-navitem {text-align: left;}.wx-xten-navitem a {text-decoration: none; color: inherit;}",
        "object": ".wx-xten-object > .wx-xten-object-data-wrapper {position: relative;}.wx-xten-object > .view {display:none}.wx-xten-object > .wx-xten-object-data-wrapper > .wx-view-object-list-item {position: relative;}.wx-xten-object > .object-list-toolbar {display: none;}.wx-xten-object.wx-state-ediable > .object-list-toolbar {display: inline-block;}.wx-xten-object .wx-xten-object-item-toolbar {display: none;}.wx-xten-object.wx-state-editable .wx-xten-object-item-toolbar {display: none;}"
      },
      "stylesheets": {
        "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap": "https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap"
      },
      "style": {
        ".wx-xten-body": "padding: 0;margin: 0;font-family: Arial, Helvetica, sans-serif;",
        "#x-a892ec18-7e00-4ba2-bd90-4af04ec5b373-7242": "background-color: [$dynamic-background-color||#ffffff];",
        ".wx-xten-configuration": "display: none;background-color: white;border-bottom: 3px solid #84bbee;display: flex;align-items: center;background-color: #dfeaf4;",
        ".wx-xten-row": "display: flex;position: relative;",
        "#x-1064ebc0-d327-46bf-8790-84be2a8fccb4-8855": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        ".wx-xten-column": "position: relative;",
        "#x-80824942-4cd2-4b8c-ad24-def543bec32d-6182": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-2353668e-812d-4340-983c-08f6e5631968-3113": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-toolbar": "display: flex;gap: 1px;",
        "#x-98a0dc46-9a5c-4270-a039-b5c2b2e08cde-2338": "top: [$top||0];right: [$right||0];left: [$left||auto];bottom: [$bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        ".wx-xten-icon": "position: relative;display: inline-block;",
        "#x-1016dfaf-d80f-418b-b219-51c798d7e68d-1005": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: #dedede;[$icon-style||];",
        ".wx-xten-tooltip": "position: absolute;display: none;width: max-content;",
        "#x-e355a6d7-3ee0-4200-9882-1eda169ca31e-6956": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-378cf725-2c8d-4909-a4b8-badadcc9aa77-5328": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-60e93a21-be38-405a-9eca-da84d6bbaa03-2310": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-1896de39-bbb1-432c-aff1-193e8b61e23a-7422": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-b584c4bb-c2f9-410c-af76-8eed1ee7057a-8584": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-b6745a54-b258-4c92-995b-1d49096ba454-2702": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-ad7f60e8-716a-4998-86a7-e7f36fe3081d-9746": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-405cda38-746e-4ab2-b1bb-e2439916ce36-6244": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-6c33aba1-e3e7-444b-8a59-93e6594573b5-3974": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-386f00e2-7b5b-40a8-b384-8004b4b9e20a-7124": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-bbda0bbb-d678-4e3b-9d8c-415cd6f68058-6649": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-38fd3ba3-f7aa-429e-a0d6-fbe0db33a4b6-9744": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-1cc0f614-3633-4285-aaeb-3affcc5f6b10-1950": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-5c43b0b6-1ba8-4f1f-8f35-6bd82f6284df-6529": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d9d54d37-ab42-4ec9-9bd8-8a9012eecae5-6848": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-340757b8-6307-4d28-95a7-f41169d2cf11-4342": "flex: [$ratio||1] [$ratio||0] 1px;",
        "#x-bb06d28c-67bd-49be-a3a3-1e5216f03cca-632": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-db8325f4-8aae-4f54-a364-5e218bc82fe6-8501": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-48ef459f-029b-4a9e-891e-857a9f3febbc-6307": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-page-container": "width: 100%;margin: auto;background-color: white;",
        "#x-d2b8d5b0-fbf7-4c01-ad51-bebca40438f1-8933": "max-width: 900px;",
        ".wx-xten-layers": "position:relative;display: block;height: 100%;",
        ".wx-xten-layer": "position:absolute;",
        "#x-8393dc7b-4f37-4ad3-9e7b-ed033a0d924e-192": "top:[$layer-top||0];bottom:[$layer-bottom||0];left: [$layer-left||0];right: [$layer-right||0];z-index: -1;",
        ".wx-xten-page-content": "min-height: 100vh;",
        "#x-00cf8428-c9be-42ff-9dbc-186ac7f6ab33-8715": "width: [$width||100%];align-content: [$align||stretch];gap:[$item-gap||0];height:[$height||fit-content];flex-direction: [$direction||row];",
        "#x-7c8d9d52-06a0-4a01-a118-935099697c14-3668": "flex: [$ratio||1] [$ratio||0] 1px;",
        ".wx-xten-fitwidth": "display: block;width: 100%;overflow: hidden;position: relative;",
        ".wx-xten-image": "display: flex;position: relative;overflow: hidden;width: 100%;max-height: 100%;justify-content: center;align-items: center;",
        "#x-8228a7ec-577e-4ccd-8b4c-374b3b13d15d-7076": "aspect-ratio: [$aspect-ratio||auto];",
        "#x-a87ee716-e5da-4c73-a356-b74533421468-8144": "top: [$toolbar-top||0];right: [$toolbar-right||auto];left: [$toolbar-left||0];bottom: [$toolbar-bottom||auto];position: [$position||absolute];z-index: [$index||inherit];",
        "#x-48f1366d-5270-4ea1-9a15-7f16b825ab7b-6465": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-d5b78215-468a-4ee0-9016-001c081a89d6-2672": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c450fd7c-e5fe-40b0-9f41-fd084ef802b5-972": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-84d5e10e-737a-448e-8b25-4cbb5cde70bc-1950": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-6ebe0fd0-e534-498f-ad59-f00906c0698d-2733": "width: [$width||30px];height: [$height||30px];border: [$border||1px solid lightgrey];background: [$background-color||#fefefa];[$icon-style||];",
        "#x-63a7d4b1-4d59-4ab8-9d46-097c53130910-7991": "left: [$left||0];right: [$right||auto];top: [$top||calc(100%)];z-index: [$index||1];background-color: [$background||white];padding: [$padding||5px];border: [$border||1px solid grey];",
        "#x-c701c3c3-5685-4e08-8d84-6e1c73bfd310-6152": "flex: 8 8 1px;",
        ".wx-xten-align": "position: relative;display: flex;",
        "#x-7b91f4c3-e036-4501-896d-8eb8746a8902-1131": "width:[$width||100%];height:[$height||100%];justify-content: flex-end;align-items: [$vertical||center];",
        ".wx-xten-navbar": "display:flex;text-transform: uppercase;position: relative;",
        "#x-3b727e71-ebbe-4f97-96fe-ec9409145839-3889": "flex-direction: [$orientation||row];gap: 15px;",
        ".wx-xten-navitem": "display: inline-block;position: relative;text-decoration: none;color: inherit;",
        ".wx-xten-show": "display: none;",
        ".wx-xten-logout": "display: inline-block",
        "#x-42c4bf57-4dcb-4350-a644-d172f075c324-4008": "height: 20px;",
        ".wx-xten-object": "position: relative;",
        "#x-494e9c1c-dca8-425a-9359-d1e75cdd6f53-2899": "height: 20px;",
        "#x-2b2e0886-700a-4e30-8575-20aba1a9c709-9899": "width:[$width||100%];height:[$height||100%];justify-content: [$horizontal||center];align-items: [$vertical||center];"
      },
      "libs": {},
      "code": {
        "initElement['configuration']": "initElement['configuration'] = (element) => {\n    const access = checkAccess(element);\n    if (access) {\n        element.style.display = \"flex\";\n    } else {\n        element.style.display = \"none\";\n    }\n    if (document.querySelector('[error]') && access) {\n        document.querySelector('.page-errors-notification').style.display = 'block';\n    }\n    const backgroundImage = element.getAttribute('background-image');\n    if (backgroundImage) {\n        element.parentElement.style['background-image'] = backgroundImage;\n    } else {\n        element.parentElement.style['background-image'] = null;\n    }\n    const backgroundColor = element.getAttribute('background-color');\n    if (backgroundColor) {\n        element.parentElement.style['background-color'] = backgroundColor;\n    } else {\n        element.parentElement.style['background-color'] = 'none';\n    }\n    const underlayColor = element.getAttribute('page-filter-color');\n    if (underlayColor) {\n        element.parentElement.style.setProperty('--page-filter-color', underlayColor);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-color', 'none');\n    }\n    const underlayOpacity = element.getAttribute('page-filter-opacity');\n    if (underlayOpacity) {\n        element.parentElement.style.setProperty('--page-filter-opacity', underlayOpacity);\n    } else {\n        element.parentElement.style.setProperty('--page-filter-opacity', 'none');\n    }\n};",
        "initElement['tooltip']": "initElement['tooltip'] = (element) => {\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    const parentElement = element.parentElement;\n    parentElement.addEventListener('mouseenter', () => {\n        element.style.display = 'block';\n        const tooltipRect = element.getBoundingClientRect();\n        if ((tooltipRect.left + tooltipRect.width) > screenWidth) {\n            element.style.right = 0;\n            element.style.left = 'auto';\n        }\n        if ((tooltipRect.top + tooltipRect.height) > screenHeight) {\n            element.style.top = '-' + tooltipRect.height + 'px';\n        }\n    });\n    parentElement.addEventListener('mouseleave', () => {\n        element.style.display = 'none';\n    });\n};",
        "_backgroundSaveImage": "const _backgroundSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-image');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + toolbarParent['uploaded-url'] + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-image', '[$value]');\n        } else {\n            fntarget.setAttribute('background-image', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundCancelImage": "const _backgroundCancelImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = toolbarParent.closest('.wx-xten-configuration').getAttribute('background-image');;\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.removeClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundUploadImage": "const _backgroundUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-image'] = '[$value]';\n        } else {\n            fntarget.style['background-image'] = 'url(' + URL.createObjectURL(toolbarParent['changed-file']) + ')';\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('.wx-xten-configuration' != 'null') {\n            fntarget = toolbarParent.closest('.wx-xten-configuration');\n        }\n        wxfns.addClass(fntarget, 'background-changed');\n    }\n};",
        "_backgroundColor": "const _backgroundColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['background-color'] = '[$value]';\n        } else {\n            fntarget['background-color'] = toolbarParent.getAttribute('background-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"background-color\",\n            \"type\": \"color\",\n            \"value\": \"background-color\",\n            \"title\": \"Background Color\",\n            \"class\": \"background-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('background-color', 'color', 'Background Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['background-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.background-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['background-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style['background-color'] = '[$value]';\n        } else {\n            fntarget.style['background-color'] = toolbarParent['background-color'];\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('background-color', '[$value]');\n        } else {\n            fntarget.setAttribute('background-color', toolbarParent['background-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['background-color'];\n    }\n};",
        "_backgroundFilterColor": "const _backgroundFilterColor = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-color'] = '[$value]';\n        } else {\n            fntarget['page-filter-color'] = toolbarParent.getAttribute('page-filter-color');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-color\",\n            \"type\": \"color\",\n            \"value\": \"page-filter-color\",\n            \"title\": \"Page Filter Color\",\n            \"class\": \"page-filter-color\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-color', 'color', 'Page Filter Color', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-color'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-color');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-color']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-color', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-color', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-color', toolbarParent['page-filter-color']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-color'];\n    }\n};",
        "_backgroundFilterOpacity": "const _backgroundFilterOpacity = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget['page-filter-opacity'] = '[$value]';\n        } else {\n            fntarget['page-filter-opacity'] = toolbarParent.getAttribute('page-filter-opacity');\n        }\n    } {\n        var fntarget = toolbarParent;\n        const fargs = {\n            \"name\": \"page-filter-opacity\",\n            \"type\": \"number\",\n            \"min\": \"0\",\n            \"max\": \"1\",\n            \"step\": \"0.01\",\n            \"value\": \"page-filter-opacity\",\n            \"title\": \"Page Background Filter Opacity\",\n            \"class\": \"page-filter-opacity\"\n        };\n        fargs.value = toolbarParent[fargs.value];\n        const value = await wxfns.getValue('page-filter-opacity', 'number', 'Page Background Filter Opacity', fargs);\n        if (value == null) {\n            return;\n        }\n        fntarget['page-filter-opacity'] = value;\n    } {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        eventCurrentTarget.setAttribute('field-selector', 'page-configuration.page-filter-opacity');\n        const result = await wxfns.upload(eventCurrentTarget, 'save-page-data', toolbarParent['page-filter-opacity']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.style.setProperty('--page-filter-opacity', '[$value]');\n        } else {\n            fntarget.style.setProperty('--page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('page-filter-opacity', '[$value]');\n        } else {\n            fntarget.setAttribute('page-filter-opacity', toolbarParent['page-filter-opacity']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['page-filter-opacity'];\n    }\n};",
        "_deletePageBackground": "const _deletePageBackground = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        const element = eventCurrentTarget.closest('[xten=\"configuration\"]');\n        if (element.getAttribute('object-name')) {\n            eventCurrentTarget.setAttribute('object-name', element.getAttribute('object-name'));\n        } else {\n            eventCurrentTarget.removeAttribute('object-name');\n        }\n        const result = await wxfns.transaction(element, 'delete-background', {\n            name: element.getAttribute('name')\n        });\n        if (result.rc != 'success') {\n            return;\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-image'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-image');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style['background-color'] = null;\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('background-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-color');\n    } {\n        var fntarget = toolbarParent;\n        if ('body' != 'null') {\n            fntarget = toolbarParent.closest('body');\n        }\n        fntarget.style.removeProperty('--page-filter-opacity');\n    } {\n        var fntarget = toolbarParent;\n        fntarget.removeAttribute('page-filter-opacity');\n    }\n};",
        "initElement['image']": "initElement['image'] = (element) => {\n    const ratio = parseFloat(element.getAttribute('aspect-ratio') || 0);\n    if (ratio) {\n        element.style.height = (element.offsetWidth * ratio) + 'px';\n    }\n    element.setAttribute('src', element.querySelector('img').getAttribute('src'));\n};",
        "_imageSaveImage": "const _imageSaveImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        var formData = null;\n        const result = await wxfns.upload(toolbarParent, 'save-image', null, toolbarParent['changed-file']);\n        if (result.rc != 'success') {\n            return;\n        }\n        toolbarParent['uploaded-url'] = result.output;\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent['uploaded-url']);\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['uploaded-url'];\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageCancelImageSave": "const _imageCancelImageSave = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', toolbarParent.getAttribute('src'));\n        }\n    } {\n        var fntarget = toolbarParent;\n        delete fntarget['changed-file'];\n    } {\n        var fntarget = toolbarParent;\n        wxfns.removeClass(fntarget, 'image-changed');\n    }\n};",
        "_imageUploadImage": "const _imageUploadImage = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        toolbarParent['changed-file'] = await wxfns.selectFile('image/*');\n    } {\n        var fntarget = toolbarParent;\n        if ('img' != 'null') {\n            fntarget = toolbarParent.querySelector('img');\n        }\n        if ('[$value||null]' != 'null') {\n            fntarget.setAttribute('src', '[$value]');\n        } else {\n            fntarget.setAttribute('src', URL.createObjectURL(toolbarParent['changed-file']));\n        }\n    } {\n        var fntarget = toolbarParent;\n        wxfns.addClass(fntarget, 'image-changed');\n    }\n};",
        "events_navitem_onclick": "const events_navitem_onclick = async (event) => {\n    event.preventDefault();\n    var eventTarget = event.target;\n    var eventCurrentTarget = event.currentTarget;\n    var toolbarParent = wxfns.getToolbarParent(event);\n    {\n        var fntarget = toolbarParent;\n        event.preventDefault();\n        element = event.target;\n        const href = element.getAttribute('href');\n        if (href && href != '#') {\n            window.location.href = href;\n        }\n    }\n};",
        "initElement['show']": "initElement['show'] = (element) => {\n    const user = getUser();\n    const role = user ? user.role.trim() : 'public';\n    var allow = element.getAttribute('role');\n    if (allow == 'logged_in') {\n        if (role != 'public') {\n            element.style.display = 'initial';\n        }\n        return;\n    }\n    allow = allow ? allow.split(/\\s*\\,\\s*/) : [];\n    if (allow.includes(role)) {\n        element.style.display = 'initial';\n    }\n};",
        "events_logout_onclick": "const events_logout_onclick = async (event) => {\n    event.preventDefault();\n    clearUser();\n    const element = event.target;\n    const _event = new CustomEvent('changeUser', {\n        bubbles: true,\n        detail: null\n    });\n    element.dispatchEvent(_event);\n    await wxfns.transaction(element, 'logout', null);\n    window.location.reload();\n};"
      },
      "tablet": {
        ".row": "flex-direction:[$tablet-direction||row];"
      },
      "phone": {
        ".row": "flex-direction:[$phone-direction||column];"
      },
      "vars": {},
      "tabletWidth": "800",
      "phoneWidth": "600",
      "pageName": "blog-post-default",
      "allow": ""
    }
  }
}