const validations = {};validations['regex'] = (value, args) => {if (!args.length) { return 'invalid validation syntax'; } const message = args.length > 1 ? args[1] : 'input does not confirm to pattern'; const regex = new RegExp(args[0]); return regex.test(value) ? null : message;};validations['integer'] = (value, args) => {return /^[0-9]+$/.test(value) ? null : 'not a valid integer';};validations['email'] = (value, args) => {return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value) ? null : 'not a valid email';};validations['phone'] = (value, args) => {return /^\+?[0-9][0-9\-\s]+$/.test(value) ? null : 'not a valid phone';};validations['bool'] = (value, args) => {return value == 'true' || value == true || value == 'false' || value == false ? null : 'not boolean';};validations['true'] = (value, args) => {return value == 'true' || value == true ? null : 'not true';};