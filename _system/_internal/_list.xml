<xten name="_list" element="_hidden">
    <toolbar name="list-toolbar" class="list-toolbar" right="31px">
        <icon name="add">
            <tooltip>add new list item</tooltip>
            <click fname="_lstAddNewChild">
            <%
                const urlParams = new URLSearchParams(window.location.search);
                const demo = urlParams.get('demo') == 'yes';

                if (demo) {
                    wxfns.inform('New items can be added by simply clicking plus');
                    return;
                }
                
                var element = wxfns.getToolbarParent(event);
                const result = await element.transaction('add-list-item');
                element.refresh();
            %>
            </click>
        </icon>
    </toolbar>

    <style>
        position: relative;
    </style>

    <css>
        .wx-xten-_list > .wx-view-datalist {
            position: relative;
            display: flex;
            width: 100%;
        }

        .wx-xten-_list .list-item-toolbar {display: none;}
        .wx-xten-_list.wx-state-editable .list-item-toolbar {display: flex;}
        .wx-xten-_list .list-toolbar {display: none;}
        .wx-xten-_list.wx-state-editable .list-toolbar {display: flex;}
    </css>

    <initElement>
    <%
        const urlParams = new URLSearchParams(window.location.search);
        const demo = urlParams.get('demo') == 'yes';

        if (demo) {
            element.addClass('wx-state-editable');
            return;
        }
    %>
    </initElement>

    <init>
    <%
        if (node.listInitialized) {
            return;
        }

        const toolbar = node.findChild('toolbar');
        toolbar.remove();
        const children = node.children;

        node.empty();

        const template = node.newChild('div');
        template.attribs.name = 'list-item-view';
        template.attribs.element = '_hidden';
        template.insertChildren(0, children);

        const list = node.newChild('div');
        list.attribs.name = 'wx-view-datalist';
        list.addClass('wx-view-datalist');
        node.addChild(toolbar);
    %>
    </init>

    <load>
    <%
        var startTime = common.startTimer();
        const list = node.findNamedChild('div', 'wx-view-datalist');
        list.empty();

        const name = node.getValue('name');

        if (!node.reload) {
            const parent = node.closest('listitem');
            const parentSelector = parent ? (parent.attribs['data-selector'] + '.') : '';
            
            node.attribs['data-selector'] = parentSelector + name;
        }

        const value = await database.inlineValue(node, context, xten);
        if (!value || !value.length) {
            node.attribs['item-count'] = '0';
            return;
        }

        node.attribs['item-count'] = value.length.toString();

        const template = node.findNamedChild('div', 'list-item-view');

        for (var i = 0; i < value.length; i++) {
            const listitem = list.newChild('listitem', 'last');
            listitem.attribs['list-idx'] = i.toString();
            listitem.attribs['serial-number'] = (i + 1).toString();
            listitem.attribs.name = name;
            listitem.attribs['list-name'] = name;
            xtensions.processXtens(listitem, context);

            listitem.attribs['data-selector'] = node.attribs['data-selector'] + '.' + i.toString();

            template.children.forEach(child => {
                const _child = child.clone();
                _child.iterate(_ch => {
                    const listChild = _ch.attribs['list-child'];
                    if (!listChild) {
                        return;
                    }

                    if (listChild === 'true' || listChild == name) {
                        _ch.attribs['data-selector'] = listitem.attribs['data-selector'] + '.' + _ch.attribs.name;
                        _ch.attribs['list-idx'] = i.toString();
                        return;
                    }

                    const parent = node.closest('[list-name="' + listChild + '"]');
                    if (!parent) {
                        return;
                    }

                    _ch.attribs['data-selector'] = parent.attribs['data-selector'] + '.' + _ch.attribs.name;
                });

                listitem.addChild(_child);
            });

            if (i == 0) {
                listitem.addClass('active');
            }

            common.substituteVars(listitem, listitem.attribs);
            common.substituteVars(listitem, node.attribs);
        }
        /*common.endTimer(startTime, '=> _list load.');*/
    %>
    </load>
</xten>

<xten name="listitem" element="div">
    <style>
        position: relative;
    </style>

    <toolbar name="list-item-toolbar" index="1">
        <icon name="remove">
            <tooltip>delete list item</tooltip>
            <click fname="_listItemRemove">
            <%
                const urlParams = new URLSearchParams(window.location.search);
                const demo = urlParams.get('demo') == 'yes';

                if (demo) {
                    wxfns.inform('Items can be deleted by simply clicking trashcan');
                    return;
                }
                
                var element = wxfns.getToolbarParent(event);
                const result = await element.transaction('delete-list-item');
                const list = element.closest('.wx-xten-_list');
                list.refresh();
            %>
            </click>
        </icon>
    </toolbar>

    <initElement>
    <%
        const urlParams = new URLSearchParams(window.location.search);
        const demo = urlParams.get('demo') == 'yes';

        if (demo) {
            element.addClass('wx-state-editable');
            return;
        }
    %>
    </initElement>
</xten>
