<xten name="image-list" element="div">
    <style>
        width: 100%;
        height: 100%;
        overflow-y: scroll;
        background-color: #f3f3f3;
        border: 1px solid lightgrey;
    </style>

    <css>
        .wx-xten-image-list ._heading {background-color: lightgrey; padding: 5px; text-align: center; font-weight: bold; border: 1px solid black}
        .wx-xten-image-list .list-container {display: flex; align-items: center; gap: 10px; align-items: stretch; flex-wrap: wrap;}
        .wx-xten-image-list .list-item {flex: 200px 200px 0; width: 200px; border: 1px solid lightgrey; text-align: center; position: relative;}
        .wx-xten-image-list .list-item img {object-fit: cover; object-position: center; width: 100%; aspect-ratio: calc(16/9);}
        .wx-xten-image-list .list-item .file-name {display: block; background-color: white; border: 1px solid lightgrey; padding: 5px;}
        .wx-xten-image-list .list-item.selected {background-color: grey; border: 2px solid blue;}
        .wx-xten-image-list .button-panel {padding-top: 10px; text-align: center;}
        .wx-xten-image-list .button-panel button {padding: 10px; text-align: center; background-color: lightblue; font-size: 20px;}
    </css>

    <view>
        <modal name="image-list-dialog" heading="Image List">
            <div name="list-container"></div>
            <div name="button-panel">
                <button name="select-image">
                    <span>Select</span>
                    <click fname="_ilbSelectFile">
                    <%
                        const element = event.target.closest('.wx-xten-image-list');
                        element.modal.save(element._selected);
                        const container = element.querySelector('.list-container');
                        container.innerHTML = '';
                    %>
                    </click>
                </button>
                <button name="cancel">
                    <span>Cancel</span>
                    <click fname="_ilbCancel">
                    <%
                        const element = event.target.closest('.wx-xten-image-list');
                        element.modal.cancel();
                        const container = element.querySelector('.list-container');
                        container.innerHTML = '';
                    %>
                    </click>
                </button>
            </div>
        </modal>
    </view>

    <initElement>
    <%
        element.modal = element.querySelector('.wx-xten-modal');

        element.addEventListener('modal-image-list-dialog-opened', async (event) => {
            const selectedFile = event.detail ? event.detail.split('/').pop() : null;
            const result = await wxfns.transaction(element, 'get-uploaded-files', {folder: 'images', exts: 'svg, png, jpg, tiff, jpeg, bmp, gif, ico, webp'});
            if (result.rc != 'success') {
                wxfns.error('Error getting files', result.rc);
                return null;
            }
            const container = element.querySelector('.list-container');
            container.innerHTML = '';
            result.output.files.forEach(_file => {
                const li = document.createElement('div');
                li.addClass('list-item');
                const image = document.createElement('img');
                image.src = 'uploads/images/' + _file;

                const title = document.createElement('div');
                title.addClass('file-name');
                title.innerText = _file;
                if (_file == selectedFile) {
                    li.addClass('selected');
                }
                
                li.appendChild(image);
                li.appendChild(title);
                li.addEventListener('click', (event) => {
                    const list = container.querySelectorAll('.selected');
                    list.forEach(active => {
                        active.removeClass('selected');
                    });
                    const current = event.target.closest('.list-item');
                    current.addClass('selected');
                    element._selected = 'uploads/images/' + _file;
                });

                li.addEventListener('dblclick', () => {
                    element._selected = 'uploads/images/' + _file;
                    element.modal.save(element._selected);
                });

                li.addEventListener('touchend', (event) => {
                    const currentTime = new Date().getTime();
                    const tapTime = currentTime - lastTapTime;

                    if (tapTime < 300 && tapTime > 0) {
                        element._selected = 'uploads/images/' + _file;
                        element.modal.save(element._selected);                        
                        event.preventDefault();
                        return;
                    }

                    lastTapTime = currentTime;

                    const list = container.querySelectorAll('.selected');
                    list.forEach(active => {
                        active.removeClass('selected');
                    });

                    const current = event.target.closest('.list-item');
                    current.addClass('selected');
                    element._selected = 'uploads/images/' + _file;
                });

                container.appendChild(li);
            });
        });
    %>
    </initElement>
</xten>
