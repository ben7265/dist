<xten name="email-form" extend="smtp-config" element="form" public="true">
    <view enhance="append">
        <node-content />
    </view>

    <submit>
    <%
        const data = element.validatedFormData();
        if (!data) {
            return;
        }

        const result = await element.transaction('email-form', data);
        if (result.rc != 'success') {
            return;
        }

        element.clearForm();
        const message = element.getAttribute('message') || 'Email sent successfully';
        message && wxfns.inform(message);
    %>
    </submit>

    <txn name="email-form">
    <%
        if (data.gotcha) {
            return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};
        }

        if (!data['check-human']) {
            return {rc: 'bots-not-allowed', output: 'Bots are not allowed to make calls to server'};
        }

        const name = attribs.name;
        const smtpScope = attribs['smtp-settings'] || '_all';
        const smtp = await database.getConstant('smtp-settings', smtpScope, user, context);
        if (!smtp) {
            return {rc: 'smtp-configuration', output: 'SMTP must be configured for this form'};
        }

        const toconfig = await database.getConstant('to-email-config', name, user, context);

        delete data.gotcha;
        delete data['check-human'];
        
        var html = '<table>';
        html += '<tbody>';

        for (var prop in data) {
            html += '<tr>';
            html += '<td>';
            html += prop;
            html += '</td>';
            html += '<td>';
            html += data[prop];
            html += '</td>';
            html += '</tr>';
        }

        html += '</tbody>';
        html += '</table>';

        toconfig['email-text'] = 
            '<html><body>' +
            common.substitute(toconfig['email-text'], {'form-data': html}) +
            '</body></html>';

        const result = await require('./mailer').sendMail(smtp, smtp.from, toconfig);
        if (result) {
            return {rc: 'sendmail-error', output: result};
        }
        return {rc: 'success'};
    %>
    </txn>
</xten>
