<xten name="carousel" extend="banner">
    <css>
        .wx-xten-carousel > .wx-view-datalist {
            position: relative;
            display: block;
            width: 100%;
        }
        .wx-xten-wx-xten-carousel .list-item-toolbar {display: none; position: relative; }
        .wx-xten-wx-xten-carousel.wx-state-editable .wx-xten-listitem.active .list-item-toolbar {display: flex; right: 0;}
        .wx-xten-wx-xten-carousel .list-toolbar {display: none;}
        .wx-xten-wx-xten-carousel.wx-state-editable .list-toolbar {display: flex; }

        .wx-xten-carousel .wx-xten-listitem {
            display: none;
        }

        .wx-xten-carousel.wx-state-editable .wx-xten-listitem {
            display: none;
            width: 100%;
        }

        .wx-xten-carousel.wx-state-editable .wx-xten-listitem.active {
            display: block;
        }

        .wx-xten-carousel.start-show.wx-state-editable .wx-xten-icon.add {display: none;}
        .wx-xten-carousel.start-show.wx-state-editable .list-item-toolbar {display: none;}
        .wx-xten-carousel.start-show.wx-state-editable .wx-xten-listitem .wx-xten-toolbar {display: none;}

        .wx-xten-carousel .banner-controls {display: none;}
        .wx-xten-carousel.wx-state-editable .banner-controls {display: inline-block;}

        .wx-xten-carousel.start-show .banner-controls {display: none;}

        .wx-xten-carousel .show-button {display: none;}
        .wx-xten-carousel .stop-button {display: none;}

        .wx-xten-carousel.wx-state-editable .show-button {display: initial;}
        .wx-xten-carousel.wx-state-editable .stop-button {display: none;}

        .wx-xten-carousel.start-show.wx-state-editable .show-button {display: none;}
        .wx-xten-carousel.start-show.wx-state-editable .stop-button {display: initial;}

        .wx-xten-carousel.start-show .wx-xten-listitem {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: block;
            opacity: 0;
            transition: all 2s;
        }

        .wx-xten-carousel.start-show .wx-xten-listitem.active {
            opacity: 1;
            transition: all 2s;
        }

    </css>

    <cssNode>
        #[$id] > .wx-view-datalist {
            aspect-ratio: [$aspect-ratio||1];
        }
    </cssNode>

    <initElement>
    <%
        if (wxfns.hasClass(element, 'wx-state-editable')) {
            return;
        }

        var time = element.getAttribute('interval');
        if (!time) {
            return;
        }

        time = parseInt(time) * 1000;
        if (!time) {
            element.setAttribute('error', 'interval value is incorrect');
            return;
        }

        var idx = 0;
        setInterval(() => {
            var active = element.querySelector('.wx-xten-listitem.active');
            if (active) {
                active.classList.remove('active');
            }
            var total = element.querySelectorAll('.wx-xten-listitem').length;
            idx = idx == total - 1 ? 0 : idx + 1;
            const target = element.querySelector('.wx-xten-listitem[list-idx="' + idx.toString() + '"]');
            target && target.classList.add('active');
        }, time);
    %>
    </initElement>

    <toolbar enhance="append">
        <icon name="show" class="show-button">
            <tooltip>Start Slide Show</tooltip>
            <click>
                <add-class classes="start-show" />
                <code>
                <%
                    const element = fntarget;
                    var time = element.getAttribute('interval');
                    if (!time) {
                        wxfns.error('Error running slide show', 'no interval defined in element wxml');
                        return;
                    }

                    time = parseInt(time) * 1000;
                    if (!time) {
                        wxfns.error('Error running slide show', 'invalid value in interval');
                        return;
                    }

                    var idx = 0;
                    element.interval = setInterval(() => {
                        var active = element.querySelector('.wx-xten-listitem.active');
                        if (active) {
                            active.classList.remove('active');
                        }
                        var total = element.querySelectorAll('.wx-xten-listitem').length;
                        idx = idx == total - 1 ? 0 : idx + 1;
                        const target = element.querySelector('.wx-xten-listitem[list-idx="' + idx.toString() + '"]');
                        target && target.classList.add('active');
                    }, time);
                %>
                </code>
            </click>
        </icon>
        <icon name="stop" class="stop-button">
            <tooltip>Stop Slide Show</tooltip>
            <click>
                <remove-class classes="start-show" />
                <code>
                    const element = fntarget;
                    clearInterval(element.interval);
                    delete element.interval;
                </code>
            </click>
        </icon>
    </toolbar>
</xten>
