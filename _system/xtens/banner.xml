<xten name="banner" extend="_list" element="div">
    <allow>owner, admin</allow>
    <mandatory>aspect-ratio</mandatory>
    <style>
        position: relative;
        background-color: #efefef;
    </style>

    <css>
        .wx-xten-banner > .wx-view-datalist {
            display: flex;
            position: relative;
            width: 100%;
        }

        .wx-xten-banner > .wx-view-datalist > .wx-xten-listitem {
            display: none;
            width: 100%;
            aspect-ratio: [$aspect-ratio||1];
        }

        .wx-xten-banner > .wx-view-datalist > .wx-xten-listitem.active {
            display: block;
        }

        .wx-xten-banner .list-item-toolbar {display: none;}
        .wx-xten-banner.wx-state-editable .list-item-toolbar {display: inline-block;}
        .wx-xten-banner .list-item-toolbar {display: none;}
        .wx-xten-banner.wx-state-editable .list-toolbar {display: inline-block;}
        .wx-xten-banner .banner-controls {display: none;}
        .wx-xten-banner.wx-state-editable .banner-controls {display: inline-block;}
    </css>

    <!--toolbar>
        <icon name="info">
            <tooltip>extra buttons</tooltip>
        </icon>
    </toolbar -->

    <view>
        <cover>
            <image name="banner-image" list-child="true" list-selector="[$name].$[list-idx]" aspect-ratio="[$aspect-ratio]" />
        </cover>
    </view>

    <data>
        <pos-left class="banner-controls">
            <icon name="left">
                <click>
                <%
                    const element = event.target.closest('.wx-xten-banner');
                    var active = element.querySelector('.wx-xten-listitem.active');
                    const idx = parseInt(active ? active.getAttribute('list-idx') : '0');
                    var total = element.querySelectorAll('.wx-xten-listitem').length;
                    active.classList.remove('active');
                    const next = idx == 0 ? total - 1 : idx - 1;
                    const target = element.querySelector('.wx-xten-listitem[list-idx="' + next.toString() + '"]');
                    target.classList.add('active');
                    const listToolbar = element.querySelector('.list-toolbar');
                    const itemToolbar = target.querySelector('.list-item-toolbar');
                    adjustToolbarPosition([listToolbar, itemToolbar]);
                %>
                </click>
            </icon>
        </pos-left>

        <pos-right class="banner-controls">
            <icon name="right">
                <click>
                <%
                    const element = event.target.closest('.wx-xten-banner');
                    var active = element.querySelector('.wx-xten-listitem.active');
                    const idx = parseInt(active ? active.getAttribute('list-idx') : '0');
                    var total = element.querySelectorAll('.wx-xten-listitem').length;
                    active.classList.remove('active');
                    const next = idx == total - 1 ? 0 : idx + 1;
                    const target = element.querySelector('.wx-xten-listitem[list-idx="' + next.toString() + '"]');
                    target.classList.add('active');
                    const listToolbar = element.querySelector('.list-toolbar');
                    const itemToolbar = target.querySelector('.list-item-toolbar');
                    adjustToolbarPosition([listToolbar, itemToolbar]);
                %>
                </click>
            </icon>
        </pos-right>

        <pos-bottom class="banner-controls">
            <repeat n="[$item-count]">
                <div name="slide-changer" style="display: inline-block; cursor: pointer; padding: 2px;">
                    <span>o</span>
                    <click>
                    <%
                        const element = event.target.closest('.wx-xten-banner');
                        var active = element.querySelector('.wx-xten-listitem.active');
                        const idx = active.getAttribute('list-idx');
                        active.classList.remove('active');
                        const clicked = event.target.closest('[name="slide-changer"]');
                        const target = element.querySelector('.wx-xten-listitem[list-idx="' + clicked.getAttribute('repeat-idx') + '"]');
                        target.classList.add('active');
                        const listToolbar = element.querySelector('.list-toolbar');
                        const itemToolbar = target.querySelector('.list-item-toolbar');
                        adjustToolbarPosition([listToolbar, itemToolbar]);
                    %>
                    </click>
                </div>
            </repeat>
        </pos-bottom>
    </data>

    <initElement>
        const item = element.querySelector('.wx-xten-listitem');
        if (item) {
            item.classList.add('active');
        }
    </initElement>

    <init>
    <%
        xten._data = {};
        const slide = xten.view[0].node;
        const placeholder = slide.newChild('container');
        const _toolbar = node.findChild('toolbar');
        const toolbar = _toolbar.clone();
        _toolbar.remove();
        placeholder.insertChildren(0, node.children);
        xten._data.children = slide.children;
        xten._data.name = node.getValue('name');
        slide.attribs.element = '_hidden';

        node.empty();
        const list = node.newChild('div');
        list.attribs.name = 'wx-view-datalist';
        list.addClass('wx-view-datalist');
        node.addChild(toolbar);
    %>
    </init>

    <load enhance="append">
        <%
        const data = xten.data.node;
        const left = data.findChild('pos-left').clone();
        processXtens(left, context);
        node.addChild(left);
        
        const right = data.findChild('pos-right').clone();
        processXtens(right, context);
        node.addChild(right);
        
        const bottom = data.findChild('pos-bottom').clone();
        common.substituteVars(bottom, node.attribs);
        processXtens(bottom, context);
        node.addChild(bottom);
        %>
    </load>
</xten>
